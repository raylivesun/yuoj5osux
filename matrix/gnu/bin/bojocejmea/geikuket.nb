(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    289340,       6871]
NotebookOptionsPosition[    275119,       6622]
NotebookOutlinePosition[    275558,       6639]
CellTagsIndexPosition[    275515,       6636]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
URLRead::invhttp: 
   Operation timed out after 10000 milliseconds with 0 bytes received.\
\>", "Message",
 CellChangeTimes->{3.95765882789841*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"fc34b479-28f4-427b-a4d9-34548ca11cd1"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "E^2/Sqrt[4/2]Exp[2]+Cosh[4]+Sinh[4]", 
   Typeset`newq$$ = "E^2/Sqrt[4/2]Exp[2]+Cosh[4]+Sinh[4]", Typeset`chosen$$ = 
   "(E^2/Sqrt[4/2])*Exp[2] + Cosh[4] + Sinh[4]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {3.173828125, 7.826171875}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {3.173828125, 7.826171875}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "E^2/Sqrt[4/2]Exp[2]+Cosh[4]+Sinh[4]", 
                  Defer[(E^2/Sqrt[4/2]) Exp[2] + Cosh[4] + Sinh[4]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"E", "^", "2"}], "/", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"4", "/", "2"}], "]"}]}], ")"}], "*", 
                   RowBox[{"Exp", "[", "2", "]"}]}], " ", "+", " ", 
                  RowBox[{"Cosh", "[", "4", "]"}], " ", "+", " ", 
                  RowBox[{"Sinh", "[", "4", "]"}]}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"E", "^", "2"}], "/", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"4", "/", "2"}], "]"}]}], ")"}], "*", 
                   RowBox[{"Exp", "[", "2", "]"}]}], " ", "+", " ", 
                  RowBox[{"Cosh", "[", "4", "]"}], " ", "+", " ", 
                  RowBox[{"Sinh", "[", "4", "]"}]}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"E", "^", "2"}], "/", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"4", "/", "2"}], "]"}]}], ")"}], "*", 
                    RowBox[{"Exp", "[", "2", "]"}]}], " ", "+", " ", 
                    RowBox[{"Cosh", "[", "4", "]"}], " ", "+", " ", 
                    RowBox[{"Sinh", "[", "4", "]"}]}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "E^2/Sqrt[4/2]Exp[2]+Cosh[4]+Sinh[4]", 
                    Defer[(E^2/Sqrt[4/2]) Exp[2] + Cosh[4] + Sinh[4]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"E", "^", "2"}], "/", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"4", "/", "2"}], "]"}]}], ")"}], "*", 
                    RowBox[{"Exp", "[", "2", "]"}]}], " ", "+", " ", 
                    RowBox[{"Cosh", "[", "4", "]"}], " ", "+", " ", 
                    RowBox[{"Sinh", "[", "4", "]"}]}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"E", "^", "2"}], "/", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"4", "/", "2"}], "]"}]}], ")"}], "*", 
                    RowBox[{"Exp", "[", "2", "]"}]}], " ", "+", " ", 
                    RowBox[{"Cosh", "[", "4", "]"}], " ", "+", " ", 
                    RowBox[{"Sinh", "[", "4", "]"}]}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"E", "^", "2"}], "/", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"4", "/", "2"}], "]"}]}], ")"}], "*", 
                    RowBox[{"Exp", "[", "2", "]"}]}], " ", "+", " ", 
                    RowBox[{"Cosh", "[", "4", "]"}], " ", "+", " ", 
                    RowBox[{"Sinh", "[", "4", "]"}]}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[1]:=",ExpressionUUID->"1c1a5709-ddb5-4452-856f-4098e593c28e"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["\[ExponentialE]", "4"], 
   SqrtBox["2"]], "+", 
  RowBox[{"Cosh", "[", "4", "]"}], "+", 
  RowBox[{"Sinh", "[", "4", "]"}]}]], "Output",
 CellChangeTimes->{3.957659287510467*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"8259573c-58f8-4add-a20d-7ababf62d4ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", "4"], 
    SqrtBox["2"]], "+", 
   RowBox[{"Cosh", "[", "4", "]"}], "+", 
   RowBox[{"Sinh", "[", "4", "]"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[3]:=",ExpressionUUID->"4db02d7e-4cb2-494f-af92-0d4ec38f5dbf"],

Cell[BoxData["93.20487216182104`"], "Output",
 CellChangeTimes->{3.957659366038164*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"3a3d83be-196e-43b3-bf5a-627f02b6bb58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPart", "[", "93.20487216182104`", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[4]:=",ExpressionUUID->"24d8a57d-e8b8-4644-b8af-50a46e0557f2"],

Cell[BoxData["93"], "Output",
 CellChangeTimes->{3.957659400180801*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"56f2c54e-4d45-477d-a1c4-fb0d052f350e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Divisors", "[", "93", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[5]:=",ExpressionUUID->"709d392d-04c1-44fc-af06-e25fff88fffc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "31", ",", "93"}], "}"}]], "Output",
 CellChangeTimes->{3.9576594306558743`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"6d4294be-6e3f-44d7-93cf-147fd4be27fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "3", ",", "31", ",", "93"}], "}"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[6]:=",ExpressionUUID->"533e440b-67e8-4422-bdf0-a10a904af6af"],

Cell[BoxData["32"], "Output",
 CellChangeTimes->{3.957659469481876*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"db1a2a16-9c76-487b-8167-0112ab6a46df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrimePi", "[", "32", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[7]:=",ExpressionUUID->"04fd8193-3dbd-4345-a210-583495c87500"],

Cell[BoxData["11"], "Output",
 CellChangeTimes->{3.957659481844149*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"82dcf064-8668-4505-9a8f-42fe809dba3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrimePi", "[", "11", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[8]:=",ExpressionUUID->"17ca5082-6155-41d1-91e6-0aeb3749b51b"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.957659496192255*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"560ec940-3de9-4463-a906-764ea69f48f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrimePi", "[", "5", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[9]:=",ExpressionUUID->"91142a34-a3d9-48ea-abf6-3382235367e0"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.957659505818421*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"92d3a54b-c247-41ff-bfd0-b336fd557ca3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrimePi", "[", "3", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[10]:=",ExpressionUUID->"abb3f532-5fcc-44be-b09f-e55582908c39"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.957659516581018*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"df385d8d-5c4c-48ef-a9c4-e60e8377f128"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DivisorSigma", "[", 
   RowBox[{"1", ",", "2"}], "]"}], "\[Equal]", 
  RowBox[{"2", " ", "2"}]}]], "Input",
 NumberMarks->False,
 CellLabel->"In[11]:=",ExpressionUUID->"b57884b9-c438-4447-b7ee-7aecfe66c2eb"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.957659521753509*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"7821df8d-c3a7-45df-b95f-9938994bd4e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "Cosh[2] + Sinh[2] + Exp[2]/Sqrt[2 + 2] + List[{2, 2}, {2, 2}, {2, 2}]", 
   Typeset`newq$$ = 
   "Cosh[2] + Sinh[2] + Exp[2]/Sqrt[2 + 2] + List[{2, 2}, {2, 2}, {2, 2}]", 
   Typeset`chosen$$ = 
   "{HoldComplete[Cosh[2] + Sinh[2] + Exp[2]/Sqrt[2 + 2] + {{2, 2}, {2, 2}, \
{2, 2}}]}", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {3.173828125, 7.826171875}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {3.173828125, 7.826171875}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "Cosh[2] + Sinh[2] + Exp[2]/Sqrt[2 + 2] + List[{2, 2}, {2, \
2}, {2, 2}]", 
                  Defer[{
                    HoldComplete[
                    Cosh[2] + Sinh[2] + 
                    Exp[2]/Sqrt[2 + 2] + {{2, 2}, {2, 2}, {2, 2}}]}], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"{", 
                  RowBox[{"HoldComplete", "[", 
                   RowBox[{
                    RowBox[{"Cosh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{"Sinh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Exp", "[", "2", "]"}], "/", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"2", " ", "+", " ", "2"}], "]"}]}], " ", "+", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}]}], "}"}]}], "]"}], 
                  "}"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"{", 
                  RowBox[{"HoldComplete", "[", 
                   RowBox[{
                    RowBox[{"Cosh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{"Sinh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Exp", "[", "2", "]"}], "/", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"2", " ", "+", " ", "2"}], "]"}]}], " ", "+", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}]}], "}"}]}], "]"}], 
                  "}"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"{", 
                    RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{"Cosh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{"Sinh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Exp", "[", "2", "]"}], "/", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"2", " ", "+", " ", "2"}], "]"}]}], " ", "+", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}]}], "}"}]}], "]"}], 
                    "}"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "Cosh[2] + Sinh[2] + Exp[2]/Sqrt[2 + 2] + List[{2, 2}, \
{2, 2}, {2, 2}]", 
                    Defer[{
                    HoldComplete[
                    Cosh[2] + Sinh[2] + 
                    Exp[2]/Sqrt[2 + 2] + {{2, 2}, {2, 2}, {2, 2}}]}], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{"Cosh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{"Sinh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Exp", "[", "2", "]"}], "/", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"2", " ", "+", " ", "2"}], "]"}]}], " ", "+", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}]}], "}"}]}], "]"}], 
                    "}"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{"Cosh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{"Sinh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Exp", "[", "2", "]"}], "/", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"2", " ", "+", " ", "2"}], "]"}]}], " ", "+", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}]}], "}"}]}], "]"}], 
                    "}"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"{", 
                    RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{"Cosh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{"Sinh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Exp", "[", "2", "]"}], "/", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"2", " ", "+", " ", "2"}], "]"}]}], " ", "+", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}]}], "}"}]}], "]"}], 
                    "}"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[18]:=",ExpressionUUID->"f4ba3344-0d25-4d04-8c01-54e391835f9a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"HoldComplete", "[", 
   RowBox[{
    RowBox[{"Cosh", "[", "2", "]"}], "+", 
    RowBox[{"Sinh", "[", "2", "]"}], "+", 
    FractionBox[
     RowBox[{"Exp", "[", "2", "]"}], 
     SqrtBox[
      RowBox[{"2", "+", "2"}]]], "+", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], "]"}], "}"}]], "Output",
 CellChangeTimes->{3.9576601685460587`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"417fca12-9a53-4e94-8416-ed534682c63a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReleaseHold", "[", 
  RowBox[{"{", 
   RowBox[{"HoldComplete", "[", 
    RowBox[{
     RowBox[{"Cosh", "[", "2", "]"}], "+", 
     RowBox[{"Sinh", "[", "2", "]"}], "+", 
     FractionBox[
      RowBox[{"Exp", "[", "2", "]"}], 
      SqrtBox[
       RowBox[{"2", "+", "2"}]]], "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], "]"}], "}"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[19]:=",ExpressionUUID->"3137833d-4e30-4ce9-be30-15630ecfc54f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "+", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", "2"], "2"], "+", 
       RowBox[{"Cosh", "[", "2", "]"}], "+", 
       RowBox[{"Sinh", "[", "2", "]"}]}], ",", 
      RowBox[{"2", "+", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", "2"], "2"], "+", 
       RowBox[{"Cosh", "[", "2", "]"}], "+", 
       RowBox[{"Sinh", "[", "2", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "+", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", "2"], "2"], "+", 
       RowBox[{"Cosh", "[", "2", "]"}], "+", 
       RowBox[{"Sinh", "[", "2", "]"}]}], ",", 
      RowBox[{"2", "+", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", "2"], "2"], "+", 
       RowBox[{"Cosh", "[", "2", "]"}], "+", 
       RowBox[{"Sinh", "[", "2", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "+", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", "2"], "2"], "+", 
       RowBox[{"Cosh", "[", "2", "]"}], "+", 
       RowBox[{"Sinh", "[", "2", "]"}]}], ",", 
      RowBox[{"2", "+", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", "2"], "2"], "+", 
       RowBox[{"Cosh", "[", "2", "]"}], "+", 
       RowBox[{"Sinh", "[", "2", "]"}]}]}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.957660207206134*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"4730cf8f-4033-4d66-a7c5-7d26d325cd0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "+", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", "2"], "2"], "+", 
        RowBox[{"Cosh", "[", "2", "]"}], "+", 
        RowBox[{"Sinh", "[", "2", "]"}]}], ",", 
       RowBox[{"2", "+", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", "2"], "2"], "+", 
        RowBox[{"Cosh", "[", "2", "]"}], "+", 
        RowBox[{"Sinh", "[", "2", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "+", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", "2"], "2"], "+", 
        RowBox[{"Cosh", "[", "2", "]"}], "+", 
        RowBox[{"Sinh", "[", "2", "]"}]}], ",", 
       RowBox[{"2", "+", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", "2"], "2"], "+", 
        RowBox[{"Cosh", "[", "2", "]"}], "+", 
        RowBox[{"Sinh", "[", "2", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "+", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", "2"], "2"], "+", 
        RowBox[{"Cosh", "[", "2", "]"}], "+", 
        RowBox[{"Sinh", "[", "2", "]"}]}], ",", 
       RowBox[{"2", "+", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", "2"], "2"], "+", 
        RowBox[{"Cosh", "[", "2", "]"}], "+", 
        RowBox[{"Sinh", "[", "2", "]"}]}]}], "}"}]}], "}"}], "}"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[20]:=",ExpressionUUID->"37988997-5a54-48f7-9cc0-e00f9384bab5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.957660248231133*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"eab47f07-5234-4271-a6a2-cce0fc91984f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Times", "@@", 
  RowBox[{"{", 
   RowBox[{"1", ",", "3", ",", "2"}], "}"}]}]], "Input",
 NumberMarks->False,
 CellLabel->"In[21]:=",ExpressionUUID->"5a7e4aa5-405e-44f6-beeb-3459be61bcb4"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.957660307694498*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"bbe76cc0-7832-4b8b-9789-0c1abcd8cc6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Divisors", "[", "6", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[22]:=",ExpressionUUID->"45f3931d-d926-406b-acb9-60cde8df6232"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.957660324689363*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"cffcaf97-db90-4355-91ae-c615055f35dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "6"}], "}"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[23]:=",ExpressionUUID->"346d30ee-1c0f-4e44-8413-891e1a059444"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.957660334782625*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"e44aed57-c33f-4929-b36c-c3929b9916d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrimePi", "[", "3", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[24]:=",ExpressionUUID->"2dca06e2-da8a-46b7-99ec-1a0e09bf7e3a"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.9576603461346407`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"3e1e7454-818e-47d1-98c2-4ef10f0eeab0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", "2", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[25]:=",ExpressionUUID->"9ce7fbb6-ad61-4855-a4a0-ba4898e81046"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.9576603555596027`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"825d68de-6785-4bee-a0e3-609cf7e77582"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[26]:=",ExpressionUUID->"3a9ef06e-6ee5-46ca-bfe5-4fc54477fd41"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.957660395923059*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"a7e41e29-b546-487c-8ee5-24a5fa16010e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrimePi", "[", "2", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[27]:=",ExpressionUUID->"5d62e1c7-c5b1-4ddf-97d7-bb40141ba7d7"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.9576604089434547`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"1b073e13-d0b5-4351-9980-7ae4c6e58483"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerString", "[", 
  RowBox[{"1", ",", "\"\<Roman\>\""}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[28]:=",ExpressionUUID->"568e8d83-b507-464d-ab98-6cc0e9f6c866"],

Cell[BoxData["\<\"I\"\>"], "Output",
 CellChangeTimes->{3.957660442780326*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"eacabafb-3212-4250-81e3-20328102143e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "[", 
  RowBox[{"\"\<I\>\"", ",", "\"\<Roman\>\""}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[29]:=",ExpressionUUID->"bb398167-b4c9-4179-bbe1-fe13ad252888"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.9576604541800632`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"c2eb6f95-6c45-471f-a2c2-7d3036f287dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{"1", ",", "2"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[30]:=",ExpressionUUID->"c2efa3ee-f984-42d7-bc3e-678448ed38dc"],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   StyleBox[
    SubscriptBox["\<\"1\"\>", "\<\"2\"\>"],
    ShowStringCharacters->False],
   1,
   Editable->False],
  BaseForm[#, 2]& ]], "Output",
 CellChangeTimes->{3.9576604627905073`*^9},
 CellLabel->
  "Out[30]//BaseForm=",ExpressionUUID->"bd9ddada-27a1-42dd-8f11-6c46e49c8b58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["1"], "Input",
 NumberMarks->False,
 CellLabel->"In[31]:=",ExpressionUUID->"a7d6dd7b-c934-455d-bd53-69e986d10a73"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.957660472590735*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"71127234-3eba-4372-beb8-4bf980044b4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DivisorSigma", "[", 
   RowBox[{"1", ",", "1"}], "]"}], "\[Equal]", 
  RowBox[{"2", " ", "1"}]}]], "Input",
 NumberMarks->False,
 CellLabel->"In[32]:=",ExpressionUUID->"b2844a12-03ce-45b1-a831-73cd8394a089"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.9576604794720907`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"b67d854a-82f2-4279-a3b8-13d612861b08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "Cosh[2]+Sinh[2]+Exp[2]/Sqrt[4]+Coth[4]^y", 
   Typeset`newq$$ = "Cosh[2]+Sinh[2]+Exp[2]/Sqrt[4]+Coth[4]^y", 
   Typeset`chosen$$ = "Cosh[2] + Sinh[2] + Exp[2]/Sqrt[4] + Coth[4]^y", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {3.173828125, 7.826171875}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {3.173828125, 7.826171875}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "Cosh[2]+Sinh[2]+Exp[2]/Sqrt[4]+Coth[4]^y", 
                  Defer[
                  Cosh[2] + Sinh[2] + Exp[2]/Sqrt[4] + 
                   Coth[4]^$CellContext`y], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  RowBox[{"Cosh", "[", "2", "]"}], " ", "+", " ", 
                  RowBox[{"Sinh", "[", "2", "]"}], " ", "+", " ", 
                  RowBox[{
                   RowBox[{"Exp", "[", "2", "]"}], "/", 
                   RowBox[{"Sqrt", "[", "4", "]"}]}], " ", "+", " ", 
                  RowBox[{
                   RowBox[{"Coth", "[", "4", "]"}], "^", "y"}]}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  RowBox[{"Cosh", "[", "2", "]"}], " ", "+", " ", 
                  RowBox[{"Sinh", "[", "2", "]"}], " ", "+", " ", 
                  RowBox[{
                   RowBox[{"Exp", "[", "2", "]"}], "/", 
                   RowBox[{"Sqrt", "[", "4", "]"}]}], " ", "+", " ", 
                  RowBox[{
                   RowBox[{"Coth", "[", "4", "]"}], "^", "y"}]}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    RowBox[{"Cosh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{"Sinh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Exp", "[", "2", "]"}], "/", 
                    RowBox[{"Sqrt", "[", "4", "]"}]}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Coth", "[", "4", "]"}], "^", "y"}]}]], "Input"], 
                  All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "Cosh[2]+Sinh[2]+Exp[2]/Sqrt[4]+Coth[4]^y", 
                    Defer[
                    Cosh[2] + Sinh[2] + Exp[2]/Sqrt[4] + 
                    Coth[4]^$CellContext`y], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    RowBox[{"Cosh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{"Sinh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Exp", "[", "2", "]"}], "/", 
                    RowBox[{"Sqrt", "[", "4", "]"}]}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Coth", "[", "4", "]"}], "^", "y"}]}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    RowBox[{"Cosh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{"Sinh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Exp", "[", "2", "]"}], "/", 
                    RowBox[{"Sqrt", "[", "4", "]"}]}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Coth", "[", "4", "]"}], "^", "y"}]}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    RowBox[{"Cosh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{"Sinh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Exp", "[", "2", "]"}], "/", 
                    RowBox[{"Sqrt", "[", "4", "]"}]}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Coth", "[", "4", "]"}], "^", "y"}]}]], "Input"], 
                    All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[34]:=",ExpressionUUID->"84a7bd69-b38d-414f-9fe9-57af21fb565c"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["\[ExponentialE]", "2"], "2"], "+", 
  RowBox[{"Cosh", "[", "2", "]"}], "+", 
  SuperscriptBox[
   RowBox[{"Coth", "[", "4", "]"}], "y"], "+", 
  RowBox[{"Sinh", "[", "2", "]"}]}]], "Output",
 CellChangeTimes->{3.957660974402289*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"a65c5e30-30bb-4841-8aaf-d67ae2471acf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Together", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", "2"], "2"], "+", 
   RowBox[{"Cosh", "[", "2", "]"}], "+", 
   SuperscriptBox[
    RowBox[{"Coth", "[", "4", "]"}], "y"], "+", 
   RowBox[{"Sinh", "[", "2", "]"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[35]:=",ExpressionUUID->"821d3039-9cf1-442e-822c-003884a8d5b2"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "2"], "+", 
    RowBox[{"2", " ", 
     RowBox[{"Cosh", "[", "2", "]"}]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"Coth", "[", "4", "]"}], "y"]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"Sinh", "[", "2", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.957661002912139*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"65f5edaa-5674-469a-a60c-f10aff7b3fdf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "2"], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cosh", "[", "2", "]"}]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"Coth", "[", "4", "]"}], "y"]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Sinh", "[", "2", "]"}]}]}], ")"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[36]:=",ExpressionUUID->"0a909130-fece-4f47-89f6-18f8f54a17d9"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["\[ExponentialE]", "2"], "2"], "+", 
  RowBox[{"Cosh", "[", "2", "]"}], "+", 
  SuperscriptBox[
   RowBox[{"Coth", "[", "4", "]"}], "y"], "+", 
  RowBox[{"Sinh", "[", "2", "]"}]}]], "Output",
 CellChangeTimes->{3.957661034852256*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"cba91a54-76fd-4023-ad24-87a96ea8c211"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", "2"], "2"], "+", 
     RowBox[{"Cosh", "[", "2", "]"}], "+", 
     SuperscriptBox[
      RowBox[{"Coth", "[", "4", "]"}], "y"], "+", 
     RowBox[{"Sinh", "[", "2", "]"}]}], ")"}], 
   RowBox[{"\[DifferentialD]", "y"}]}]}]], "Input",
 NumberMarks->False,
 CellLabel->"In[37]:=",ExpressionUUID->"8119234d-a4d2-416a-8c42-6f021b196211"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "2"], " ", "y"}], "2"], "+", 
  RowBox[{"y", " ", 
   RowBox[{"Cosh", "[", "2", "]"}]}], "+", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Coth", "[", "4", "]"}], "y"], 
   RowBox[{"Log", "[", 
    RowBox[{"Coth", "[", "4", "]"}], "]"}]], "+", 
  RowBox[{"y", " ", 
   RowBox[{"Sinh", "[", "2", "]"}]}]}]], "Output",
 CellChangeTimes->{3.957661062347435*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"e077b590-9250-4db1-82e2-645a01659ef9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "2"], " ", "y"}], "2"], "+", 
    RowBox[{"y", " ", 
     RowBox[{"Cosh", "[", "2", "]"}]}], "+", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"Coth", "[", "4", "]"}], "y"], 
     RowBox[{"Log", "[", 
      RowBox[{"Coth", "[", "4", "]"}], "]"}]], "+", 
    RowBox[{"y", " ", 
     RowBox[{"Sinh", "[", "2", "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "12.`"}], ",", "12.`"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[38]:=",ExpressionUUID->"011d27f0-8bee-4ad4-8d90-46fb78b09724"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], AbsoluteThickness[2], Opacity[1.], 
         LineBox[CompressedData["
1:eJwt1H00VHkYB3DUeGmYyls1mObFzI2xs6tDnIiHUKFsibSNsqWaZI7tTdHR
miINkybbnXsvtbSR1xMtKaL5yUvTVsa2VqvToVZZpWKjpjXF3j1n/3jOcz5/
fb/PPw9ve8qGnWYmJiZr6flv76hVj83MYCi4U1W30BwHeyNb5PcJQyJnuHaA
dkdYmTT1I4aUA++bummLBpruvh7HUG+ZrD3LAodX1kOX+p9h6GzA3r5xSxy+
S/KOq2/HkJR6/knHxOGY8DHalYOhmn/KI9Lm41BYJCh4wMKQ/dl94/3OOBQP
nkpZbyVC/PnCzdneODj2REe5OQiRfx9Dlh+Jg+7r6JB7Qlf09rLHuGAHDqvd
hAcFfAFiN1+sunQUh+VXpJf1X/LRi9vOZooCHKZyd9ktdeOhO80NP6yuxuG9
oRTfinER8yfq4vl2+h5+gdctOQeVfMFfue4xDn6M7+vFic5oruXxJa/e4XAO
fHyCMtjITtd6fshKAzvOx714VbwQ6WddP7GHqwF9OcfKtNAR9RPmN/p9NcCx
rvPUNtqjMhFzf3mUBuZwh/Uvq2wRbPVSbJNpIHljNllRMQ8ltfHMSzM1kNA+
eI9TYIOsWdstwggN8FdMr+9UWKHumczdD2s1UCmrf3azkYEeh4kDW7o0kDRx
VZpXaIpiX+dnqAc1IDnG2GwuMGpXrOFL/jZowC6tl6kpmtBmRPRE1rIIeJSY
7F47NKxlmJs+2YQRcDjdPf8u3q3lRWX0xgcQUHXGF0q/ehA4Js7zHt9IQP4e
RV/C8b8CPbMr58nlBNhMRvrVrJ8IdP92IGJVFgFPD3Z5pWYZA2c7TVtaXyDg
bdPa24d1pmDUN3vGXyPgcs7FhEQlA7YXuFxl3idA+KHa7kiRFUglXi2lzwkY
+Hlxq5/MBvpHeIuKjATEEE9PjarngewX1h8utiT8WKZqjdTYQjby98hzJ2H2
FvkbRpo9THva3I0JIqE7obJ8Q5Yj9DZ9NGN+Q8I1G3a8IXkhfIioy3TZR4Ko
kDdiEcmGsF0PpS05JEylZn2ujnaGZnbNYGgJCaNTTqwKXw44V7AueFwnoWR3
Tq+TgAvDoXOtpvUkqIPuqxYJeXBCldu3ZYQEVkp1cLsDH+Tdc393nCHhVsiN
1ka2AEq5TFXLAgo+y7cti2W5goS/PEUrocDU4iEl/uwKmQE+VetCKVi2ev/t
cBMRdCWFleviKZh6UjPi8E4EF46E3Sk+SEFIsk699oMITGYv62AcouC0ccg3
e0oEiktL2vbS5rKdlJNmGAxxFtz0SaVg1Sal2292GPhbLKrVH6bg3K87k9Te
GGworiNm0imQdHFez0nDoHNSsnebgoIjMcvPBWdgYGuukHXSbnse45+uwKBE
3LdTfJyCjbNOq14qMThZr0ww0D4KRg9dIQZko0PsmSwKdM2P5NktGOhz24K0
ORTYhk84tCIMWp6GBApPUSDtZ92a7MBgOvyefx7tMUMoK/EBBpnSZz6blBQ4
ejdcCR6g8w4slYzlUpDQoY9N/xOD8ORucUweBZXRo9NXhzGISpO73aTtv58f
xRvDILWnwTVHRcFJ0wBD3ATdhx3Pf0O7R725WG3AwCnNkht9mgI299AqnZHO
H210aaL9//+CNQdkTovzKfgXe+A0sw==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJwt1H00VHkYB3DUeGmYyls1mObFzI2xs6tDnIiHUKFsibSNsqWaZI7tTdHR
miINkybbnXsvtbSR1xMtKaL5yUvTVsa2VqvToVZZpWKjpjXF3j1n/3jOcz5/
fb/PPw9ve8qGnWYmJiZr6flv76hVj83MYCi4U1W30BwHeyNb5PcJQyJnuHaA
dkdYmTT1I4aUA++bummLBpruvh7HUG+ZrD3LAodX1kOX+p9h6GzA3r5xSxy+
S/KOq2/HkJR6/knHxOGY8DHalYOhmn/KI9Lm41BYJCh4wMKQ/dl94/3OOBQP
nkpZbyVC/PnCzdneODj2REe5OQiRfx9Dlh+Jg+7r6JB7Qlf09rLHuGAHDqvd
hAcFfAFiN1+sunQUh+VXpJf1X/LRi9vOZooCHKZyd9ktdeOhO80NP6yuxuG9
oRTfinER8yfq4vl2+h5+gdctOQeVfMFfue4xDn6M7+vFic5oruXxJa/e4XAO
fHyCMtjITtd6fshKAzvOx714VbwQ6WddP7GHqwF9OcfKtNAR9RPmN/p9NcCx
rvPUNtqjMhFzf3mUBuZwh/Uvq2wRbPVSbJNpIHljNllRMQ8ltfHMSzM1kNA+
eI9TYIOsWdstwggN8FdMr+9UWKHumczdD2s1UCmrf3azkYEeh4kDW7o0kDRx
VZpXaIpiX+dnqAc1IDnG2GwuMGpXrOFL/jZowC6tl6kpmtBmRPRE1rIIeJSY
7F47NKxlmJs+2YQRcDjdPf8u3q3lRWX0xgcQUHXGF0q/ehA4Js7zHt9IQP4e
RV/C8b8CPbMr58nlBNhMRvrVrJ8IdP92IGJVFgFPD3Z5pWYZA2c7TVtaXyDg
bdPa24d1pmDUN3vGXyPgcs7FhEQlA7YXuFxl3idA+KHa7kiRFUglXi2lzwkY
+Hlxq5/MBvpHeIuKjATEEE9PjarngewX1h8utiT8WKZqjdTYQjby98hzJ2H2
FvkbRpo9THva3I0JIqE7obJ8Q5Yj9DZ9NGN+Q8I1G3a8IXkhfIioy3TZR4Ko
kDdiEcmGsF0PpS05JEylZn2ujnaGZnbNYGgJCaNTTqwKXw44V7AueFwnoWR3
Tq+TgAvDoXOtpvUkqIPuqxYJeXBCldu3ZYQEVkp1cLsDH+Tdc393nCHhVsiN
1ka2AEq5TFXLAgo+y7cti2W5goS/PEUrocDU4iEl/uwKmQE+VetCKVi2ev/t
cBMRdCWFleviKZh6UjPi8E4EF46E3Sk+SEFIsk699oMITGYv62AcouC0ccg3
e0oEiktL2vbS5rKdlJNmGAxxFtz0SaVg1Sal2292GPhbLKrVH6bg3K87k9Te
GGworiNm0imQdHFez0nDoHNSsnebgoIjMcvPBWdgYGuukHXSbnse45+uwKBE
3LdTfJyCjbNOq14qMThZr0ww0D4KRg9dIQZko0PsmSwKdM2P5NktGOhz24K0
ORTYhk84tCIMWp6GBApPUSDtZ92a7MBgOvyefx7tMUMoK/EBBpnSZz6blBQ4
ejdcCR6g8w4slYzlUpDQoY9N/xOD8ORucUweBZXRo9NXhzGISpO73aTtv58f
xRvDILWnwTVHRcFJ0wBD3ATdhx3Pf0O7R725WG3AwCnNkht9mgI299AqnZHO
H210aaL9//+CNQdkTovzKfgXe+A0sw==
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-12., 12.}, {1345.5241109843632`, 
            1635.5303779907574`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 1345.5241109843662`}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-12., 12.}, {1345.5241109843632`, 
           1635.5303779907574`}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {0, 1345.5241109843662`}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.24, 0.6, 0.8], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwt1H00VHkYB3DUeGmYyls1mObFzI2xs6tDnIiHUKFsibSNsqWaZI7tTdHR
miINkybbnXsvtbSR1xMtKaL5yUvTVsa2VqvToVZZpWKjpjXF3j1n/3jOcz5/
fb/PPw9ve8qGnWYmJiZr6flv76hVj83MYCi4U1W30BwHeyNb5PcJQyJnuHaA
dkdYmTT1I4aUA++bummLBpruvh7HUG+ZrD3LAodX1kOX+p9h6GzA3r5xSxy+
S/KOq2/HkJR6/knHxOGY8DHalYOhmn/KI9Lm41BYJCh4wMKQ/dl94/3OOBQP
nkpZbyVC/PnCzdneODj2REe5OQiRfx9Dlh+Jg+7r6JB7Qlf09rLHuGAHDqvd
hAcFfAFiN1+sunQUh+VXpJf1X/LRi9vOZooCHKZyd9ktdeOhO80NP6yuxuG9
oRTfinER8yfq4vl2+h5+gdctOQeVfMFfue4xDn6M7+vFic5oruXxJa/e4XAO
fHyCMtjITtd6fshKAzvOx714VbwQ6WddP7GHqwF9OcfKtNAR9RPmN/p9NcCx
rvPUNtqjMhFzf3mUBuZwh/Uvq2wRbPVSbJNpIHljNllRMQ8ltfHMSzM1kNA+
eI9TYIOsWdstwggN8FdMr+9UWKHumczdD2s1UCmrf3azkYEeh4kDW7o0kDRx
VZpXaIpiX+dnqAc1IDnG2GwuMGpXrOFL/jZowC6tl6kpmtBmRPRE1rIIeJSY
7F47NKxlmJs+2YQRcDjdPf8u3q3lRWX0xgcQUHXGF0q/ehA4Js7zHt9IQP4e
RV/C8b8CPbMr58nlBNhMRvrVrJ8IdP92IGJVFgFPD3Z5pWYZA2c7TVtaXyDg
bdPa24d1pmDUN3vGXyPgcs7FhEQlA7YXuFxl3idA+KHa7kiRFUglXi2lzwkY
+Hlxq5/MBvpHeIuKjATEEE9PjarngewX1h8utiT8WKZqjdTYQjby98hzJ2H2
FvkbRpo9THva3I0JIqE7obJ8Q5Yj9DZ9NGN+Q8I1G3a8IXkhfIioy3TZR4Ko
kDdiEcmGsF0PpS05JEylZn2ujnaGZnbNYGgJCaNTTqwKXw44V7AueFwnoWR3
Tq+TgAvDoXOtpvUkqIPuqxYJeXBCldu3ZYQEVkp1cLsDH+Tdc393nCHhVsiN
1ka2AEq5TFXLAgo+y7cti2W5goS/PEUrocDU4iEl/uwKmQE+VetCKVi2ev/t
cBMRdCWFleviKZh6UjPi8E4EF46E3Sk+SEFIsk699oMITGYv62AcouC0ccg3
e0oEiktL2vbS5rKdlJNmGAxxFtz0SaVg1Sal2292GPhbLKrVH6bg3K87k9Te
GGworiNm0imQdHFez0nDoHNSsnebgoIjMcvPBWdgYGuukHXSbnse45+uwKBE
3LdTfJyCjbNOq14qMThZr0ww0D4KRg9dIQZko0PsmSwKdM2P5NktGOhz24K0
ORTYhk84tCIMWp6GBApPUSDtZ92a7MBgOvyefx7tMUMoK/EBBpnSZz6blBQ4
ejdcCR6g8w4slYzlUpDQoY9N/xOD8ORucUweBZXRo9NXhzGISpO73aTtv58f
xRvDILWnwTVHRcFJ0wBD3ATdhx3Pf0O7R725WG3AwCnNkht9mgI299AqnZHO
H210aaL9//+CNQdkTovzKfgXe+A0sw==
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-12., 12.}, {1345.5241109843632`, 
        1635.5303779907574`}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {0, 1345.5241109843662`}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1345.5241109843662`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-12., 12.}, {1345.5241109843632`, 1635.5303779907574`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.957661094146327*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"3179d14e-7212-4a69-a5eb-12ea7bb0a4ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "2"], " ", "y"}], "2"], "+", 
    RowBox[{"y", " ", 
     RowBox[{"Cosh", "[", "2", "]"}]}], "+", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"Coth", "[", "4", "]"}], "y"], 
     RowBox[{"Log", "[", 
      RowBox[{"Coth", "[", "4", "]"}], "]"}]], "+", 
    RowBox[{"y", " ", 
     RowBox[{"Sinh", "[", "2", "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "12.`"}], ",", "12.`"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[39]:=",ExpressionUUID->"1b8dff6e-baa3-48f7-8deb-593427a69773"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], AbsoluteThickness[2], Opacity[1.], 
         LineBox[CompressedData["
1:eJwt1H00VHkYB3DUeGmYyls1mObFzI2xs6tDnIiHUKFsibSNsqWaZI7tTdHR
miINkybbnXsvtbSR1xMtKaL5yUvTVsa2VqvToVZZpWKjpjXF3j1n/3jOcz5/
fb/PPw9ve8qGnWYmJiZr6flv76hVj83MYCi4U1W30BwHeyNb5PcJQyJnuHaA
dkdYmTT1I4aUA++bummLBpruvh7HUG+ZrD3LAodX1kOX+p9h6GzA3r5xSxy+
S/KOq2/HkJR6/knHxOGY8DHalYOhmn/KI9Lm41BYJCh4wMKQ/dl94/3OOBQP
nkpZbyVC/PnCzdneODj2REe5OQiRfx9Dlh+Jg+7r6JB7Qlf09rLHuGAHDqvd
hAcFfAFiN1+sunQUh+VXpJf1X/LRi9vOZooCHKZyd9ktdeOhO80NP6yuxuG9
oRTfinER8yfq4vl2+h5+gdctOQeVfMFfue4xDn6M7+vFic5oruXxJa/e4XAO
fHyCMtjITtd6fshKAzvOx714VbwQ6WddP7GHqwF9OcfKtNAR9RPmN/p9NcCx
rvPUNtqjMhFzf3mUBuZwh/Uvq2wRbPVSbJNpIHljNllRMQ8ltfHMSzM1kNA+
eI9TYIOsWdstwggN8FdMr+9UWKHumczdD2s1UCmrf3azkYEeh4kDW7o0kDRx
VZpXaIpiX+dnqAc1IDnG2GwuMGpXrOFL/jZowC6tl6kpmtBmRPRE1rIIeJSY
7F47NKxlmJs+2YQRcDjdPf8u3q3lRWX0xgcQUHXGF0q/ehA4Js7zHt9IQP4e
RV/C8b8CPbMr58nlBNhMRvrVrJ8IdP92IGJVFgFPD3Z5pWYZA2c7TVtaXyDg
bdPa24d1pmDUN3vGXyPgcs7FhEQlA7YXuFxl3idA+KHa7kiRFUglXi2lzwkY
+Hlxq5/MBvpHeIuKjATEEE9PjarngewX1h8utiT8WKZqjdTYQjby98hzJ2H2
FvkbRpo9THva3I0JIqE7obJ8Q5Yj9DZ9NGN+Q8I1G3a8IXkhfIioy3TZR4Ko
kDdiEcmGsF0PpS05JEylZn2ujnaGZnbNYGgJCaNTTqwKXw44V7AueFwnoWR3
Tq+TgAvDoXOtpvUkqIPuqxYJeXBCldu3ZYQEVkp1cLsDH+Tdc393nCHhVsiN
1ka2AEq5TFXLAgo+y7cti2W5goS/PEUrocDU4iEl/uwKmQE+VetCKVi2ev/t
cBMRdCWFleviKZh6UjPi8E4EF46E3Sk+SEFIsk699oMITGYv62AcouC0ccg3
e0oEiktL2vbS5rKdlJNmGAxxFtz0SaVg1Sal2292GPhbLKrVH6bg3K87k9Te
GGworiNm0imQdHFez0nDoHNSsnebgoIjMcvPBWdgYGuukHXSbnse45+uwKBE
3LdTfJyCjbNOq14qMThZr0ww0D4KRg9dIQZko0PsmSwKdM2P5NktGOhz24K0
ORTYhk84tCIMWp6GBApPUSDtZ92a7MBgOvyefx7tMUMoK/EBBpnSZz6blBQ4
ejdcCR6g8w4slYzlUpDQoY9N/xOD8ORucUweBZXRo9NXhzGISpO73aTtv58f
xRvDILWnwTVHRcFJ0wBD3ATdhx3Pf0O7R725WG3AwCnNkht9mgI299AqnZHO
H210aaL9//+CNQdkTovzKfgXe+A0sw==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJwt1H00VHkYB3DUeGmYyls1mObFzI2xs6tDnIiHUKFsibSNsqWaZI7tTdHR
miINkybbnXsvtbSR1xMtKaL5yUvTVsa2VqvToVZZpWKjpjXF3j1n/3jOcz5/
fb/PPw9ve8qGnWYmJiZr6flv76hVj83MYCi4U1W30BwHeyNb5PcJQyJnuHaA
dkdYmTT1I4aUA++bummLBpruvh7HUG+ZrD3LAodX1kOX+p9h6GzA3r5xSxy+
S/KOq2/HkJR6/knHxOGY8DHalYOhmn/KI9Lm41BYJCh4wMKQ/dl94/3OOBQP
nkpZbyVC/PnCzdneODj2REe5OQiRfx9Dlh+Jg+7r6JB7Qlf09rLHuGAHDqvd
hAcFfAFiN1+sunQUh+VXpJf1X/LRi9vOZooCHKZyd9ktdeOhO80NP6yuxuG9
oRTfinER8yfq4vl2+h5+gdctOQeVfMFfue4xDn6M7+vFic5oruXxJa/e4XAO
fHyCMtjITtd6fshKAzvOx714VbwQ6WddP7GHqwF9OcfKtNAR9RPmN/p9NcCx
rvPUNtqjMhFzf3mUBuZwh/Uvq2wRbPVSbJNpIHljNllRMQ8ltfHMSzM1kNA+
eI9TYIOsWdstwggN8FdMr+9UWKHumczdD2s1UCmrf3azkYEeh4kDW7o0kDRx
VZpXaIpiX+dnqAc1IDnG2GwuMGpXrOFL/jZowC6tl6kpmtBmRPRE1rIIeJSY
7F47NKxlmJs+2YQRcDjdPf8u3q3lRWX0xgcQUHXGF0q/ehA4Js7zHt9IQP4e
RV/C8b8CPbMr58nlBNhMRvrVrJ8IdP92IGJVFgFPD3Z5pWYZA2c7TVtaXyDg
bdPa24d1pmDUN3vGXyPgcs7FhEQlA7YXuFxl3idA+KHa7kiRFUglXi2lzwkY
+Hlxq5/MBvpHeIuKjATEEE9PjarngewX1h8utiT8WKZqjdTYQjby98hzJ2H2
FvkbRpo9THva3I0JIqE7obJ8Q5Yj9DZ9NGN+Q8I1G3a8IXkhfIioy3TZR4Ko
kDdiEcmGsF0PpS05JEylZn2ujnaGZnbNYGgJCaNTTqwKXw44V7AueFwnoWR3
Tq+TgAvDoXOtpvUkqIPuqxYJeXBCldu3ZYQEVkp1cLsDH+Tdc393nCHhVsiN
1ka2AEq5TFXLAgo+y7cti2W5goS/PEUrocDU4iEl/uwKmQE+VetCKVi2ev/t
cBMRdCWFleviKZh6UjPi8E4EF46E3Sk+SEFIsk699oMITGYv62AcouC0ccg3
e0oEiktL2vbS5rKdlJNmGAxxFtz0SaVg1Sal2292GPhbLKrVH6bg3K87k9Te
GGworiNm0imQdHFez0nDoHNSsnebgoIjMcvPBWdgYGuukHXSbnse45+uwKBE
3LdTfJyCjbNOq14qMThZr0ww0D4KRg9dIQZko0PsmSwKdM2P5NktGOhz24K0
ORTYhk84tCIMWp6GBApPUSDtZ92a7MBgOvyefx7tMUMoK/EBBpnSZz6blBQ4
ejdcCR6g8w4slYzlUpDQoY9N/xOD8ORucUweBZXRo9NXhzGISpO73aTtv58f
xRvDILWnwTVHRcFJ0wBD3ATdhx3Pf0O7R725WG3AwCnNkht9mgI299AqnZHO
H210aaL9//+CNQdkTovzKfgXe+A0sw==
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-12., 12.}, {1345.5241109843632`, 
            1635.5303779907574`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 1345.5241109843662`}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-12., 12.}, {1345.5241109843632`, 
           1635.5303779907574`}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {0, 1345.5241109843662`}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.24, 0.6, 0.8], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwt1H00VHkYB3DUeGmYyls1mObFzI2xs6tDnIiHUKFsibSNsqWaZI7tTdHR
miINkybbnXsvtbSR1xMtKaL5yUvTVsa2VqvToVZZpWKjpjXF3j1n/3jOcz5/
fb/PPw9ve8qGnWYmJiZr6flv76hVj83MYCi4U1W30BwHeyNb5PcJQyJnuHaA
dkdYmTT1I4aUA++bummLBpruvh7HUG+ZrD3LAodX1kOX+p9h6GzA3r5xSxy+
S/KOq2/HkJR6/knHxOGY8DHalYOhmn/KI9Lm41BYJCh4wMKQ/dl94/3OOBQP
nkpZbyVC/PnCzdneODj2REe5OQiRfx9Dlh+Jg+7r6JB7Qlf09rLHuGAHDqvd
hAcFfAFiN1+sunQUh+VXpJf1X/LRi9vOZooCHKZyd9ktdeOhO80NP6yuxuG9
oRTfinER8yfq4vl2+h5+gdctOQeVfMFfue4xDn6M7+vFic5oruXxJa/e4XAO
fHyCMtjITtd6fshKAzvOx714VbwQ6WddP7GHqwF9OcfKtNAR9RPmN/p9NcCx
rvPUNtqjMhFzf3mUBuZwh/Uvq2wRbPVSbJNpIHljNllRMQ8ltfHMSzM1kNA+
eI9TYIOsWdstwggN8FdMr+9UWKHumczdD2s1UCmrf3azkYEeh4kDW7o0kDRx
VZpXaIpiX+dnqAc1IDnG2GwuMGpXrOFL/jZowC6tl6kpmtBmRPRE1rIIeJSY
7F47NKxlmJs+2YQRcDjdPf8u3q3lRWX0xgcQUHXGF0q/ehA4Js7zHt9IQP4e
RV/C8b8CPbMr58nlBNhMRvrVrJ8IdP92IGJVFgFPD3Z5pWYZA2c7TVtaXyDg
bdPa24d1pmDUN3vGXyPgcs7FhEQlA7YXuFxl3idA+KHa7kiRFUglXi2lzwkY
+Hlxq5/MBvpHeIuKjATEEE9PjarngewX1h8utiT8WKZqjdTYQjby98hzJ2H2
FvkbRpo9THva3I0JIqE7obJ8Q5Yj9DZ9NGN+Q8I1G3a8IXkhfIioy3TZR4Ko
kDdiEcmGsF0PpS05JEylZn2ujnaGZnbNYGgJCaNTTqwKXw44V7AueFwnoWR3
Tq+TgAvDoXOtpvUkqIPuqxYJeXBCldu3ZYQEVkp1cLsDH+Tdc393nCHhVsiN
1ka2AEq5TFXLAgo+y7cti2W5goS/PEUrocDU4iEl/uwKmQE+VetCKVi2ev/t
cBMRdCWFleviKZh6UjPi8E4EF46E3Sk+SEFIsk699oMITGYv62AcouC0ccg3
e0oEiktL2vbS5rKdlJNmGAxxFtz0SaVg1Sal2292GPhbLKrVH6bg3K87k9Te
GGworiNm0imQdHFez0nDoHNSsnebgoIjMcvPBWdgYGuukHXSbnse45+uwKBE
3LdTfJyCjbNOq14qMThZr0ww0D4KRg9dIQZko0PsmSwKdM2P5NktGOhz24K0
ORTYhk84tCIMWp6GBApPUSDtZ92a7MBgOvyefx7tMUMoK/EBBpnSZz6blBQ4
ejdcCR6g8w4slYzlUpDQoY9N/xOD8ORucUweBZXRo9NXhzGISpO73aTtv58f
xRvDILWnwTVHRcFJ0wBD3ATdhx3Pf0O7R725WG3AwCnNkht9mgI299AqnZHO
H210aaL9//+CNQdkTovzKfgXe+A0sw==
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-12., 12.}, {1345.5241109843632`, 
        1635.5303779907574`}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {0, 1345.5241109843662`}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1345.5241109843662`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-12., 12.}, {1345.5241109843632`, 1635.5303779907574`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.957661133204751*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"2be17255-e870-4625-85c1-e86ecd295fea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "Cosh[2]+Sinh[2]+Exp[2]/Sqrt[4]+Coth[4]+Coth[4]^y", Typeset`newq$$ = 
   "Cosh[2]+Sinh[2]+Exp[2]/Sqrt[4]+Coth[4]+Coth[4]^y", Typeset`chosen$$ = 
   "Cosh[2] + Sinh[2] + Exp[2]/Sqrt[4] + Coth[4] + Coth[4]^y", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {3.173828125, 7.826171875}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {3.173828125, 7.826171875}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "Cosh[2]+Sinh[2]+Exp[2]/Sqrt[4]+Coth[4]+Coth[4]^y", 
                  Defer[
                  Cosh[2] + Sinh[2] + Exp[2]/Sqrt[4] + Coth[4] + 
                   Coth[4]^$CellContext`y], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  RowBox[{"Cosh", "[", "2", "]"}], " ", "+", " ", 
                  RowBox[{"Sinh", "[", "2", "]"}], " ", "+", " ", 
                  RowBox[{
                   RowBox[{"Exp", "[", "2", "]"}], "/", 
                   RowBox[{"Sqrt", "[", "4", "]"}]}], " ", "+", " ", 
                  RowBox[{"Coth", "[", "4", "]"}], " ", "+", " ", 
                  RowBox[{
                   RowBox[{"Coth", "[", "4", "]"}], "^", "y"}]}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  RowBox[{"Cosh", "[", "2", "]"}], " ", "+", " ", 
                  RowBox[{"Sinh", "[", "2", "]"}], " ", "+", " ", 
                  RowBox[{
                   RowBox[{"Exp", "[", "2", "]"}], "/", 
                   RowBox[{"Sqrt", "[", "4", "]"}]}], " ", "+", " ", 
                  RowBox[{"Coth", "[", "4", "]"}], " ", "+", " ", 
                  RowBox[{
                   RowBox[{"Coth", "[", "4", "]"}], "^", "y"}]}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    RowBox[{"Cosh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{"Sinh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Exp", "[", "2", "]"}], "/", 
                    RowBox[{"Sqrt", "[", "4", "]"}]}], " ", "+", " ", 
                    RowBox[{"Coth", "[", "4", "]"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Coth", "[", "4", "]"}], "^", "y"}]}]], "Input"], 
                  All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "Cosh[2]+Sinh[2]+Exp[2]/Sqrt[4]+Coth[4]+Coth[4]^y", 
                    Defer[
                    Cosh[2] + Sinh[2] + Exp[2]/Sqrt[4] + Coth[4] + 
                    Coth[4]^$CellContext`y], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    RowBox[{"Cosh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{"Sinh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Exp", "[", "2", "]"}], "/", 
                    RowBox[{"Sqrt", "[", "4", "]"}]}], " ", "+", " ", 
                    RowBox[{"Coth", "[", "4", "]"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Coth", "[", "4", "]"}], "^", "y"}]}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    RowBox[{"Cosh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{"Sinh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Exp", "[", "2", "]"}], "/", 
                    RowBox[{"Sqrt", "[", "4", "]"}]}], " ", "+", " ", 
                    RowBox[{"Coth", "[", "4", "]"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Coth", "[", "4", "]"}], "^", "y"}]}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    RowBox[{"Cosh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{"Sinh", "[", "2", "]"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Exp", "[", "2", "]"}], "/", 
                    RowBox[{"Sqrt", "[", "4", "]"}]}], " ", "+", " ", 
                    RowBox[{"Coth", "[", "4", "]"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Coth", "[", "4", "]"}], "^", "y"}]}]], "Input"], 
                    All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[41]:=",ExpressionUUID->"02524740-1231-4b0c-896b-9c40a6b91ee9"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["\[ExponentialE]", "2"], "2"], "+", 
  RowBox[{"Cosh", "[", "2", "]"}], "+", 
  RowBox[{"Coth", "[", "4", "]"}], "+", 
  SuperscriptBox[
   RowBox[{"Coth", "[", "4", "]"}], "y"], "+", 
  RowBox[{"Sinh", "[", "2", "]"}]}]], "Output",
 CellChangeTimes->{3.957661792943028*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"b8b19aa4-8d08-4d34-adee-1117a7d40d00"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", "2"], "2"], "+", 
     RowBox[{"Cosh", "[", "2", "]"}], "+", 
     RowBox[{"Coth", "[", "4", "]"}], "+", 
     SuperscriptBox[
      RowBox[{"Coth", "[", "4", "]"}], "y"], "+", 
     RowBox[{"Sinh", "[", "2", "]"}]}], ")"}], 
   RowBox[{"\[DifferentialD]", "y"}]}]}]], "Input",
 NumberMarks->False,
 CellLabel->"In[42]:=",ExpressionUUID->"831314a0-a53c-483f-87b1-4de3b8a38966"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "2"], " ", "y"}], "2"], "+", 
  RowBox[{"y", " ", 
   RowBox[{"Cosh", "[", "2", "]"}]}], "+", 
  RowBox[{"y", " ", 
   RowBox[{"Coth", "[", "4", "]"}]}], "+", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Coth", "[", "4", "]"}], "y"], 
   RowBox[{"Log", "[", 
    RowBox[{"Coth", "[", "4", "]"}], "]"}]], "+", 
  RowBox[{"y", " ", 
   RowBox[{"Sinh", "[", "2", "]"}]}]}]], "Output",
 CellChangeTimes->{3.957661810526091*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"7652dab6-827a-46bb-b367-f874f0ed6784"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "2"], " ", "y"}], "2"], "+", 
   RowBox[{"y", " ", 
    RowBox[{"Cosh", "[", "2", "]"}]}], "+", 
   RowBox[{"y", " ", 
    RowBox[{"Coth", "[", "4", "]"}]}], "+", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"Coth", "[", "4", "]"}], "y"], 
    RowBox[{"Log", "[", 
     RowBox[{"Coth", "[", "4", "]"}], "]"}]], "+", 
   RowBox[{"y", " ", 
    RowBox[{"Sinh", "[", "2", "]"}]}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[43]:=",ExpressionUUID->"2da2d35d-dfb8-4ba7-8960-339534f57d5d"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "2"], " ", "y"}], "2"], "+", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Coth", "[", "4", "]"}], "y"], 
   RowBox[{"Log", "[", 
    RowBox[{"Coth", "[", "4", "]"}], "]"}]], "+", 
  RowBox[{"y", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cosh", "[", "2", "]"}], "+", 
     RowBox[{"Coth", "[", "4", "]"}], "+", 
     RowBox[{"Sinh", "[", "2", "]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.957661861532876*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"08fffcf9-5499-49de-9d95-46a51356ab9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "2"], " ", "y"}], "2"], "+", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"Coth", "[", "4", "]"}], "y"], 
     RowBox[{"Log", "[", 
      RowBox[{"Coth", "[", "4", "]"}], "]"}]], "+", 
    RowBox[{"y", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cosh", "[", "2", "]"}], "+", 
       RowBox[{"Coth", "[", "4", "]"}], "+", 
       RowBox[{"Sinh", "[", "2", "]"}]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "12.`"}], ",", "12.`"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[44]:=",ExpressionUUID->"564f7805-a7cf-49d6-aabb-85ad19038b24"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], AbsoluteThickness[2], Opacity[1.], 
         LineBox[CompressedData["
1:eJwt1P9TzHkAx/E29po6xfXt3JbUbrufK3cOk6Kkl3CSqKwldzkhSlrFJcmE
bupq6cvq9tsnjW+FvpjYlg59e6ew6Pv1ZaKr1KH01VW226Tbm7kfXvOcxz/w
stsbsXW/vp6e3mbd/uu+W+KRmRmKbJo8dGReqwTmUyye20eKTFRO6/2sc/X3
1wKjJymyUHNe3KIzr/P+08FRimiyK29ltknwbk5vdvsrijQYrB62b5cgMmx5
gKqKIo2T+YdWdkhwivuCHEiiSHqiIHRvjwSZFzgZtSYUaTo2FHpnWIJLXckR
/oY88qyMcA4ZSmHZwPd1sOAS46/VrYFsKdR+/HXPufYkune9sNFVCi8HbhSH
zSEZGklDgEAK18LA6/XfsUly5yjb6rAU2rMHzJY52JHaZ4MbR5OlmNDkSH+i
bMnswf07vLKlqGZnOJULbYg6TeT9skQKN+Zp1aJga5IlM7COb5VCAheXNXEs
snZPaN2eESn2ZQW8fndpPlk6VLzrkYEM9TdsDBmZliTnbWezG1sGmzm3l1YU
mxOLBw85Q64yGNm+qe/PNyWpm7bsVQpkCN+WqMjNnUe4W+rOTEbIEFTV9dwm
w5hEfJkrjE2Wge3+yf9RvCH5IquXPzdbhrxQ1auSYiZx5StndZXIEDamDDyX
ySBGp0vuVLbKsPgUc+dnnKmKlhtcT+q9DGYnmj+XXRircOIr058YytEWHO54
q/dNhVmtZ1+svRzHYx3TnkrrKqqKeB9D3eXIT1+BnCW1HqojNT3tAjnSDsa3
Bv3y1sOvitm5K1IO43Eft5v+Yx6dUYHnrEVydEc9dopOmPJIYtkJhrPlGL6/
+eFxNQMdeqpxz3I5riddCQoWMfFn4/tVTa1ycD8UmMVcMEReRkhB1Hs5OosW
lrmFGmOZb0mZv5ECAnl38oB4HnbHrM5SshW4eC2lzEdmCt+axHx7dwVm/ygc
Yp4wx4uYaH6TQIG6oLwbWxMsMenPdPotUoG7xqxdmvD5uGgakp8mUoCXaddn
4MMC48q+/jlXFdBGJ0wX8K1R2ZV58GKpAgNaK5PcFTbIb94THdaiwOWQpGYr
ji2cRjfWbBxVQLymJuUrrh1stR1DBUY0TCIKPKss2JB0nMnw4tAoX3evrJjF
QdrrBWcn3WlMC3c7bzexh+XJiZme7TQYBk30oml7jEc+d/GLoOHsdfShtx4P
jFTnmgYRDW3HzT6Lv3loD6Fbzl2lsS5cLd78gQeVo89arc6pU70rErU8FDD0
laHZNGxZVqJxfQrageiU9Tk0NuwQOfxhRmFJUeLamWs0JI37w8TLKXxkuhQd
zaOx+LHNoNEJCl1Nfed33qYRI3CVeMZRyLb6NPNE58q/BKti4ynkxlgedlbS
2DYrNaVfRCEuws/brIjGSUx9o86kEObXr1+roqF+0CZMLKUQ0F0Yhd9pmHqP
WZQRCqXCiZ5CnQPbTcrHqykcm+vhv+AejRHNepPgWgqv019+q9XZcvmdQs9O
Ct0JK9+qHtAIqq7fHttDgXFXIWCX0MjjD3xSvqFw6h9tlVjnVUfZvnYjFDIq
1JeFpTR+ZazWBIxRcFzjNLdD5wbxzktiDQVu29U47zIaLNtjG9RTFM7Emw/e
0/n//wIg+oEqp/Ev2zJVuA==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJwt1P9TzHkAx/E29po6xfXt3JbUbrufK3cOk6Kkl3CSqKwldzkhSlrFJcmE
bupq6cvq9tsnjW+FvpjYlg59e6ew6Pv1ZaKr1KH01VW226Tbm7kfXvOcxz/w
stsbsXW/vp6e3mbd/uu+W+KRmRmKbJo8dGReqwTmUyye20eKTFRO6/2sc/X3
1wKjJymyUHNe3KIzr/P+08FRimiyK29ltknwbk5vdvsrijQYrB62b5cgMmx5
gKqKIo2T+YdWdkhwivuCHEiiSHqiIHRvjwSZFzgZtSYUaTo2FHpnWIJLXckR
/oY88qyMcA4ZSmHZwPd1sOAS46/VrYFsKdR+/HXPufYkune9sNFVCi8HbhSH
zSEZGklDgEAK18LA6/XfsUly5yjb6rAU2rMHzJY52JHaZ4MbR5OlmNDkSH+i
bMnswf07vLKlqGZnOJULbYg6TeT9skQKN+Zp1aJga5IlM7COb5VCAheXNXEs
snZPaN2eESn2ZQW8fndpPlk6VLzrkYEM9TdsDBmZliTnbWezG1sGmzm3l1YU
mxOLBw85Q64yGNm+qe/PNyWpm7bsVQpkCN+WqMjNnUe4W+rOTEbIEFTV9dwm
w5hEfJkrjE2Wge3+yf9RvCH5IquXPzdbhrxQ1auSYiZx5StndZXIEDamDDyX
ySBGp0vuVLbKsPgUc+dnnKmKlhtcT+q9DGYnmj+XXRircOIr058YytEWHO54
q/dNhVmtZ1+svRzHYx3TnkrrKqqKeB9D3eXIT1+BnCW1HqojNT3tAjnSDsa3
Bv3y1sOvitm5K1IO43Eft5v+Yx6dUYHnrEVydEc9dopOmPJIYtkJhrPlGL6/
+eFxNQMdeqpxz3I5riddCQoWMfFn4/tVTa1ycD8UmMVcMEReRkhB1Hs5OosW
lrmFGmOZb0mZv5ECAnl38oB4HnbHrM5SshW4eC2lzEdmCt+axHx7dwVm/ygc
Yp4wx4uYaH6TQIG6oLwbWxMsMenPdPotUoG7xqxdmvD5uGgakp8mUoCXaddn
4MMC48q+/jlXFdBGJ0wX8K1R2ZV58GKpAgNaK5PcFTbIb94THdaiwOWQpGYr
ji2cRjfWbBxVQLymJuUrrh1stR1DBUY0TCIKPKss2JB0nMnw4tAoX3evrJjF
QdrrBWcn3WlMC3c7bzexh+XJiZme7TQYBk30oml7jEc+d/GLoOHsdfShtx4P
jFTnmgYRDW3HzT6Lv3loD6Fbzl2lsS5cLd78gQeVo89arc6pU70rErU8FDD0
laHZNGxZVqJxfQrageiU9Tk0NuwQOfxhRmFJUeLamWs0JI37w8TLKXxkuhQd
zaOx+LHNoNEJCl1Nfed33qYRI3CVeMZRyLb6NPNE58q/BKti4ynkxlgedlbS
2DYrNaVfRCEuws/brIjGSUx9o86kEObXr1+roqF+0CZMLKUQ0F0Yhd9pmHqP
WZQRCqXCiZ5CnQPbTcrHqykcm+vhv+AejRHNepPgWgqv019+q9XZcvmdQs9O
Ct0JK9+qHtAIqq7fHttDgXFXIWCX0MjjD3xSvqFw6h9tlVjnVUfZvnYjFDIq
1JeFpTR+ZazWBIxRcFzjNLdD5wbxzktiDQVu29U47zIaLNtjG9RTFM7Emw/e
0/n//wIg+oEqp/Ev2zJVuA==
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-12., 12.}, {1333.5160576696678`, 
            1647.5384313054528`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 1333.5160576696708`}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-12., 12.}, {1333.5160576696678`, 
           1647.5384313054528`}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {0, 1333.5160576696708`}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.24, 0.6, 0.8], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwt1P9TzHkAx/E29po6xfXt3JbUbrufK3cOk6Kkl3CSqKwldzkhSlrFJcmE
bupq6cvq9tsnjW+FvpjYlg59e6ew6Pv1ZaKr1KH01VW226Tbm7kfXvOcxz/w
stsbsXW/vp6e3mbd/uu+W+KRmRmKbJo8dGReqwTmUyye20eKTFRO6/2sc/X3
1wKjJymyUHNe3KIzr/P+08FRimiyK29ltknwbk5vdvsrijQYrB62b5cgMmx5
gKqKIo2T+YdWdkhwivuCHEiiSHqiIHRvjwSZFzgZtSYUaTo2FHpnWIJLXckR
/oY88qyMcA4ZSmHZwPd1sOAS46/VrYFsKdR+/HXPufYkune9sNFVCi8HbhSH
zSEZGklDgEAK18LA6/XfsUly5yjb6rAU2rMHzJY52JHaZ4MbR5OlmNDkSH+i
bMnswf07vLKlqGZnOJULbYg6TeT9skQKN+Zp1aJga5IlM7COb5VCAheXNXEs
snZPaN2eESn2ZQW8fndpPlk6VLzrkYEM9TdsDBmZliTnbWezG1sGmzm3l1YU
mxOLBw85Q64yGNm+qe/PNyWpm7bsVQpkCN+WqMjNnUe4W+rOTEbIEFTV9dwm
w5hEfJkrjE2Wge3+yf9RvCH5IquXPzdbhrxQ1auSYiZx5StndZXIEDamDDyX
ySBGp0vuVLbKsPgUc+dnnKmKlhtcT+q9DGYnmj+XXRircOIr058YytEWHO54
q/dNhVmtZ1+svRzHYx3TnkrrKqqKeB9D3eXIT1+BnCW1HqojNT3tAjnSDsa3
Bv3y1sOvitm5K1IO43Eft5v+Yx6dUYHnrEVydEc9dopOmPJIYtkJhrPlGL6/
+eFxNQMdeqpxz3I5riddCQoWMfFn4/tVTa1ycD8UmMVcMEReRkhB1Hs5OosW
lrmFGmOZb0mZv5ECAnl38oB4HnbHrM5SshW4eC2lzEdmCt+axHx7dwVm/ygc
Yp4wx4uYaH6TQIG6oLwbWxMsMenPdPotUoG7xqxdmvD5uGgakp8mUoCXaddn
4MMC48q+/jlXFdBGJ0wX8K1R2ZV58GKpAgNaK5PcFTbIb94THdaiwOWQpGYr
ji2cRjfWbBxVQLymJuUrrh1stR1DBUY0TCIKPKss2JB0nMnw4tAoX3evrJjF
QdrrBWcn3WlMC3c7bzexh+XJiZme7TQYBk30oml7jEc+d/GLoOHsdfShtx4P
jFTnmgYRDW3HzT6Lv3loD6Fbzl2lsS5cLd78gQeVo89arc6pU70rErU8FDD0
laHZNGxZVqJxfQrageiU9Tk0NuwQOfxhRmFJUeLamWs0JI37w8TLKXxkuhQd
zaOx+LHNoNEJCl1Nfed33qYRI3CVeMZRyLb6NPNE58q/BKti4ynkxlgedlbS
2DYrNaVfRCEuws/brIjGSUx9o86kEObXr1+roqF+0CZMLKUQ0F0Yhd9pmHqP
WZQRCqXCiZ5CnQPbTcrHqykcm+vhv+AejRHNepPgWgqv019+q9XZcvmdQs9O
Ct0JK9+qHtAIqq7fHttDgXFXIWCX0MjjD3xSvqFw6h9tlVjnVUfZvnYjFDIq
1JeFpTR+ZazWBIxRcFzjNLdD5wbxzktiDQVu29U47zIaLNtjG9RTFM7Emw/e
0/n//wIg+oEqp/Ev2zJVuA==
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-12., 12.}, {1333.5160576696678`, 
        1647.5384313054528`}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {0, 1333.5160576696708`}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1333.5160576696708`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-12., 12.}, {1333.5160576696678`, 1647.5384313054528`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9576618774574137`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"214c1d8a-2526-4763-a6db-58773c35fdbb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["{y, -12., 12.}", "ChatInput",
 CellDingbat->Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      If[
       TrueQ[CloudSystem`$CloudNotebooks], 
       RawBoxes[
        TemplateBox[{}, "ChatIconUser"]], 
       RawBoxes[
        TemplateBox[{}, "ChatInputCellDingbat"]]], StandardForm]]], 
   Background -> None, CellFrame -> 0, CellMargins -> 0],
 CellChangeTimes->{{3.957661966164345*^9, 3.957661981964101*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"073ab179-c043-4f6c-b7c2-48478d4024fa"],

Cell[TextData[{
 "It seems you're working with various mathematical expressions and \
computations in the Wolfram Language. Let's clarify some aspects of the \
computations you've performed:\n\n1. ",
 StyleBox["Expression Evaluation and Simplification:",
  FontWeight->Bold],
 "\n",
 Cell[TextData[{
  "   ",
  StyleBox["\[Bullet]",
   FontColor->GrayLevel[0.5]],
  " ",
  "You evaluated the expression involving exponential, hyperbolic cosine, and \
hyperbolic sine functions. The expression was simplified to ",
  Cell[BoxData[
   FormBox[
    TemplateBox[<|"boxes" -> FormBox[
        RowBox[{
          RowBox[{"(", 
            RowBox[{
              SuperscriptBox[
               StyleBox["E", "TI"], "2"], "/", "2"}], ")"}], "+", 
          StyleBox["C", "TI"], 
          StyleBox["o", "TI"], 
          StyleBox["s", "TI"], 
          StyleBox["h", "TI"], 
          RowBox[{"[", "2", "]"}], "+", 
          StyleBox["C", "TI"], 
          StyleBox["o", "TI"], 
          StyleBox["t", "TI"], 
          StyleBox["h", "TI"], 
          SuperscriptBox[
           RowBox[{"[", "4", "]"}], 
           StyleBox["y", "TI"]], "+", 
          StyleBox["S", "TI"], 
          StyleBox["i", "TI"], 
          StyleBox["n", "TI"], 
          StyleBox["h", "TI"], 
          RowBox[{"[", "2", "]"}]}], TraditionalForm], "errors" -> {}, 
      "input" -> "(E^2/2) + Cosh[2] + Coth[4]^y + Sinh[2]", "state" -> 
      "Boxes"|>,
     "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
   "8639937e-c43e-4734-9be7-6f739c23a15a"],
  "."
 }], "InlineSubitem",ExpressionUUID->"8f8df5eb-4c16-4e19-b7ef-ff35606de395"],
 "\n2. ",
 StyleBox["Integration:",
  FontWeight->Bold],
 "\n",
 Cell[TextData[{
  "   ",
  StyleBox["\[Bullet]",
   FontColor->GrayLevel[0.5]],
  " ",
  "You integrated the expression ",
  Cell[BoxData[
   FormBox[
    TemplateBox[<|"boxes" -> FormBox[
        RowBox[{
          RowBox[{"(", 
            RowBox[{
              SuperscriptBox[
               StyleBox["E", "TI"], "2"], "/", "2"}], ")"}], "+", 
          StyleBox["C", "TI"], 
          StyleBox["o", "TI"], 
          StyleBox["s", "TI"], 
          StyleBox["h", "TI"], 
          RowBox[{"[", "2", "]"}], "+", 
          StyleBox["C", "TI"], 
          StyleBox["o", "TI"], 
          StyleBox["t", "TI"], 
          StyleBox["h", "TI"], 
          SuperscriptBox[
           RowBox[{"[", "4", "]"}], 
           StyleBox["y", "TI"]], "+", 
          StyleBox["S", "TI"], 
          StyleBox["i", "TI"], 
          StyleBox["n", "TI"], 
          StyleBox["h", "TI"], 
          RowBox[{"[", "2", "]"}]}], TraditionalForm], "errors" -> {}, 
      "input" -> "(E^2/2) + Cosh[2] + Coth[4]^y + Sinh[2]", "state" -> 
      "Boxes"|>,
     "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
   "1d4b03a0-839a-469d-a1c1-1818e1dd88e4"],
  " with respect to ",
  Cell[BoxData[
   FormBox[
    TemplateBox[<|"boxes" -> FormBox[
        StyleBox["y", "TI"], TraditionalForm], "errors" -> {}, "input" -> "y",
       "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
   "997aa5b4-1f64-4145-8ea2-59ef19ec0a55"],
  ", resulting in:"
 }], "InlineSubitem",ExpressionUUID->"a859ee3a-6a39-4e4b-8257-134a8a183a22"],
 "\n     ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox[
          RowBox[{
            SuperscriptBox[
             StyleBox["E", "TI"], "2"], 
            StyleBox["y", "TI"]}], "2"], "+", 
         StyleBox["y", "TI"], "\[CenterDot]", 
         StyleBox["C", "TI"], 
         StyleBox["o", "TI"], 
         StyleBox["s", "TI"], 
         StyleBox["h", "TI"], 
         RowBox[{"[", "2", "]"}], "+", 
         FractionBox[
          RowBox[{
            StyleBox["C", "TI"], 
            StyleBox["o", "TI"], 
            StyleBox["t", "TI"], 
            StyleBox["h", "TI"], 
            SuperscriptBox[
             RowBox[{"[", "4", "]"}], 
             StyleBox["y", "TI"]]}], 
          RowBox[{"log", 
            RowBox[{"[", 
              RowBox[{
                StyleBox["C", "TI"], 
                StyleBox["o", "TI"], 
                StyleBox["t", "TI"], 
                StyleBox["h", "TI"], 
                RowBox[{"[", "4", "]"}]}], "]"}]}]], "+", 
         StyleBox["y", "TI"], "\[CenterDot]", 
         StyleBox["S", "TI"], 
         StyleBox["i", "TI"], 
         StyleBox["n", "TI"], 
         StyleBox["h", "TI"], 
         RowBox[{"[", "2", "]"}]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\frac{E^2 y}{2} + y \\cdot Cosh[2] + \\frac{Coth[4]^y}{\\log[Coth[4]]} \
+ y \\cdot Sinh[2]", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "feb878ac-05a8-4716-a8fa-1c128478ec81"],
 "\n3. ",
 StyleBox["Plotting:",
  FontWeight->Bold],
 "\n",
 Cell[TextData[{
  "   ",
  StyleBox["\[Bullet]",
   FontColor->GrayLevel[0.5]],
  " ",
  "The plot you created represents this integral over the range ",
  Cell[BoxData[
   FormBox[
    TemplateBox[<|"boxes" -> FormBox[
        RowBox[{
          StyleBox["y", "TI"], "\[LongEqual]", "-12"}], TraditionalForm], 
      "errors" -> {}, "input" -> "y = -12", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
   "fa16dd35-ad25-4900-acc9-9f476e4eea83"],
  " to ",
  Cell[BoxData[
   FormBox[
    TemplateBox[<|"boxes" -> FormBox[
        RowBox[{
          StyleBox["y", "TI"], "\[LongEqual]", "12"}], TraditionalForm], 
      "errors" -> {}, "input" -> "y = 12", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
   "16acd35b-5032-402b-be52-bd905c61ebc7"],
  ", depicting a linear relationship due to the terms involving ",
  Cell[BoxData[
   FormBox[
    TemplateBox[<|"boxes" -> FormBox[
        StyleBox["y", "TI"], TraditionalForm], "errors" -> {}, "input" -> "y",
       "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
   "5481f978-b03b-4e39-bad7-6b305627cc13"],
  "."
 }], "InlineSubitem",ExpressionUUID->"d750a3cc-2240-4b2b-96ca-75c074cce26d"],
 "\n4. ",
 StyleBox["Error Message:",
  FontWeight->Bold],
 "\n",
 Cell[TextData[{
  "   ",
  StyleBox["\[Bullet]",
   FontColor->GrayLevel[0.5]],
  " ",
  "The ",
  Cell[BoxData[
   TemplateBox[{
     Cell["URLRead::invhttp", Background -> None]},
    "ChatCodeInlineTemplate"]], "ChatCodeActive",ExpressionUUID->
   "070389b3-906e-4984-bb97-9a8ed367e89b"],
  " error message indicates a timeout issue while trying to perform an \
operation that requires internet access (perhaps a resource or API query). \
This timeout does not affect the local computations but may hinder fetching \
external data or resources."
 }], "InlineSubitem",ExpressionUUID->"6f369c19-d9f8-4c83-848b-bd7bb967f370"],
 "\nIf you have specific questions or need further explanations on any part \
of the computations or the error, feel free to ask!"
}], "ChatOutput",
 CellDingbat->Cell[
   BoxData[
    PaneBox[
     TemplateBox[{}, "ChatIconCodeAssistant"], ContentPadding -> False, 
     FrameMargins -> 0, ImageSize -> {35, 35}, ImageSizeAction -> 
     "ShrinkToFit", Alignment -> {Center, Center}]], Background -> None],
 TaggingRules-><|
  "CellToStringData" -> 
   "It seems you're working with various mathematical expressions and \
computations in the Wolfram Language. Let's clarify some aspects of the \
computations you've performed:\n\n1. **Expression Evaluation and \
Simplification:**\n\n   - You evaluated the expression involving exponential, \
hyperbolic cosine, and hyperbolic sine functions. The expression was \
simplified to \\((E^2/2) + Cosh[2] + Coth[4]^y + Sinh[2]\\).\n\n2. \
**Integration:**\n\n   - You integrated the expression \\( (E^2/2) + Cosh[2] \
+ Coth[4]^y + Sinh[2] \\) with respect to \\( y \\), resulting in:\n     \\[\n\
     \\frac{E^2 y}{2} + y \\cdot Cosh[2] + \\frac{Coth[4]^y}{\\log[Coth[4]]} \
+ y \\cdot Sinh[2]\n     \\]\n\n3. **Plotting:**\n\n   - The plot you created \
represents this integral over the range \\( y = -12 \\) to \\( y = 12 \\), \
depicting a linear relationship due to the terms involving \\( y \\).\n\n4. \
**Error Message:**\n\n   - The `URLRead::invhttp` error message indicates a \
timeout issue while trying to perform an operation that requires internet \
access (perhaps a resource or API query). This timeout does not affect the \
local computations but may hinder fetching external data or resources.\n\nIf \
you have specific questions or need further explanations on any part of the \
computations or the error, feel free to ask!", "ChatData" -> 
   "OEM6eJztXM1vJMd1l63VSjuy9WHJjuIATi21gckVZzjT3fPFeGVzuVwt4+\
Uuw6akGEPK0zNTM9NiT/e4P0iOVws4hwA5JIcECIwECJJ7gtxz9iFH/\
wuBD0EOAZx7Lvm9V1U9PfzYD8k2kiCElpzpfvXq1fv4vfeqq7XxsOx+fSMIohNXBrKf+\
lG4GYWpPE2Tl+56QSLL7ssb0+kDbyLdl+/IoZcFadktbSSJn6Re2Jc52WsbWTqWYer3PeLiXr1/f+\
f7PhNnaXQ3iidemlzZjzNJM+KS6x1LzHUs44RHJDmr0m0vkbtxNJmmwy8nV+\
5jKvfagyiVvSg6Sty3P46CYexN7nvhKPNG0k1nAUZ94/Zs6iXJnkymYCY3x7J/\
5IejnOvbm2Mv1YvbjeWU+SfXSBSI5vfL7teI4k7sH8swn82MfpPu3YMkUTy7L8NROv7031/\
UQ7bDaYZfA1p6FLtX/vPv/vIfy+4bxcV9+OH2neTKgygEq9f1DVzeywKZmOuv3pFJP/\
anrL7GPRlMxYmfjsVJ7KdYiPDCgRjJUMYef9VaEEYNoh8NmIufTANvRiYbfil5Zc87uR2dygSfS3dm\
oTfx+/gOvX7z7tYu1uqlsns3hlq2wgF0F2VxX0JELIvW76Yx6dB9ZxcCR6FHXDcxj3EA2PdNzfW8mX\
9rK/R6gSReH8RRNnVlSpLPDf2mIoCnuDI+9vukCzX0DXCCHLOwP4ZsUTYf88bdWP4ok2F/\
titDL0hn8d/8Nf3883dx7x50FMj4bhayKycbV8vuNZp/oxfFqVH0K3RlN0ryCy/zhVia72/\
tR1GwR9Mk6Z7sS3jEwNz7urqnnOwDZY753VdIhQGTq4W8fVak78tZMryqvfrK7Wgwc6/\
R781xFh65X8s/wv9JH3LgltzUS7OE1O6W9r3kSH13r23BUVOySNm9es8fDGQ419K9WS/\
2ByTrjkzHUS7Pa9thP8gGUrvygv+/\
vh2OJZyN4npfJrkdcR0e6AUcQDIIciPBcFvHXpCR2zNEfPWMb7y1453SCOVGKm78F3705RcwmG6paN\
yPjiC6/8ILdP23cf1hliKizg7kgLuG24p+QfQ3+\
PLcMMnmS2X3qzsyHskdaBHhkbvWN3b80J9kk5x0X0HRl8ruSzsQP9j4MjxCO6T76saPs1g+\
nMpwY7vsXuFVvjmapmUnKltVyylXW+VqA5i1A2T0J9HAy9Vz5WKVGGj5GJqWyjjua3A+\
CTiCo933wyMIqWbc2N3eBEwFkjFk7757c5ym02R9bc2b+pUINJ5f6UeTtePaWh/\
WWevn1AnCi5iQVja9IGAQWNDZ1YexP/JD9w2NJGsm6LGaXa8PNryAC26/\
CHHdf3rxB1EmvFgKT4wBVsMsOI9Jnlm4AEbIgSBliFwbFQEWsfg06gk/\
EWkkBpFAEhHDiDISDL9eKt0UD4dDGZ9nnWQjWJWXKnpIGAMRhWIay2MfcCF8wuSkguEMpEP/\
VMg4jmK+tHUKhPRDdUVMtIOIRM2eJZguCwdAPAg5SMQJFi5OEGuA4igcFTlE7KmQnUgm3kz0CIfDYZ\
YQRGNFfihPpwgqABYkJNYsgVLBfDoG+ghfYwya+v0EmhOhlAM5qIiPx34gxQzaTqayj0D0fyzB+\
JxKVpmm74VsD8XTC2eKYwVxTBBHgpxHzrc03EDqOXi+\
TGkPQbgfkelNHC3pabvGH7rnaMruV4ojKA0Zrvh8xQ2ilMKtRERu1pv4i3n4DZVG6K5CguT6uTnPkg\
DZ1CXj78nvXjLGEGDRHIJzHoxtN84Nu4DqAqD/\
lipYdEaIYr14pBmfqyqAyjcvJtmLAuledWdJKidY/Bki0p5KFm/\
vyYByzZ2on03gjVxYIMueHaCS6mBBpS8romT4gmJWJm5qAVyLmcxskN2V4WABT4vMXgM5aeEOhvTm6\
f6r7jg6YXCFfy5OjxQWTRVs5xXd1dKaPJV998oa5kJeBdRL1BHhSKk5R0Yvptyjiwx41r7X68mBdgw\
99Zv7HpA+3QyibPCw9ykK2YXpX90HuJJ2AOXxkH/+DU7/\
2r5P1UyYpDFieXHI11na29kAbBnap4EvY/Lar/IdLFGlvKs6GbjfNI61deoRCCuNc3HqXuVwuE+\
CaqK8ilmY9W1ze0+m8czET75I3FxgvqjjebKHN/lERSvHxYdTFc9IiV/\
R3r0RTMfexotcdHJRv4sSIa8eXrkbBYOFK68jv+LC7RkiIcpQ5X/v9utI1u+cKcXzaoCw4y3uK+\
RgC1bOUrnrpeMzSVsT7ElvoO6+uEGx9aa+zoF3ftjraEjgMh/\
ubWstGCHf0dNjsYuW3fwOsp2ugxYK/l242xnSb0GTH8veXZn2gcYbXypUKmGqC5F/BZi+\
CiJXejFTXTFCbwygS02cXNP1lIR7v2JUtHgVrLcR9lyuXDXG+yCKRmS8NzDF9oQ6nF/vPOxYef+\
3P5vKjRco0HA1BxNT0+xH012Kgnf2Y69/5PZjpGoo8WO0fruB159TvvyRanHcl6xKteLAbB/\
5iQ9eupNIhlc0ECxWSMgK+Mqmj91ru5RlOU1QI8PlGco0liwHkgWfvtwlIfwdL/XIoq/\
kmUnLQCXflUUcfllr1/2T9v/XOf+b6pxS6V2hkmEgtimsM1XOlErGjghz3O1zF60GK+FS9JrZiL7q+\
fOZyQOFKdwrYn8MM+K/wD8ir4jlKAu8WISaQMjTvpymwk/FGMszzKhAV/YSfao0oG+/\
P57rhhaED6RNVGmDub1wAbc2tsUy1r1C08v5TVJFrHpUMQQezvmN0dXATjIkSx3LGEhArJRBqe9S9L\
nUfeXwFYHk4WM9wYwVXXAcDgIDn8hSswJn5lXg3ZPDKKb5ScsDtSehBDACVgQKMnxTIXESxSRCjLWk\
emYxyeA73gDeIs3APGTEKPOBBvC7hKOHIyw25QrsGgTkpFMvppCBGSZefDSITkLeRxlyKchyswxKol\
UKDeNbZIp8TDJDvXVKQqiRSjH5dBWxFSYoLniwTPreVJK5yckQCHMfF/6QSRD/\
UDuETMYFngUhlW6kSvarZtgJAQzBh1InXC8gmIRveQCt2E+\
OCnrTYvip8fEeADsJvGS8Lg5uQmOE2RLWW1wLuwGsmNCIIOofiWjIW0tQTgYcAWDkPBEwUjJf+\
MNRwpr11f4C6zQwGHaCqYQ3RQ3Vp3SyXup2u+\
ZmiZjTBS1Svt9F1yn8F8RbBfrB70bk7spsxJBpf1882Ppoay+\
XYGk77FQqlcP1W0sCylxCycjf8TXwehIBqE3PE7HDkFF6OdPeLPcMgrL7H2/\
8wC0oISTnM4OhjUGU8ahcHRS3x5EP75v0fLhrOlOEfbXtwakiWRfd7s5M74Tgk2mUOqeHSiWUCeEXG\
AeEjalHo0yggPe+ty//iNWeiwWJJ0aegFAp8UchZrlx4/QTS7wnZp9YN26A7/\
bwMrv3wYoqU9K94pGsslGkgVrtW4PiFHCqG+12pV0n2N/e2X24t7/xYP/\
6gpdpLnO3NboSy90VskaBn1i+sSI0mKwa5V/\
u04hAFSzrYhv4Spt7wC0jkyAJYE2UeiwHAg51PRlIczzo0vQHN5BYI6SxYHYdq6CtGMSaQiQiPpebB\
8VWjPxF58MFoFLYsS467HWHy1PeW1nPYn9lIczXS9duis4+uV5OFMvhGl9Z4Zv5xA+\
PaX9KnuSEjIZr5r65rUbx/rRwWYx8QAocj5GW1viuurliQhDTSvKBC/eZk9mkh/\
prbhxlVXY8j2BjUSuIEqTMhxS1XPb4hZEUbxRA5DPnsloCbLkoh12YtVY5CjiIoyEuUBgP/\
CEvQyc6Lm/y7AjuCWv8Q6pVVMZl6OcKx8hx7M+\
LAakqSYaGpXzff0kn83z6HoEWPwuQAwOTUBpvZAp6NFARm2oE2hiPr3q9SMNZoUZQlQpDmcrbcXQMG\
yMfDnhHgSoKhRqrokc1RT40EfR4g7Z61HqRhTJQ60WdqRJSzngV0sS2GjyQpFwt+y///\
C9YEuMFXGSbqlM5i3fsoVzoUZ4irjrjXvh4oqAhvTA4CA0KCQ8JT5UgQ7pIxQbpYMKWkBN0/\
ZxC9QjtADzpLGeMlXMbQsEIeIhO57pQ7qiHU8ol5NX5ltus29FpZ+m6CVOUB15/\
TH68vramvazsD1aWgMtc0Ks50XpGeQFGnCPeVYW+WXD8Rj/gwxng/\
x48U1U8ikFe8Y0LpYY2D8KEpO92nypQt3suSyaXVQznBVTlJLsCpqSA9E5I7RHbANiE+\
p2KerpwVlsSiQGA15fKBp9S2UFRi2Uxb66nVApMveBIu3rGXpnIHFphcxWHKlJUqfWd65es9/r7qt/\
g7BuFRtIk9xQ/VL42TzimxpOmFwSHKDhTY3W7m1EQxQ/kCMbqPGF6tv8+\
68bk44JfJwqkIAQ7YkXcUbVesS46q0eISWAQz72CvUq5Bqwyrz71svOVUlK6r5bLxRo3XS6nVNzqZX\
4Amal8paZWDHVtgc4qnVXEBlsG+eCIuWUhPYxUcDfU9X2sHoKhO6O26lxM8+6W+CCvxKkQ/\
76UUyVRwptQqvibRgl3/\
yVl6LkkhGsjMKWdP1JfKr0BmXRKG9KDDFUChmgdUpeNymAURD0MPAZ4EuwkagY//\
bby31DSTrYXz6hoC068WcKaVJmdii5VXIb09IxrKXIPDp85x2VZGVUE7ULFm6jSgk003pQdH3ApQ+\
wo0VPh6U19+LZASuVSP40K4HuWH43reuivws6ROEUx9vO/\
OuwWF93dOHOT5tzlbCwmUGl8vhnO07HHLSPvcZk03o+\
lelY8DaIUsYrUISK1GYiCEb0n0rUuhWl0IEeS9gGwhol3pDO69BJfpYn5VkHJQHSOG17C0U2apH44y\
YK0uC52B5XDBhnDBXKVIlvNEfBEreyHpjH44WK4zq2pUzUuZzFXXaZjoJ3kSl7bcvYYRXqDglfkMSd\
Bvl3olFCWINpub919uLdFzGlEzp8dnzec1AYCVyRen1yMe1K6ozt5ClzuHlTCpmdxWSr1OhGZ+\
xHPrKUo1E2FYlG3zUUpDKijzaXnexMygBePavTLUpvopdIGp5Y55PHlVQ2oHPwMUVLtxfL1XBUmANg\
JYslaJQIlOBRgegVMyIVdwrgA9Ib+eGtccu6mbMDgofIMtTdkfOmRp+\
mheqkmQfcBuaojpzoLeMkiq+nJ+\
ucWva4usweVMAKebGQoKQgirayDJe8ylZjaKKn07rsAPV2tGKPqgPpMVTbLayfeSokgKqTHBRTZJtC\
AhLHPWwuoixZHwdrUT2TTchqVB8gf2viexjjtAjr7Ee6kvs5UiDFk2Hi2KqbjWeL3ocSRJETE11UxV\
o/pEboxlbggjMJoMlPV7gSeUiltGKOUrpGEM1Fm7XGJVroG008TXAJE6l03kYyjE0HXy71Zmf7C+\
4OMi6Pl29CJ9MJVDRNesJIraI44+ZYqaQsU+\
ru8pOYr7rDQkmFpiSKRBhwB0WRQKEEGkdRFyMI2ExUVBY+c54MjAUyHAjkJUztnROGugtMph3gx++\
bwdKYBpm3OGBBnBJ6onThqNysEKV5h18jwSExZPlCtT17FUddjoM27cLIcHNPZlGJd10V6q1VXGLmm\
k2w6pSMs883LY2l6nxzLd7zQn2b0kFAtnbEqpmnmgIUqAQ459JGVKqVdqtXPe7pqQNjPu2gAOkvsWC\
h8VzXSEeLDOaIRbUET1KVxUL6lx2GtpjhHnfvgYuakOdUoGMTLn91w1UgtfhQf6T3WidePI6q3EO+\
gUKuDH2fBwGwN5MXSJauBlFEv5e3JMT3qVIy7f5h5FI0zLK17B4pTTw/p25a5LtN+\
hfsgPSEgnjCWmkzo/\
CAb2vUaLfoP3IcPFsKRvb98SVQUnJVx6W7G8MzFKFBpfyErUCbrAXyGug1Wh8pycuVjAzlRj7Hg/\
hTixY1MlaY4+BY45P0pb8iWSuVyuVT6zmf+5IdI9HH62fu8+XUP3IZeTJ3BjCz34Aebqk25HQGewu/\
yAKSsz95fHJw/FSkBJ0ofyOiOPjXYYa9So1fFzsbS4argSw/\
kCWwbH4lN6H7p8FAjNyX2yyZR6a1kDNmpNZyKU1sVSzvk40uHTxdumypHNUxMaFBxcWSoBakqT5SG9\
QWw2IbParxB5z8l1dtjUWtOVtk2Q0A5mrMEdFyhPKMKWUdaUr08saY0p7gvfR6N1auVanOuMXBcuge\
weibdcR8s80JLsdJapHIbIRM/g8Y+\
5r0Z2p474RjbhsvTQUzqY7dRmA5RLvqjMYr76OR5dKW0YraMTi5VD/s9heH2hGCWeJTy5DGv0+\
YlkwH0zQ/39rYe7OfAnucmCJJq8J+ZvQKKRF2CUv7O61izM6OhEKWq2UXMJ6zQw/rLHlH+\
yzfyDdd1cc9snCTRZJ6SF/fkEuSJqTTP82ZzMNXPn9RqVNO3F53sSa7a3zd7rAk+un20U/h7G/\
1Bn3o6umiXCvuW+\
cB3nUbDbtYtyy6VcBHcmR21uXHPB2DFszJapr7PWRwZNvZPUfd1u12YcTvs1A7Xb4mJuCUedB49+\
vlPVoX7ozjtWMCMrcer4tFybU1fWFkVNTRO+W1L/PwnRFEukOA+\
XV4V5TOkW4BqHoARVvWwVKLnBbXDW+LRI7tSc2r1ttWo2/\
VWu9m2LbvlNKyGY9st22q261Wr1XLqXatagQQITseq2fWGZTftKm46rVa11mi1mpZjVduNdqvabNWb\
itqqNGstq0X/nHq76tQtu243wK/\
pVB27CvbtRrXZaBA1LaVaaSLAqo1mq1ZrNeoO1Oo41WrLceyGVcNUTrtqt62W4f48sjQqVsuuteo2Z\
sCiWg2n2WhbdavVgAB1SFet40K1ZmSpV/\
Cdxlv1dtuu2q02PkEcx4LsTh0qazShqobiXn0uWcrVClSMJTWg3EbNgRaqDavqNLFsC5LYtlNtNVoN\
m4V5XCI/schPcq/rTA7X1nbYmejgl7KntXDtVmn5F3/8958JIcy/L/DzWekzeJD+9wV+\
mFENTKrEqFqxYQC72W7Cz+xaswHPaLTq9QayAOqOGmmoWocaau1K22rDkRwLtoANGsyImBAz+\
FkVHuw4tVaz2qrVwa0KU7Zb7Ta8pg7LtaBVp3ERn5yR+vdFdAR1r/CzvtIt/\
mGAcekc2iK6bKhnhWqr4iyuMP27jo2QgeeVSox43a7XCQ9pLzRR3Wc26SH/\
oL7mPQNq1el0AUCn2w273Z/91FYNpyqBrJ/9tMYEyTngUdN1HoE9AMM5hIEd9dk6xC+\
aVdy6JaroyTAg/2jxR5s+2vOrDn+s1RA+3qoIF1DGE+\
X3Rf7471EImuWG3bbFsoU5Gansw5VPQuRnSwOXQTD7kERRxOUa0TzrGCBZvU3U782pgZYW4eRyqP5a\
9XrTKjB+AmnNbjbr5vbTaAEvDtiKSqUiiLWWrzyXb5GBWkVZ2I12zYijbi4u9+Jx7+\
lxlynGXhx1mA94ikLPjlvBreWadUaGWo1HLDfJh/\
LLK4dF6OIHfR3TTXfYs9Yq4q4fJ2nn9w6RpR6hWrYoPeHfY0AZNQ181M8fzgzAwZXgdTXUc1QF1+\
r4UqfqDtCL38B1XEBSadHNWrXZZEKgqf344sD8iPdbnjM6edBvLEQTFEm3iuL+\
2qP1TJguUy2hHGVFLNsEms8agCpinhwpZLRnCiodG88aSOQSzxVBtXaz9RyRwKFgOWeYtS+\
OhEvjANaF1X4j3l92r9FR4YhKUnWQcX4y8Ao9KC4U3f/1Ox/u3aejq+vrfnhM72WsixJy3EM+\
acz7UT4dBaR9HfXgr1bFD/VGgZ9ItOEDvZdYFb1ZKhPzFJHK7gX/\
plZGbH1iqRrWWbMOt06nWOt7m1EyhpO+5/oh/S0tLy9QrdxUdFC0piQzKNqVucIwyCmWx+\
do2TI2WeZB56nEOkhsMG7bFVRsKO9qDRRtKDO6zMkhTttQ4kjGdLq7c55OM3GYCQ+q06A7/\
rGfRHGCEZqiTgaHDWFVsm/bVnDaIOod6SE+\
F27qUQ2Msi2mbBLlbgxL7fod29IEzUMKeyZoFQlqNU3QAkGd77eL9+\
v6dpsm4Nu16sIEBkKqIFAC1GqFlbn+aAJcWhUKjyyiYXrGHDrlrMa0jFew+q1c/fxJGX0tBxu+\
SKdcO48oeqhyX/gLv3l0LwoG+\
k0j2Xlmpo8uZvj48LF2rxrp6enMl89zX3kie6UFVv2eDKSXSJqj82uYyRiszSXaI4t5IMis3PmLM6y\
KpxAw6/8JPEzdUVXeN5G8sZp0/m+tUVvPqs5hwtIL57Cjs//\
J975XuMXkFG0NRWYt4E7DMLQ0Q4sHNjRPewF2zD0zxs5BwXIuAgXLyUHBYrjb88KR7BhMsgzWmRUok\
PNO1WT5NI05lwVwy/\
kwuCmCVgGK1auWBD5Le9HEC5cMPcXw0vaSGsExdzeOJnf8kZ8mHdw4N6CdT2Cze9Hr3NRuK2DT+\
aGKBG5u5ORslJqmqM3ZWBdhZE1jpKG3FjDSds5g5HvaLd4rQoBDSTSlvPXJrLT8NOBzVCrV9BrjbEf\
l0HNumBPO+SnJ2Lj70YifyHWecajRG3mBKvpoIO9mzcdZCyMtM3ZFzcsOYwqmznMzMRI0nne97Ia/+\
NN/WH7GUSu//Ns/\
0wWd3dSTiZkaOCsMXc7Hrt2PRh397VCRLUigkngQpZ0vwguYNKN9Q6vShffhN2KOWyZVrbG8FCwH1w\
+WD25edLSMP19ykiuzx9loZenwQG2Q5BWg3f6NCd/+lQvv1J4vCj9vNC7G5Zl1ObUne+\
wTfNexnsF3n+rFjvUEL54V2DyzRzv2Yiz/inibuts+I+8Txy5fpJAF5HGcC13483N9Bmd2nM/\
tzD92qp/2585cokO7+YQ83+N5W3it8G5/3hv+\
x7VtPgk54ZPM344lP8zO3zeic2H05JxO9Ut9ymHhdD89HSqcIEnMqdWzj5Ir4r6kh5f9AByHM/\
XIx6NDOGliTnAu8CFpjiU9maOzDHKwXirVKuImNYrmKOP8JUoWQ/uY3u5Zv3mzRE1umZ/\
AmwfYA31UNOeBhjgKjmm9uBiFdODFC1bFeIaJe1Hg9+mEvh9KdY6lcJku5ocDk/\
PHLOl1Ki2QOmR18KxJ5WAFbbVFa+V6J75gOb6+\
cX49B8vPmvHEwYqyMT1CgxmUjPDnAzitOjWiDjqul3hH/KCj/8Ku/\
UccHI8fWY85BA76gygtTKdo8kkfPzoICmFTHGOgQrFGVNu0cApAmn2+\
alIvnQ1UZwXotCCfbdHnFxNzWp/\
VEojoWKqTPDEVpmpZtygoaNFmnajZLF7sQE599Y6dx6fDPDr9Eig/HPtTMcjyl7pSGU+\
SgtNohcFgDjsnv76o39lcFL57dg+mu/iyY34Unw7n0H5MxGdPkoyOpdJmYxrP9AFBHRO0/\
RjNt3DUQUU+7KbP3oQyNcdplkE39qaJOvPI/+sceo1kY3ebD4vNVvSrgmbi+\
emm4ZB9g96R4vM4C0FKp/npHcuxH/JxJHoVWcUSTQ/qgZd6NJGZNMnP6KkjP+YIr+\
DDu8wT1PQKGmIr5nNgkl7sDPWEHOozOpCTXoga5vg0aXYV8shADOnNL3rBKTm6Xna/Uvw/wZx5ofe/\
AW98ZAU="|>,
 GeneratedCell->True,
 CellAutoOverwrite->
  True,ExpressionUUID->"e8240332-98df-4950-a9fd-19c2777b606d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "Cosh[2]^y+Sinh[2]^y/Sqrt[2]^4+Coth[4]+List[{2, 2}, {2, 2},{2, 2}]", 
   Typeset`newq$$ = 
   "Cosh[2]^y+Sinh[2]^y/Sqrt[2]^4+Coth[4]+List[{2, 2}, {2, 2},{2, 2}]", 
   Typeset`chosen$$ = 
   "{HoldComplete[Cosh[2]^y + Sinh[2]^y/Sqrt[2]^4 + Coth[4] + {{2, 2}, {2, \
2}, {2, 2}}]}", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {3.173828125, 7.826171875}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {3.173828125, 7.826171875}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "Cosh[2]^y+Sinh[2]^y/Sqrt[2]^4+Coth[4]+List[{2, 2}, {2, \
2},{2, 2}]", 
                  Defer[{
                    HoldComplete[
                    Cosh[2]^$CellContext`y + Sinh[2]^$CellContext`y/Sqrt[2]^4 + 
                    Coth[4] + {{2, 2}, {2, 2}, {2, 2}}]}], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"{", 
                  RowBox[{"HoldComplete", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Cosh", "[", "2", "]"}], "^", "y"}], " ", "+", 
                    " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sinh", "[", "2", "]"}], "^", "y"}], "/", 
                    RowBox[{
                    RowBox[{"Sqrt", "[", "2", "]"}], "^", "4"}]}], " ", "+", 
                    " ", 
                    RowBox[{"Coth", "[", "4", "]"}], " ", "+", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}]}], "}"}]}], "]"}], 
                  "}"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"{", 
                  RowBox[{"HoldComplete", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Cosh", "[", "2", "]"}], "^", "y"}], " ", "+", 
                    " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sinh", "[", "2", "]"}], "^", "y"}], "/", 
                    RowBox[{
                    RowBox[{"Sqrt", "[", "2", "]"}], "^", "4"}]}], " ", "+", 
                    " ", 
                    RowBox[{"Coth", "[", "4", "]"}], " ", "+", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}]}], "}"}]}], "]"}], 
                  "}"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"{", 
                    RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cosh", "[", "2", "]"}], "^", "y"}], " ", "+", 
                    " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sinh", "[", "2", "]"}], "^", "y"}], "/", 
                    RowBox[{
                    RowBox[{"Sqrt", "[", "2", "]"}], "^", "4"}]}], " ", "+", 
                    " ", 
                    RowBox[{"Coth", "[", "4", "]"}], " ", "+", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}]}], "}"}]}], "]"}], 
                    "}"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "Cosh[2]^y+Sinh[2]^y/Sqrt[2]^4+Coth[4]+List[{2, 2}, {2, \
2},{2, 2}]", 
                    Defer[{
                    HoldComplete[
                    Cosh[2]^$CellContext`y + Sinh[2]^$CellContext`y/Sqrt[2]^4 + 
                    Coth[4] + {{2, 2}, {2, 2}, {2, 2}}]}], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cosh", "[", "2", "]"}], "^", "y"}], " ", "+", 
                    " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sinh", "[", "2", "]"}], "^", "y"}], "/", 
                    RowBox[{
                    RowBox[{"Sqrt", "[", "2", "]"}], "^", "4"}]}], " ", "+", 
                    " ", 
                    RowBox[{"Coth", "[", "4", "]"}], " ", "+", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}]}], "}"}]}], "]"}], 
                    "}"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cosh", "[", "2", "]"}], "^", "y"}], " ", "+", 
                    " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sinh", "[", "2", "]"}], "^", "y"}], "/", 
                    RowBox[{
                    RowBox[{"Sqrt", "[", "2", "]"}], "^", "4"}]}], " ", "+", 
                    " ", 
                    RowBox[{"Coth", "[", "4", "]"}], " ", "+", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}]}], "}"}]}], "]"}], 
                    "}"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"{", 
                    RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cosh", "[", "2", "]"}], "^", "y"}], " ", "+", 
                    " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sinh", "[", "2", "]"}], "^", "y"}], "/", 
                    RowBox[{
                    RowBox[{"Sqrt", "[", "2", "]"}], "^", "4"}]}], " ", "+", 
                    " ", 
                    RowBox[{"Coth", "[", "4", "]"}], " ", "+", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "2"}], "}"}]}], "}"}]}], "]"}], 
                    "}"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[48]:=",ExpressionUUID->"c5be455f-2171-46e2-814d-83f8f01b8e64"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"HoldComplete", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Cosh", "[", "2", "]"}], "y"], "+", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"Sinh", "[", "2", "]"}], "y"], 
     SuperscriptBox[
      SqrtBox["2"], "4"]], "+", 
    RowBox[{"Coth", "[", "4", "]"}], "+", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], "]"}], "}"}]], "Output",
 CellChangeTimes->{3.957662448496851*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"8a98e92e-5828-4515-b4ba-fb3f404168f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReleaseHold", "[", 
  RowBox[{"{", 
   RowBox[{"HoldComplete", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cosh", "[", "2", "]"}], "y"], "+", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Sinh", "[", "2", "]"}], "y"], 
      SuperscriptBox[
       SqrtBox["2"], "4"]], "+", 
     RowBox[{"Coth", "[", "4", "]"}], "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], "]"}], "}"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[49]:=",ExpressionUUID->"8eb702a8-0730-4ff8-a82e-078d2e3ec4a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "+", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", "2", "]"}], "y"], "+", 
       RowBox[{"Coth", "[", "4", "]"}], "+", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"Sinh", "[", "2", "]"}], "y"], "4"]}], ",", 
      RowBox[{"2", "+", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", "2", "]"}], "y"], "+", 
       RowBox[{"Coth", "[", "4", "]"}], "+", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"Sinh", "[", "2", "]"}], "y"], "4"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "+", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", "2", "]"}], "y"], "+", 
       RowBox[{"Coth", "[", "4", "]"}], "+", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"Sinh", "[", "2", "]"}], "y"], "4"]}], ",", 
      RowBox[{"2", "+", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", "2", "]"}], "y"], "+", 
       RowBox[{"Coth", "[", "4", "]"}], "+", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"Sinh", "[", "2", "]"}], "y"], "4"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "+", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", "2", "]"}], "y"], "+", 
       RowBox[{"Coth", "[", "4", "]"}], "+", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"Sinh", "[", "2", "]"}], "y"], "4"]}], ",", 
      RowBox[{"2", "+", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", "2", "]"}], "y"], "+", 
       RowBox[{"Coth", "[", "4", "]"}], "+", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"Sinh", "[", "2", "]"}], "y"], "4"]}]}], "}"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.957662499652112*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"09d6f61a-716f-49c8-bb40-a7cf7bee371f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayDepth", "[", "%49", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[50]:=",ExpressionUUID->"f4745ade-ea87-4d66-8a86-bcb37052d2c1"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.9576625340637693`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"2acd2e43-69bd-4ad9-9a5a-e8a209878cb2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrimePi", "[", "3", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[51]:=",ExpressionUUID->"4b354944-b9b9-4154-bacd-05cff701c8ea"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.957662556703047*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"8ca07ee4-7ae9-445d-b9d9-94fa246bfe35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrimePi", "[", "2", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[52]:=",ExpressionUUID->"26859653-f330-4b37-bf9a-9cf114d05af3"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.957662571048966*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"3f83143e-cb12-4519-bddc-8f3a765e2f7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DivisorSigma", "[", 
   RowBox[{"1", ",", "1"}], "]"}], "\[Equal]", 
  RowBox[{"2", " ", "1"}]}]], "Input",
 NumberMarks->False,
 CellLabel->"In[53]:=",ExpressionUUID->"2a0554e3-9d9b-4de0-abcd-a4fd8befdcb4"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.9576625840227633`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"f2552023-c59c-40cd-bccd-9c530cf44d6a"]
}, Open  ]],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "Array[1, 2, 3]", Typeset`newq$$ = 
   "Array[1, 2, 3]", Typeset`chosen$$ = 
   "ImagePartition[Placeholder[\"Image\"], {1, 2, 3}]", Typeset`open$$ = 
   False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {3.173828125, 7.826171875}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {3.173828125, 7.826171875}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "Array[1, 2, 3]", 
                  Defer[
                   ImagePartition[
                    Placeholder["Image"], {1, 2, 3}]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"ImagePartition", "[", 
                  RowBox[{
                   TagBox[
                    FrameBox["\<\"Image\"\>"],
                    "Placeholder"], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}]}], 
                  "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"ImagePartition", "[", 
                  RowBox[{
                   TagBox[
                    FrameBox["\<\"Image\"\>"],
                    "Placeholder"], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}]}], 
                  "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"ImagePartition", "[", 
                    RowBox[{
                    TagBox[
                    FrameBox["\"Image\""], "Placeholder"], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}]}], 
                    "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "Array[1, 2, 3]", 
                    Defer[
                    ImagePartition[
                    Placeholder["Image"], {1, 2, 3}]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"ImagePartition", "[", 
                    RowBox[{
                    TagBox[
                    FrameBox["\<\"Image\"\>"],
                    "Placeholder"], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}]}], 
                    "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"ImagePartition", "[", 
                    RowBox[{
                    TagBox[
                    FrameBox["\<\"Image\"\>"],
                    "Placeholder"], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}]}], 
                    "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"ImagePartition", "[", 
                    RowBox[{
                    TagBox[
                    FrameBox["\"Image\""], "Placeholder"], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}]}], 
                    "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[55]:=",ExpressionUUID->"52aec797-f4c3-4f0c-9f42-956e8833c727"],

Cell[CellGroupData[{

Cell["Array[1, 2, 3]", "ChatInput",
 CellDingbat->Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      If[
       TrueQ[CloudSystem`$CloudNotebooks], 
       RawBoxes[
        TemplateBox[{}, "ChatIconUser"]], 
       RawBoxes[
        TemplateBox[{}, "ChatInputCellDingbat"]]], StandardForm]]], 
   Background -> None, CellFrame -> 0, CellMargins -> 0],
 CellChangeTimes->{{3.957663276583395*^9, 3.9576632838115387`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"dd23089f-282a-455d-b6d8-dd2118becdf0"],

Cell[TextData[{
 "It seems like you're working with mathematical expressions and exploring \
their properties using the Wolfram Language. Let's go through the steps you \
provided:\n\n1. **Expression with ",
 Cell[BoxData[
  TemplateBox[{
   "HoldComplete", "paclet:ref/HoldComplete", 
    "https://reference.wolfram.com/language/ref/HoldComplete.html"},
   "TextRefLink"]],ExpressionUUID->"6d77d58c-e4c9-4cd8-8e6a-a36fdf8a71be"],
 ":** \n",
 Cell[TextData[{
  "   ",
  StyleBox["\[Bullet]",
   FontColor->GrayLevel[0.5]],
  " ",
  "You created an expression that holds ",
  Cell[BoxData[
   TemplateBox[{
     Cell[
     "Cosh[2]^y + Sinh[2]^y/Sqrt[2]^4 + Coth[4] + {{2, 2}, {2, 2}, {2, 2}}", 
      Background -> None]},
    "ChatCodeInlineTemplate"]], "ChatCodeActive",ExpressionUUID->
   "270cb081-94cf-4c5d-a492-93fc38257d6b"],
  " without evaluation using ",
  Cell[BoxData[
   TemplateBox[{
    "HoldComplete", "paclet:ref/HoldComplete", 
     "https://reference.wolfram.com/language/ref/HoldComplete.html"},
    "TextRefLink"]],ExpressionUUID->"c8e20352-82c2-42ef-abf4-8918ce8731ed"],
  "."
 }], "InlineSubitem",ExpressionUUID->"8b5090a0-257d-4da9-bd9b-abbee1832d36"],
 "\n",
 Cell[TextData[{
  "   ",
  StyleBox["\[Bullet]",
   FontColor->GrayLevel[0.5]],
  " ",
  "Using ",
  Cell[BoxData[
   TemplateBox[{
    "ReleaseHold", "paclet:ref/ReleaseHold", 
     "https://reference.wolfram.com/language/ref/ReleaseHold.html"},
    "TextRefLink"]],ExpressionUUID->"77555735-7af0-4f3a-be96-77b01ef8e8a4"],
  ", you evaluated this expression, resulting in a matrix where each element \
is ",
  Cell[BoxData[
   FormBox[
    TemplateBox[<|"boxes" -> FormBox[
        RowBox[{"2", "+", 
          StyleBox["C", "TI"], 
          StyleBox["o", "TI"], 
          StyleBox["s", "TI"], 
          StyleBox["h", "TI"], 
          SuperscriptBox[
           RowBox[{"[", "2", "]"}], 
           StyleBox["y", "TI"]], "+", 
          StyleBox["C", "TI"], 
          StyleBox["o", "TI"], 
          StyleBox["t", "TI"], 
          StyleBox["h", "TI"], 
          RowBox[{"[", "4", "]"}], "+", 
          FractionBox[
           RowBox[{
             StyleBox["S", "TI"], 
             StyleBox["i", "TI"], 
             StyleBox["n", "TI"], 
             StyleBox["h", "TI"], 
             SuperscriptBox[
              RowBox[{"[", "2", "]"}], 
              StyleBox["y", "TI"]]}], "4"]}], TraditionalForm], 
      "errors" -> {}, "input" -> 
      "2 + Cosh[2]^y + Coth[4] + \\frac{Sinh[2]^y}{4}", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
   "799f134f-313a-4ab6-875f-b944f5d648e3"],
  "."
 }], "InlineSubitem",ExpressionUUID->"51cb1ff0-534a-48e4-a200-ca8d7b129f94"],
 "\n2. ",
 StyleBox["Array Depth:",
  FontWeight->Bold],
 "\n",
 Cell[TextData[{
  "   ",
  StyleBox["\[Bullet]",
   FontColor->GrayLevel[0.5]],
  " ",
  "The depth of the resulting array is 3, indicating a nested list structure \
with three levels."
 }], "InlineSubitem",ExpressionUUID->"83a7b74d-753a-4f84-9210-8779388f9bbb"],
 "\n3. ",
 StyleBox["Prime Counting Function:",
  FontWeight->Bold],
 "\n",
 Cell[TextData[{
  "   ",
  StyleBox["\[Bullet]",
   FontColor->GrayLevel[0.5]],
  " ",
  Cell[BoxData[
   TemplateBox[{
     Cell["PrimePi[3]", Background -> None]},
    "ChatCodeInlineTemplate"]], "ChatCodeActive",ExpressionUUID->
   "26abf4f0-a780-42d9-8063-51fd9f017cbe"],
  " and ",
  Cell[BoxData[
   TemplateBox[{
     Cell["PrimePi[2]", Background -> None]},
    "ChatCodeInlineTemplate"]], "ChatCodeActive",ExpressionUUID->
   "46007d23-8894-4372-a843-cac22d7bc0e9"],
  " are used to count the number of prime numbers less than 3 and 2, \
respectively, resulting in 2 and 1."
 }], "InlineSubitem",ExpressionUUID->"3f1b2aea-1c03-4f5e-8632-661a502c9db7"],
 "\n4. ",
 StyleBox["Divisor Sigma Function:",
  FontWeight->Bold],
 "\n",
 Cell[TextData[{
  "   ",
  StyleBox["\[Bullet]",
   FontColor->GrayLevel[0.5]],
  " ",
  Cell[BoxData[
   TemplateBox[{
     Cell["DivisorSigma[1, 1] == 2 1", Background -> None]},
    "ChatCodeInlineTemplate"]], "ChatCodeActive",ExpressionUUID->
   "373b1f1a-e13e-4464-93ef-ea89c25f611c"],
  " evaluates to ",
  Cell[BoxData[
   TemplateBox[{
    "False", "paclet:ref/False", 
     "https://reference.wolfram.com/language/ref/False.html"},
    "TextRefLink"]],ExpressionUUID->"01841001-a591-4624-ac1a-0edcaecfbdbc"],
  ". This comparison checks if the sum of the divisors of 1 equals 2, which \
it does not."
 }], "InlineSubitem",ExpressionUUID->"944be843-55a9-4b1e-806c-5c96e8955c34"],
 "\n5. **Misunderstanding with ",
 Cell[BoxData[
  TemplateBox[{
    Cell["Array[1, 2, 3]", Background -> None]},
   "ChatCodeInlineTemplate"]], "ChatCodeActive",ExpressionUUID->
  "f5ee1328-6491-4389-98bd-1bf97b71fe25"],
 ":** \n",
 Cell[TextData[{
  "   ",
  StyleBox["\[Bullet]",
   FontColor->GrayLevel[0.5]],
  " ",
  "The expression ",
  Cell[BoxData[
   TemplateBox[{
     Cell["Array[1, 2, 3]", Background -> None]},
    "ChatCodeInlineTemplate"]], "ChatCodeActive",ExpressionUUID->
   "20660729-123a-4c77-8a8f-7f2d0ca25271"],
  " is not a valid use of ",
  Cell[BoxData[
   TemplateBox[{
    "Array", "paclet:ref/Array", 
     "https://reference.wolfram.com/language/ref/Array.html"},
    "TextRefLink"]],ExpressionUUID->"87000e96-11d8-4bbe-8ddf-4425794ef7c8"],
  ". Instead, ",
  Cell[BoxData[
   TemplateBox[{
    "Array", "paclet:ref/Array", 
     "https://reference.wolfram.com/language/ref/Array.html"},
    "TextRefLink"]],ExpressionUUID->"c4cabbac-742d-4151-b733-92898f129e24"],
  " is typically used to generate a list of elements by applying a function \
over a specified range of indices. It seems like there might have been \
confusion with the syntax."
 }], "InlineSubitem",ExpressionUUID->"283140f8-f6a5-46bb-aa4f-aa63f8a8362e"],
 "\n",
 Cell[TextData[{
  "   ",
  StyleBox["\[Bullet]",
   FontColor->GrayLevel[0.5]],
  " ",
  "The expression you wrote for ",
  Cell[BoxData[
   TemplateBox[{
    "ImagePartition", "paclet:ref/ImagePartition", 
     "https://reference.wolfram.com/language/ref/ImagePartition.html"},
    "TextRefLink"]],ExpressionUUID->"296193a7-4262-4a96-9b2d-481a7dc77140"],
  " seems to be a placeholder or template for partitioning an image, not \
directly related to ",
  Cell[BoxData[
   TemplateBox[{
    "Array", "paclet:ref/Array", 
     "https://reference.wolfram.com/language/ref/Array.html"},
    "TextRefLink"]],ExpressionUUID->"43b7b297-d7e2-442b-87a6-b9e0ec45a6e6"],
  "."
 }], "InlineSubitem",ExpressionUUID->"e43b1692-e761-4d70-b584-52d4af0c1b9d"],
 "\nIf you have specific questions or need further clarification on any part \
of these computations, feel free to ask!"
}], "ChatOutput",
 CellDingbat->Cell[
   BoxData[
    PaneBox[
     TemplateBox[{}, "ChatIconCodeAssistant"], ContentPadding -> False, 
     FrameMargins -> 0, ImageSize -> {35, 35}, ImageSizeAction -> 
     "ShrinkToFit", Alignment -> {Center, Center}]], Background -> None],
 TaggingRules-><|
  "CellToStringData" -> 
   "It seems like you're working with mathematical expressions and exploring \
their properties using the Wolfram Language. Let's go through the steps you \
provided:\n\n1. **Expression with `HoldComplete`:**\n   - You created an \
expression that holds `Cosh[2]^y + Sinh[2]^y/Sqrt[2]^4 + Coth[4] + {{2, 2}, \
{2, 2}, {2, 2}}` without evaluation using `HoldComplete`.\n   - Using \
`ReleaseHold`, you evaluated this expression, resulting in a matrix where \
each element is $$2 + Cosh[2]^y + Coth[4] + \\frac{Sinh[2]^y}{4}$$.\n\n2. \
**Array Depth:**\n   - The depth of the resulting array is 3, indicating a \
nested list structure with three levels.\n\n3. **Prime Counting Function:**\n \
  - `PrimePi[3]` and `PrimePi[2]` are used to count the number of prime \
numbers less than 3 and 2, respectively, resulting in 2 and 1.\n\n4. \
**Divisor Sigma Function:**\n   - `DivisorSigma[1, 1] == 2 1` evaluates to \
`False`. This comparison checks if the sum of the divisors of 1 equals 2, \
which it does not.\n\n5. **Misunderstanding with `Array[1, 2, 3]`:**\n   - \
The expression `Array[1, 2, 3]` is not a valid use of `Array`. Instead, \
`Array` is typically used to generate a list of elements by applying a \
function over a specified range of indices. It seems like there might have \
been confusion with the syntax.\n   - The expression you wrote for \
`ImagePartition` seems to be a placeholder or template for partitioning an \
image, not directly related to `Array`.\n\nIf you have specific questions or \
need further clarification on any part of these computations, feel free to \
ask!", "ChatData" -> 
   "OEM6eJztXFtvHMl1Xnu10mrWe/Ou7Y0DOCUubZPamSHnQklkrLUpiloxFiWaw/\
XaGI08zZmamV72dI/7QrJ1AfyQIE6QAEmAPCRAEATwW4I8O3/Czk8I9iHIm/\
OcvOQ7py7dPRxK1PoCJ4iwS85UV506dS7fOae6iuv3Kq0vrHtecNSSnuzFbuBvBH4sj+\
PopVuOF8lK68L6ZHLXGcvWhZty4CReXGmV1qPIjWLH70nb7bX1JB5JP3Z7DlFpnb9zZ/\
vbLndO4uBWEI6dODq3FyaSZkRTyzmUmOtQhhGPiCyp0g0nkjthMJ7Eg89G5+\
5gqtbFu0Es94PgIGq9/\
VHgDUJnfMfxh4kzlK049TDqizfSiRNFuzKagJjcGMnegesPLdW3N0ZOrBe3E8oJ048uEitgze1VWp+\
nHjdD91D6djYz+k16dhucBGF6R/rDePTxf7yoh2z5kwQ/+rT0IGyd+8+//6t/qrTeyC/uww+\
3bkbn7gY+SL2uH6B5N/FkZNpfuSmjXuhOWHxXbktvIo7ceCSOQjfGQoTj98VQ+jJ0+\
KuWgjBiEL2gz1TcaOI5Kals8Jno5V3n6EZwLCN8Lt1MfWfs9vAdcv3yrc0drNWJZfdWCLFs+\
n3ILkjCngSLWBatvxWHJMPWOztgOPAdorqBeYwBQL9vaqon1fylTd/Z9yTR+\
iAMkklLxsR5pug3VQdYSkuGh26PZKGGvgFK4CP1eyPwFiTZmDduhfKHifR76Y70HS9Ow7/9G/r3L9/\
Es9uQkSfDW4nPphytn6+0LtL86/\
tBGBtBv0wtO0FkGy5wQyjN97f2gsDbpWmieFf2JCyib559QT1TRvaBUkf29GUSocfd1ULenmbp2zKN\
Bue1VZ+7EfTT1kX6uTFK/IPW5+1H2D/JQ/ZbpVbsxElEYm+V9pzoQH1vXdyEocakkUrr/G2335d+\
JqXb6X7o9onXbRmPAsvPa1t+z0v6Uptywf5f3/\
JHEsZGfr0nI6tHtMMCHY8dSHqeVRIUt3noeAmZPUPEq1O28da2c0wjlBkpv3Ff+\
OFnX8BgeqS8cS84AOvuCy9Q+++g/V4Sw6OmB7LDXcRj1b/A+\
hvcnCkm2nip0np1W4ZDuQ0pwj2saX1x2/XdcTK2XfcUFH2m0nppG+x765+FRWiDbL2y/\
jAJ5b2J9Ne3Kq1zvMo3h5O40gwq9eV6s7J8rbJ8BZi1DWR0x0HfseI5N1skBlo+\
gqSlUk7rNRifBBzB0O64/\
gGYVDOu72xtAKY8yRiye6d1eRTHk2htacmZuNUAfRy32gvGS4e1pR60s9SzvSO4FxEhqWw4nscgUJD\
Z+XuhO3T91hsaSZaM02M1O04PZHgBMx6/CHZb//\
zi94NEOKEUjhgBrAaJdxKTHLNwAYyQfUHCEFYaVQESofg42BduJOJA9AOBICIGAUUkKH6tVLos7g0G\
MjxJOkqG0CovVewjYPRF4ItJKA9dwIVwCZOjKoYzkA7cYyHDMAi5afMYCOn6qkWMtYGISM2eRJgu8f\
tAPDDZj8QRFi6O4GuA4sAf5ikEbKngnbqMnVTsEw77gyQiiMaKXF8eT+BUACxwSKSZAyWCbDoG+\
gBfQwyauL0IkhO+lH3Zr4qPRq4nRQppRxPZgyO6DyUInxBJmfv0HJ/\
1oWg6fqooVuHHBHHEyEnkfEvDDbjOwPMChT044V5Aqjd+NKen7Rp76J7oU2l9Lj+CwpChis/\
nWl4Qk7uVqFMr2R+7xTj8hgoj9FQhQXTpxJzTXYBsqsnYe/R7p4wxHbBodsGMBmPb/\
IlhM3rNAPqvqIRFR4Qg1ItHmHE5qwKofHl2l93Ak63zrTSK5RiLn+\
pE0lPB4u1d6VGsuRn0kjGskRMLRNnpASqo9gsivaA6RYMXFLEKUVML4FzMRGaD7C3p9wt4mif2GrqT\
FG5iyH4W7l9tjYIjBlfYZ3F6hLBgomDbZnTnS0vyWPZa55YwF+IqoF4ij/\
CHSswWGZ2QYo9OMmBZe87+vuxrw9BTv7nnAOnjDS9I+vf2P0YiW5j+lT2AK0kHUB4O+N+/w+\
hf23Mpm/GjOIQvF4d8gbm9kfRBlqF94rkyJKt9lZ9giSrkndfBoPVlY1ibxw6BsJI4J6et8+\
wOd4hR3clmMYVZ3zaPd2UcpsZ/\
7CLxsEC8KOMs2MOaXOpFK0fjvYnyZ4TEz2nrXvcmI2f9RU46OanfQYpgs4eXbwVev9DyOuIrGm6k8I\
QgQZb/rRuvI1i/M5WK22yAsOMtritkfxNaTmK548SjqaCtO+xKp6+\
evrhOvvWmbmfHOznsdRQkMJkPd7e0FAyT7+jpsdiiZje+gWin86BCwr8Dc5vq+hVI8iO5f0vGPaDx+\
mdymYof60Tk3wCmr6BTSzoh9zpnmF7vQ5a6c3RR51MS5v2yEVGxFaS34Pacrpw3yvsgCIakvDcwxda\
YKpxf7zxsWLb+20sncv0FcjS0WjAxOc1eMNkhL3hnL3R6B61eiFANIX6E0m/\
Hc3pZzwvfVSVO66V6dbnahNq+60YuaOlKIhqc00BQzJAQFfCVVR+\
2Lu5QlOUwQYUMp2dI05gzCyQFmz7dJMH8TSd2SKMv28ikE3FK+c4VcfiClm7rj1b/P8/\
535TnlErvChUMPbFFbp2odKZUMnqEm+Npj6toNVgxF6PWTIb0Vc9vZyYLFCZxr4q9EdSI/\
zz3gKwilMPEc0Lh6w5CHvfkJBZuLEZYniFGCbrSl+\
hRpgF5u71RJhtaED6QNJGl9TN9oQGP1rfEAta9SNPL7CGJIlQ1qhgADzN6I1Q10JP0SVOHMgQSECml\
UKq7VH/LdU8ZfFUgeLhYj5eyoHOGw05g4BNRKs1RZlo52vtyEIQ0P0m5r/\
YkFAOGwapAQoZvyiWOgpBYCLGWWM8sxglsx+\
nDWqQZaF1GDBMXaAC7i9h72MNCk65Ar55HRjpxQnIZqGHshAf94MjnfZQBp4LMN/\
OgOCqTaxjbIlXYMVGKfOuYmFAjlWDsdFWx6UdILniwjHrORJK6ycjgCJmNC3fAXeD/\
EDuYjEY5mjkmlWykCvZlM+yIAIbgQ4kTpucRTMK2HIBW6EYHOblpNtzY2Pg+\
ADvynGi0Ju5fhsQIsyW0V1wLmwG0GNEIL+gdiGDAW0sQTgIcAWBYmnAYKZku7OEgYsm6an+\
BZeoZDDvCVMKZIIfqUThZK3W7XfOwRMSpQbNk97uondy/wF4Z6Ae7G5K5K7URQe77++\
Lu5nc3dy0Hc1t+u1qtdtauzwkIcw4pI3/HV8/\
Zl3BArXqeiA2GlLJvie6n1jIIyu58tP79Vk4IPhmfGQxp9IOER1lxkN8eBi6sb7zvwlzjVHXsqW0PD\
hXRmuh2t1O9E4JPplBqH3eUSCgSwi4wDggbUo1GkUAB7x1nT36PxW7ZAsdjw49HqBS5Qx+\
zzM8fP6iL90T6oD4/D7pbg9P03gMpykxJ9opGVGalSAO12rb6+\
SlgVPOrq9XVFYL9re2de7t763f3LhWsTFPJzNbISix0F0kbOXpiYX5RaDApG+GfbtPwQOUsa2IL+\
Eqbe8Atw5MgDqBNpHrMBxwOeT0pSFO836Xp788jsAYIY156CaugrRj4mkIk6nwiNvfzpRjZi46HBaB\
S2LEm2mx1nYUJ762sJaG7WHDztdLFy6K9R6ZnO4VysMQti/zQTnzvkPan5JHtyGi4ZJ6bx2oU70+\
LFrNhB8TA8RBhaYmfqoeLxgUxrSQbmLnPHKXjfeRfmXKUVtnwHIKNolTgJQiZ98hrOe1xcyPJ38iBy\
GZORLUI2DIrhs2MWmX2AnbiYIAGcuO+O+Bl6EDH6Y2NjqAescQ/pFxFRVyGfs5wDB+\
HbpYMSJVJMjTM2X3/\
OR3M7fT7BFr8LkD2DUxCaLyRKejVQFVsqBEoYxxudfYDDWe5HEFlKgxlKm6HwSF0jHjY5x0FyigUap\
TFPuUUdmgk6PUGbfWo9SIKJeitFzWVJcQc8aokiS01uC9JuJr3X/\
z5XzInxgo4yTZZpzIW59BBurBPcYqo6og78/\
VETkJ6YTAQGuQTHhKeKkYG1EjJBslgzJqQY1T9HEL1CG0APGlqCWPlXIaQMwIeguNMFsoc9XAKuYS8\
Ot5ymXUjOG7PXTJuivTA6Y3IjteWlrSVVdz+4hxwmRN6NSdKz8AmYEQ54F1VyJsZx0/\
UAy6MAfbvwDJVxqMI2IxvlEs1tHrgJsR9t/\
tMhrrdE1EyOi1jOMmgSifZFDAlOaRzRGIPWAfAJuTvlNRTw7S0JAIDAK8nlQ4+\
prSDvBbLYtqcT6kQGDvegTb1hK0ykhZaoXPlh8pTVKr1jUunrPfS+6re4Ogb+\
IbTyFqK6ytbywKOyfGkqQVBIfCmcqxudyPwgvCuHEJZ7adMz/rfY9mYeJyz60iBFJhgQ6yKmyrXy+\
dF03IEmwQGYWYVbFXKNKCVLPvUy7YrpaB0Ry2XkzUuulocUvFoP3E98EzpKxW1YqBzC1RWcVoV66wZ\
xIMDppb49DJSwd1A5/ehegmG6ozKqhM+zbtb4gObiVMi/m0pJ4qjiDehVPI3CSKu/\
ktK0RknhGtDEKWdPxJfLJ0+qXRCG9L9BFkChmgZUpWNzGDoBfsYeAjwJNiJ1Axu/\
HVlv76knWwnTClp846cNGJJqshOSZdKLn16e8a5FJkHu09GcUFWh1VBu1DhBrI0bwOFN0XHu5zKEDk\
K9JR4OhMXti0QUjnVj4Mc+E7To3FdB/WV3z4Qx0jGfv7XnW5+\
0d31qYc05w5HYzGGSMOTxbANxw6XjLzHZcJ4L5TqXfHEC2L4KkKHCNRmIBJG1J4I1zoVptGeHEraB8\
Aaxs6BjujSiVwVJrKtgpKBaIsbTsTeTZKkejhKvDi/\
LjYHFcP6CcMFYpXqVrYIeKRW9gNTGPyg6K6ZNnWoRnMSctZlKgbaSa7a3JajxzDQGxS8IocpCbLtXK\
WEtATedmPz1r3dTSJOIyx9NnzecFIbCJyROD0yMa5J6Ymu5MlxuXpQAZvexSWx1OuEZ+\
4FPLPmIpc35ZJFXTbnuTCgjjKX3u+NSQFOOKzRj7raRC+\
V1jm0ZJDHzWUNqOz8DFFS7cVyuxWFcQA2glCyVKmDYhwCMLUCJuTELmJcAHpDfrw1Ljl2UzRg8FBxh\
sobUr50yNL0UL1UE6B7gFxVkVOeBbxkltX0pP0Ti15TzWxBJYyAJRseSgqCSCprIMm7TCXubYRUevd\
dgJ7OVoxStUM9VpnNwtKRs1giiPLpdQF5tnE0IGHo8tYC8qLiKGib6olkUomDSh/\
xQyvf0RinTUBHP8Kd2NWRCj6GCBumZTEZpZHbgxCHkhARX8tipF7Tw3VDSnHRMfCDcaqy3TEspVpaN\
0opXSQOU1Fh6XGKVroI1U8iNAEi9a6biEbBkaD2yn5aod+wfi/h5GjhBmQiHb+\
sYcLxFq2AMsSxW6okLfTQ3+UpOV9+\
h4WWDE1LJIk04ACIJr1cCtIPpE5CCttMlFTkLDKLBwcCmA4BchCmcs6wwlUFh1N28Xz0tfA0VQDTNm\
cIiDMMj9VOHJWbVYIUJ7drZGhEJi3vq9LHZnFU9Rhoc2ZOZsExTifk6zov0lutOsOwko6SyYSOsGSb\
l4fS1D4Wy7cd350k9JJQLZ2xKqRpMsBClgCDHLiIStXSDuXqJy1dFSBs510UAO05NiwkvmWNdIT4MI\
5gSFvQBHVx6FWu63FYq0nOkefenU2cJKcKBYN49t0NZ41U4gfhgd5jHTu9MKB8C/\
6OHmp1sOPE65utAZssnbIacBnsx7w9OaJXnYpw9zuJQ96YYmndmxCcentI3zZNu4x7Va6D9ISAeMJY\
KjIh8/vJoLFSo0X/Qeve3YI7svVXTvGKnLEyLt1KGJ45GQUq7RWiAkWyfYDPQJfB6lCZ7a5srC/\
H6jUWzJ9cPL+RqcIUO1+Bgq1PeUO2VKpUKqXSNx674x8g0Ifx4/d58+s2qA2ckCqDlDR39/\
sbqky5EQCe/G/yAISsx+8XB9u3IiXgROkDGdzUpwbbbFVqdFlsr891yoKb7soj6DY8EBuQ/\
Vyno5GbAvtpk6jwVjKKbNeuNKvNWlnMbZONz3WezdwWZY5qmBjToPziSFEFrqpP5YblBbDYgs1qvEH\
lPyHRN0aidnVcZt0MAOUoziL04wzljCJkGWlO9fLEkpKcoj73aSS2slxdvppJDBTnbgOsziQ7roOlT\
bQUKS1FSrfhMuEZJPYR783Q9twR+\
9gWTJ4OYlIdu4XEdIB00R2OkNwHR88jKyUVs2V0dKp42O7JDbfGBLNEo2SDR5anZSmTAfSND3d3N+/\
uWWC3sQmMxBr8U7NXQJ6oU1CK3zaPNTszGgqRqppdRDthlV7Wn/aK8k+/\
ZDdc18Rts3ESBeMsJBf35CLEiYk07/PSDEz1+ye1GlX0bSCREu+b7dUIH3e4kuIM5muCD6VwRfG+\
WCnlti1p3Lu1lUbtypXV1ZXlUqlFx03oJWqK0ShZ3J5AFsmDkeV1u10obctv1zpr10GV6oQ20Wg/\
7PDGtfqMD/WOuH5dwF4fdkol2tSvda6LDfz85Mc//uQPfyK+9jWx8JC61GE6P/\
8RP8KwO8GwXWn9MIzbu0GAQWhaqFzBz80HzcXL7/J3+lG/\
rBt4Vnymjw2stCxqnU5HPH4sZlBfqC3VF8UCN+m5fplpFk+Z5imLENVqVXyK2eqfarazUm/\
8ZkSGaRYX+SVS6Tr/m225rR4sF7/\
NSxax1bfJOHkkH5vhzQ9j0vUZJt1cvXr16rVrpZI6yB3bCuSTH/\
2Fw7sCuTc1J0x7D0C2SZlMX5l387iTs+OFjSAatY87D5pLTWE+\
N2hXgD5h2bbVtD1oLJKArtjedfuk/pw0zLfnmbtEC6ubhWm//\
apeUZ08kxcpjjvT6qGMRws8PSPANPLayI9/t7nSaFytNRsrJO78k26XQI02+A/\
5lZNNIhGX8UGl9ES+rIsEgt5uV2kIg0/oT+tugbZo0kXxQKzk1Hf8YAXNK/jdFCk+\
1ZbxsUEv3cyXOr40VB98avIbuRUlmm43s42pmetTlkO7RMxAR2kEaWbaKQg9aqcdqy7+nbLalCbp+\
fHs5/hVMeN1f2MB/Ns+P7b9p56b1ey4sieP3EjOXFKDljTVpb1NE5ZFSuCul9PoXEcs/4fHQgj6f+\
a/x6XHYq0i6Mesf/z8WND/kJP45E9+IpYpTNDXh/ordUltl/\
dVh3Sqw0N0oONNM1nQqzbYMnPRTVp0sUf7howdWrRdcZNw4ANnPHZIqOrDw86SboH2HnaU263MoHab\
outQIvYj7+zt3PpO+xFCJf2HvK7+pCwe1cv828LOCk3XJIitCAZ7+\
nDcWVw6ZlDAkwqBc91EBILiXD/uaBaP51Syz1z7FeK20KH9vSCcVvcV4uZYCR8/\
HnJsUg2XuOWSblJfjvNND3NN6YlwQNZZxJl1dSJhJtZT73fry8vXmqXSbqDzJkBF6B5T8pdLYnjf6g\
RMPHrETvWzn6K0Yb/AJ5K++VwW5vmTJxl+PNcoXt+NxPX0O1HXH7g+\
UtXIHQPopuDtBJps81p2aIu7/Yhs5Gc/hYX4NJv6BJN5gm9+DlYePdJBe8GH7n/20yV/\
cfGBn8XyBfpsmsui8hy9ad7n6V8Wz0P8SclCzh137Mbtr2JhovK+\
2FIySztLhXhioee5NVJpXaTTxkHohKk6C5kdLjxH75pzeft//+\
6Hu3fo9Ovamusf0tWONVECltzjw8oco1w6TUhbQ+rdYW0Z/\
6i88oCZqOT7ejtyWeynULx5EUmZe8EcqRpCxlRfYsdtLtU78ECo9D1mvtl5j5fT7JQWFgq9Fi+\
rfipkUA9yftV3MbMLDGqqQRgyq28m/rvtZ3bOgF+sNqr15ea1q/\
Xaldq1em252S1ZGN2CEIcypAPi7ZP9cli62sjQ8qZ76EZBGGFEDv7I/\
Bv4D79WG8pWGK22peO3iw9zMNWoc8+rHMhCaGrHbTfqusNVdKjVuMO1fIdaTXe4hg4r/Hw1/\
9xkE6s0AT+uLRcmMNnGMjooBmq13Mpa7hBRolbWZVKd+nB/ghc+KK3GXDNWweKvW/\
HzJ6V0rSRVcgH7UVy3TfQo/obdPLodeH19WYkKtzMSfTSb4JPOE21eNZLTs4kvnKS++\
FTySgqrqtj0pBNJmqP9a5jJKGyV0eRRnWnAyerW+\
PMzYNDTOzDp3wYaGlTry8r6xpLT6qj9f2uNJvotZzBR1wtX5RwWHn3rW7lH3J287YrqVi/\
gzhVDsK4J1nngFU2zUYAd88yMaVhQqDdngUK9aUGhznC3i3pUtg0m1Q3WmRUokHOO1WR2misZlQK4W\
ToMbqrDtRwUq9uaBD5zu8HY8edMf/Lhua05NYJ97hYSlpvu0I2jNh6cGLBqJ2iwedGNcLq+\
pYBNx4dlBG3zwHZnpdR0j1pGpj4LI2saI03/\
egEjG80pjHxPm8V7eQhoUhClErfzIC0tPAv4mh2zlUX9NcY1miqGnjBD2zGjpzhj5e4FQ36p1z7jUC\
M3TvhVlrTJhWk9N65eGFk3Y1XB0WCDMUlS+7mJGA6uPO962Qw/+fE/Lpxx1OIv/\
u7PTBJ3VU8mUjUwzQ1dsGOXqLTR3zqqW4EDFcS9IG7/MrSASSh2KrV6tQvrw88ntlqmbI35JWe5f+\
n+wv3Ls06n8edTDoMljVEyXJzr3Fe1T1Zqr/7GmF/9lTPfrD2fF35abyz65dS6mrWnW+\
xTbLdZP4PtPtOKm/WnWHGaI3Nmi242ir78K6Jt8u7GFL9PHbswSyAF5Gk2Z5rwp6d6BmNuNj+\
1MT9sLn/cy4y5ROd+7YQ835OsLLyY+/MAtjb814tbfJhyzIehvx5Kfh9uryzR0TJ6+U4XA6Q+\
KFG4IEDb2blDKJE5+Dr9Nroq7kh6/9nzQHGQqrdGDp3jiSNzCLRAh7g5lPRyjzYXZH+\
tVKpVxWUqFM1pyOwe5oxd9bXLl6nG5Rs79hV4Xx82tSRQDwfeIS0XjYFPu/SOV85vu/\
SCyPWlOgmT342h85HmeGF08qAmXcjS/KhjWvPzZ4wp8/PVUp1WytlOeHIxrm4/\
uZrnmEOpl17AQQOKv3R+vqxPnKhDkmsl3nKcn78PVfYesT88eVR/wlZ/v9cP4twsqo+d68mj+17OU/\
JjLA+lBi2TnI0mtGskUdJJQnWygM4W8kkYfdoxMmf7WQieCA6lOvcTUg5KyxDXyfyxRLUqfKVvZdGX\
E1fdxnP4HJlD52T0pv/InYh+Yq9/\
xTIcRznjYOFUS002QL7lqK92Fpjudqf3Wbrd4qVIe2SfDvHQpkvAZ1SihI6v0q3EOEz1QUJt+\
HTIOcj2adSBRj4Up8/o+DI2x24W0G/kTCJ1NpL/\
xA5dN1nf2eJDZemivlJoJs5OQQ0GbAV0l4rP7RQ8kU79013MkevzsSW6sqw8hqZH774TOzSRmTSq6q\
N86mSQOekr+Iwvk0RnuqkGBwr5uJik+5++no/dOaVzO/\
FMZDCnrEmwZbAjPTGgC2J0Dyo6uHT6PtgfX8ii/fS+\
xIPUxHtgvN41etC0wX7WpsTT9yTy7pYnWYgSz9yWaJ66LcH0F2ZMsHjGGVS8O9vOxC89mQnXuc2JPO\
lc7M8maS6qwvkMHU0R/ltPU29mrHC1uR6GTnpTTtD1q5CM3idctsX3Sm1W8b1Ss2XzSn1W2bxSt+\
XoSuMM5ehKo1COrqwY12D+2np/AHbOmQj/oQy+OcgX8UewFpSGc/yMzleZ/\
YQnnXxOUiT1jJzkv16xOQmfnpuVmDw1ISE4CUJ9uMUN9Zl8ftGb3Zw7LUMZBvaGtrpRRSdbCczMEcw\
ZmYg6w5j3nK6ODBV110JHMbrTmI1iNCcBRqL7q0CNLvPBR3+zzEgtuMhbVXH2oXqU8/\
6uOq6eT5cQLzKWi/kBH0TlN1VHfI2KT2CDGB/Axrj5+\
dPdQqULdqVPHjWfUIRVmQ9bi2DPsGKkANunFhMTMk4c7o4JG2UTYFWU9/lOCYyILgzxDX26PJ27U+\
zJQ+khXOlMhBxJqD88gvHmjadloZu5YpftrJu5XpfPQmVn8hN9Kc5PxvsIcHzThKir7zBsPic7gkE0\
mFS9bJIxFyylU4Kuc58aGOUURDu0YI+eweepDt+1quXztF32+\
q5OCyjIIjmPAj4uTjeLXSXpKBkboff1/iJ9r/\
G5Ki8i3vV53SynAKsrxOq2G2UXOqz3dot40C1oOech0/3s3TE6nu+\
qc2R8n4W6YR1b6rhz2bTw38FIJ/p4t9GO/uuG6oZwxEmGttqIrwtMJl6qDMgk+CrLdEwqQ/\
koZ5sYyQZHV/OLmKUuFo75MGHhdin9LYv8iVh16ao6c/nqnkWgr5Z1i/\
jb1dPRBSxayiSDY06RJJzd0UMnZpD6A4/\
m2hyJ0l48DtWffWK70PIsPW8ep6o7XYHNSOSiYio3I3urtD6X/3N/U3+15X8Ag/Uf8A=="|>,
 GeneratedCell->True,
 CellAutoOverwrite->
  True,ExpressionUUID->"e7107ab7-85c4-45d4-a208-74efa629011b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"array\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Word\"", ",", "\"array\""}], "]"}], 
    "\"Entity[\\\"Word\\\", \\\"array\\\"]\"", "\"word\""},
   "Entity"], "[", 
  TemplateBox[{"\"definitions\"", 
    RowBox[{"EntityProperty", "[", 
      RowBox[{"\"Word\"", ",", "\"Definitions\""}], "]"}], 
    "\"EntityProperty[\\\"Word\\\", \\\"Definitions\\\"]\""},
   "EntityProperty"], "]"}]], "Input",
 CellChangeTimes->{{3.957664164328334*^9, 
  3.9576641654281597`*^9}},ExpressionUUID->"e2d960f7-0d47-455d-9c2f-\
ef3e18d6141d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"array\"\>", ",", "\<\"Noun\"\>", 
      ",", "\<\"Arrangement\"\>"}], "}"}], 
    "\[Rule]", "\<\"an orderly arrangement\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"array\"\>", ",", "\<\"Noun\"\>", ",", "\<\"Display\"\>"}], 
     "}"}], "\[Rule]", "\<\"an impressive display\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"array\"\>", ",", "\<\"Noun\"\>", ",", "\<\"Wearable\"\>"}], 
     "}"}], "\[Rule]", "\<\"especially fine or decorative clothing\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"array\"\>", ",", "\<\"Noun\"\>", 
      ",", "\<\"DirectionalAntenna\"\>"}], "}"}], 
    "\[Rule]", "\<\"an arrangement of aerials spaced to give desired \
directional characteristics\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"array\"\>", ",", "\<\"Verb\"\>", ",", "\<\"SetUp\"\>"}], 
     "}"}], "\[Rule]", "\<\"lay out orderly or logically in a line or as if \
in a line\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"array\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Stand\"\>"}], 
     "}"}], "\[Rule]", "\<\"align oneself with a group or a way of thinking\"\
\>"}]}], "}"}]], "Output",
 CellChangeTimes->{3.957664089070175*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"3d3dde1b-6ba4-4a27-aaa7-48fd5fe1b1b7"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.9576619161175737`*^9, 
  3.957661948597845*^9}},ExpressionUUID->"07b1c812-1b33-433d-95c4-\
523ae321d45b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"array\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Word\"", ",", "\"array\""}], "]"}], 
    "\"Entity[\\\"Word\\\", \\\"array\\\"]\"", "\"word\""},
   "Entity"], "[", 
  TemplateBox[{"\"definitions\"", 
    RowBox[{"EntityProperty", "[", 
      RowBox[{"\"Word\"", ",", "\"Definitions\""}], "]"}], 
    "\"EntityProperty[\\\"Word\\\", \\\"Definitions\\\"]\""},
   "EntityProperty"], "]"}]], "Input",ExpressionUUID->"502f85b9-4d26-47b6-\
895d-f48dcd85ccad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"array\"\>", ",", "\<\"Noun\"\>", 
      ",", "\<\"Arrangement\"\>"}], "}"}], 
    "\[Rule]", "\<\"an orderly arrangement\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"array\"\>", ",", "\<\"Noun\"\>", ",", "\<\"Display\"\>"}], 
     "}"}], "\[Rule]", "\<\"an impressive display\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"array\"\>", ",", "\<\"Noun\"\>", ",", "\<\"Wearable\"\>"}], 
     "}"}], "\[Rule]", "\<\"especially fine or decorative clothing\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"array\"\>", ",", "\<\"Noun\"\>", 
      ",", "\<\"DirectionalAntenna\"\>"}], "}"}], 
    "\[Rule]", "\<\"an arrangement of aerials spaced to give desired \
directional characteristics\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"array\"\>", ",", "\<\"Verb\"\>", ",", "\<\"SetUp\"\>"}], 
     "}"}], "\[Rule]", "\<\"lay out orderly or logically in a line or as if \
in a line\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"array\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Stand\"\>"}], 
     "}"}], "\[Rule]", "\<\"align oneself with a group or a way of thinking\"\
\>"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9576642856056013`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"25c3551d-7554-4559-b979-726d1e454b9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "List[a, b, c, d]", Typeset`newq$$ = 
   "List[a, b, c, d]", Typeset`chosen$$ = "{HoldComplete[{a, b, c, d}]}", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {3.173828125, 7.826171875}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {3.173828125, 7.826171875}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "List[a, b, c, d]", 
                  Defer[{
                    
                    HoldComplete[{$CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`d}]}], "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"{", 
                  RowBox[{"HoldComplete", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "a", ",", " ", "b", ",", " ", "c", ",", " ", "d"}], "}"}],
                    "]"}], "}"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"{", 
                  RowBox[{"HoldComplete", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "a", ",", " ", "b", ",", " ", "c", ",", " ", "d"}], "}"}],
                    "]"}], "}"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"{", 
                    RowBox[{"HoldComplete", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "a", ",", " ", "b", ",", " ", "c", ",", " ", "d"}], "}"}],
                     "]"}], "}"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "List[a, b, c, d]", 
                    Defer[{
                    
                    HoldComplete[{$CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`d}]}], "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{"HoldComplete", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "a", ",", " ", "b", ",", " ", "c", ",", " ", "d"}], "}"}],
                     "]"}], "}"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{"HoldComplete", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "a", ",", " ", "b", ",", " ", "c", ",", " ", "d"}], "}"}],
                     "]"}], "}"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"{", 
                    RowBox[{"HoldComplete", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{"a", ",", " ", "b", ",", " ", "c", ",", " ", 
                    "d"}], "}"}], "]"}], "}"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[62]:=",ExpressionUUID->"4bcdfa32-bfc6-4c81-912d-4ec2019a30ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"HoldComplete", "[", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.957664826245735*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"b503df9d-48f5-468a-bb70-42d30ac3ec0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReleaseHold", "[", 
  RowBox[{"MapAt", "[", 
   RowBox[{"Evaluate", ",", 
    RowBox[{"Extract", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"HoldComplete", "[", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "]"}], "}"}], ",",
       "d", ",", "Hold"}], "]"}], ",", "d"}], "]"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[66]:=",ExpressionUUID->"56aa3d1d-6fcf-4391-9ee0-6ad3e296144d"],

Cell[BoxData[
 TemplateBox[{
  "Extract", "psl1", 
   "\"Position specification \\!\\(\\*RowBox[{\\\"d\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Extract\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"HoldComplete\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"a\\\", \\\",\\\", \\\"b\\\", \\\",\\\", \\\"c\\\", \\\",\\\", \
\\\"d\\\"}], \\\"}\\\"}], \\\"]\\\"}], \\\"}\\\"}], \\\",\\\", \\\"d\\\", \
\\\",\\\", \\\"Hold\\\"}], \\\"]\\\"}]\\) is not applicable.\"", 2, 66, 8, 
   23737847548250188918, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.957664858625593*^9, 3.957664936098497*^9},
 CellLabel->
  "During evaluation of \
In[66]:=",ExpressionUUID->"e737f332-ce1a-4d13-a6e9-2caa663a4fc0"],

Cell[BoxData[
 TemplateBox[{
  "MapAt", "psl", 
   "\"Position specification \\!\\(\\*RowBox[{\\\"d\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"MapAt\\\", \\\"[\\\", RowBox[{\\\"Evaluate\\\", \
\\\",\\\", RowBox[{\\\"Extract\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"HoldComplete\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"a\\\", \\\",\\\", \\\"b\\\", \\\",\\\", \\\"c\\\", \\\",\\\", \
\\\"d\\\"}], \\\"}\\\"}], \\\"]\\\"}], \\\"}\\\"}], \\\",\\\", \\\"d\\\", \
\\\",\\\", \\\"Hold\\\"}], \\\"]\\\"}], \\\",\\\", \\\"d\\\"}], \
\\\"]\\\"}]\\) is not a machine-sized integer or a list of machine-sized \
integers.\"", 2, 66, 9, 23737847548250188918, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.957664858625593*^9, 3.957664936114189*^9},
 CellLabel->
  "During evaluation of \
In[66]:=",ExpressionUUID->"f95e6325-e6c6-4a8a-8a47-cb5185b8755a"],

Cell[BoxData[
 TemplateBox[{
  "Extract", "psl1", 
   "\"Position specification \\!\\(\\*RowBox[{\\\"d\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Extract\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \\\",\\\", \\\"b\\\", \\\",\\\", \
\\\"c\\\", \\\",\\\", \\\"d\\\"}], \\\"}\\\"}], \\\"}\\\"}], \\\",\\\", \\\"d\
\\\", \\\",\\\", \\\"Hold\\\"}], \\\"]\\\"}]\\) is not applicable.\"", 2, 66, 
   10, 23737847548250188918, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.957664858625593*^9, 3.9576649361200943`*^9},
 CellLabel->
  "During evaluation of \
In[66]:=",ExpressionUUID->"7ebe1f2a-3882-4977-8cfa-dc9cc8072206"],

Cell[BoxData[
 TemplateBox[{
  "MapAt", "psl", 
   "\"Position specification \\!\\(\\*RowBox[{\\\"d\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"MapAt\\\", \\\"[\\\", RowBox[{\\\"Evaluate\\\", \
\\\",\\\", RowBox[{\\\"Extract\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \\\",\\\", \\\"b\\\", \\\",\\\", \
\\\"c\\\", \\\",\\\", \\\"d\\\"}], \\\"}\\\"}], \\\"}\\\"}], \\\",\\\", \\\"d\
\\\", \\\",\\\", \\\"Hold\\\"}], \\\"]\\\"}], \\\",\\\", \\\"d\\\"}], \\\"]\\\
\"}]\\) is not a machine-sized integer or a list of machine-sized \
integers.\"", 2, 66, 11, 23737847548250188918, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.957664858625593*^9, 3.9576649361253357`*^9},
 CellLabel->
  "During evaluation of \
In[66]:=",ExpressionUUID->"084b30aa-8282-400a-854e-dc0dcd8b4249"],

Cell[BoxData[
 RowBox[{"MapAt", "[", 
  RowBox[{"Evaluate", ",", 
   RowBox[{"Extract", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "}"}], ",", "d", ",",
      "Hold"}], "]"}], ",", "d"}], "]"}]], "Output",
 CellChangeTimes->{3.957664936130268*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"34c5e682-1e0a-433c-9c10-d748205568ce"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9576650006520348`*^9, 
  3.957665000654758*^9}},ExpressionUUID->"dfb8fcb4-fcaa-4557-b07d-\
f001d497be05"],

Cell[CellGroupData[{

Cell["MapAt[Evaluate, Extract[{{a, b, c, d}}, d, Hold], d]", "ChatInput",
 CellDingbat->Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      If[
       TrueQ[CloudSystem`$CloudNotebooks], 
       RawBoxes[
        TemplateBox[{}, "ChatIconUser"]], 
       RawBoxes[
        TemplateBox[{}, "ChatInputCellDingbat"]]], StandardForm]]], 
   Background -> None, CellFrame -> 0, CellMargins -> 0],
 CellChangeTimes->{3.957665010312867*^9},
 CellLabel->"In[67]:=",ExpressionUUID->"6e9fe4eb-b27f-44b7-95af-87573cc35d56"],

Cell[TextData[{
 "It looks like you're attempting to work with expressions using ",
 Cell[BoxData[
  TemplateBox[{
   "HoldComplete", "paclet:ref/HoldComplete", 
    "https://reference.wolfram.com/language/ref/HoldComplete.html"},
   "TextRefLink"]],ExpressionUUID->"28f789ba-f820-4ae8-8f7a-3504cf7cef8e"],
 ", ",
 Cell[BoxData[
  TemplateBox[{
   "MapAt", "paclet:ref/MapAt", 
    "https://reference.wolfram.com/language/ref/MapAt.html"},
   "TextRefLink"]],ExpressionUUID->"cc0ec4ba-ad29-4729-99c0-f0bf2b81d9dd"],
 ", and ",
 Cell[BoxData[
  TemplateBox[{
   "Extract", "paclet:ref/Extract", 
    "https://reference.wolfram.com/language/ref/Extract.html"},
   "TextRefLink"]],ExpressionUUID->"3236efdd-6bbc-4676-a57c-e6f56f060aae"],
 ", but encountered some errors. Let's address the issues: \n",
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"Understanding the Errors\"\>", "Subsection",
    ShowStringCharacters->False],
   ImageMargins->{{0, 0}, {5, 15}}]], "InlineSection",
  Background->None,ExpressionUUID->"eb41bb0d-a77d-46bd-94ed-9f5bfdf41302"],
 "\n1. **Error in ",
 Cell[BoxData[
  TemplateBox[{
   "Extract", "paclet:ref/Extract", 
    "https://reference.wolfram.com/language/ref/Extract.html"},
   "TextRefLink"]],ExpressionUUID->"231a8f08-4e9d-4a18-b061-bc8d4233bc54"],
 ":** \n",
 Cell[TextData[{
  "   ",
  StyleBox["\[Bullet]",
   FontColor->GrayLevel[0.5]],
  " ",
  "The error ",
  Cell[BoxData[
   TemplateBox[{
     Cell["Extract::psl1", Background -> None]},
    "ChatCodeInlineTemplate"]], "ChatCodeActive",ExpressionUUID->
   "ed9474c3-45a7-4756-b6b3-7a1f4c058e36"],
  " indicates that the position specification ",
  StyleBox["d", "TI"],
  " is not applicable. In ",
  Cell[BoxData[
   TemplateBox[{
    "Extract", "paclet:ref/Extract", 
     "https://reference.wolfram.com/language/ref/Extract.html"},
    "TextRefLink"]],ExpressionUUID->"b1194a99-0f0f-4bb7-a932-6824ecb8aa1c"],
  ", the position should be a list of integers indicating the position of the \
element you want to extract from the list."
 }], "InlineSubitem",ExpressionUUID->"ee43c736-66d0-4b29-b946-85777ba7552f"],
 "\n2. **Error in ",
 Cell[BoxData[
  TemplateBox[{
   "MapAt", "paclet:ref/MapAt", 
    "https://reference.wolfram.com/language/ref/MapAt.html"},
   "TextRefLink"]],ExpressionUUID->"0068b707-a344-4f6d-8195-a75f0317bd1e"],
 ":** \n",
 Cell[TextData[{
  "   ",
  StyleBox["\[Bullet]",
   FontColor->GrayLevel[0.5]],
  " ",
  "The error ",
  Cell[BoxData[
   TemplateBox[{
     Cell["MapAt::psl", Background -> None]},
    "ChatCodeInlineTemplate"]], "ChatCodeActive",ExpressionUUID->
   "5f036b1b-3de1-424a-81fd-4e1053fbb276"],
  " indicates that the position specification ",
  StyleBox["d", "TI"],
  " is not a machine-sized integer or a list of machine-sized integers. \
Similar to ",
  Cell[BoxData[
   TemplateBox[{
    "Extract", "paclet:ref/Extract", 
     "https://reference.wolfram.com/language/ref/Extract.html"},
    "TextRefLink"]],ExpressionUUID->"e1b035e8-1ff6-44cb-a225-65ea6162a5e9"],
  ", ",
  Cell[BoxData[
   TemplateBox[{
    "MapAt", "paclet:ref/MapAt", 
     "https://reference.wolfram.com/language/ref/MapAt.html"},
    "TextRefLink"]],ExpressionUUID->"6aa1788f-2704-4de1-a8d1-e87f4705a05e"],
  " requires a valid position specification."
 }], "InlineSubitem",ExpressionUUID->"1c136981-a249-4472-adee-3fa9a6b02af2"],
 "\n",
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"Suggested Correction\"\>", "Subsection",
    ShowStringCharacters->False],
   ImageMargins->{{0, 0}, {5, 15}}]], "InlineSection",
  Background->None,ExpressionUUID->"d17360fc-43e0-4853-bf70-fd62e8252cfc"],
 "\nTo address these errors, you need to specify the correct position in the \
list. For example, if you want to evaluate the ",
 StyleBox["d", "TI"],
 "-th element in a list ",
 Cell[BoxData[
  TemplateBox[{
    Cell["{a, b, c, d}", Background -> None]},
   "ChatCodeInlineTemplate"]], "ChatCodeActive",ExpressionUUID->
  "74462843-483c-4879-9da1-4030022f38d0"],
 ", you should use the index ",
 Cell[BoxData[
  TemplateBox[{
    Cell["4", Background -> None]},
   "ChatCodeInlineTemplate"]], "ChatCodeActive",ExpressionUUID->
  "dca69e56-e272-4276-91b7-7b7a730a79cc"],
 ": \n",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     BoxData[
      RowBox[{
        RowBox[{
          RowBox[{"list", "=", 
            RowBox[{"{", 
              RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], ";"}], 
        "\[IndentingNewLine]", 
        RowBox[{"ReleaseHold", "[", 
          RowBox[{"MapAt", "[", 
            RowBox[{"Evaluate", ",", 
              RowBox[{"HoldComplete", "[", "list", "]"}], ",", "4"}], "]"}], 
          "]"}]}]], "ChatCode", "Input", Background -> GrayLevel[1], 
     LanguageCategory -> "Input", ShowAutoStyles -> True, 
     ShowStringCharacters -> True, ShowSyntaxStyles -> True], "Wolfram"},
   "ChatCodeBlockTemplate"]], "ChatCodeBlock",
  Background->None,ExpressionUUID->"149a89ae-efbe-4e8f-8751-dd4d3396a6c5"],
 "\n",
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"Explanation\"\>", "Subsection",
    ShowStringCharacters->False],
   ImageMargins->{{0, 0}, {5, 15}}]], "InlineSection",
  Background->None,ExpressionUUID->"24f0547e-97dd-4b40-960d-67532380cf95"],
 "\n",
 Cell[TextData[{
  StyleBox["\[Bullet]",
   FontColor->GrayLevel[0.5]],
  " ",
  Cell[BoxData[
   TemplateBox[{
    "HoldComplete", "paclet:ref/HoldComplete", 
     "https://reference.wolfram.com/language/ref/HoldComplete.html"},
    "TextRefLink"]],ExpressionUUID->"287f47f5-b2af-4c53-ae6b-2379c45beeff"],
  ":",
  " Keeps the expression unevaluated."
 }], "InlineItem",ExpressionUUID->"b2531460-113d-466c-90e7-5598dc26cb84"],
 "\n",
 Cell[TextData[{
  StyleBox["\[Bullet]",
   FontColor->GrayLevel[0.5]],
  " ",
  Cell[BoxData[
   TemplateBox[{
    "MapAt", "paclet:ref/MapAt", 
     "https://reference.wolfram.com/language/ref/MapAt.html"},
    "TextRefLink"]],ExpressionUUID->"ff6e9cd4-b1bb-4754-8f56-f8ad9d975bd5"],
  ":",
  " Applies a function (",
  Cell[BoxData[
   TemplateBox[{
    "Evaluate", "paclet:ref/Evaluate", 
     "https://reference.wolfram.com/language/ref/Evaluate.html"},
    "TextRefLink"]],ExpressionUUID->"97e27e30-5776-40b1-bfde-d232bebbacf9"],
  " in this case) at a specified position in the list."
 }], "InlineItem",ExpressionUUID->"0cbc41dc-4bf4-4809-b172-d6c2b326c443"],
 "\n",
 Cell[TextData[{
  StyleBox["\[Bullet]",
   FontColor->GrayLevel[0.5]],
  " ",
  Cell[BoxData[
   TemplateBox[{
    "Extract", "paclet:ref/Extract", 
     "https://reference.wolfram.com/language/ref/Extract.html"},
    "TextRefLink"]],ExpressionUUID->"086a7e95-1aac-496e-93e2-01f902a6ebbd"],
  ":",
  " Retrieves an element at a specified position in a list."
 }], "InlineItem",ExpressionUUID->"1a68e41c-1224-44a3-9238-47cc0e1b799d"],
 "\nWhen working with lists, ensure that indices are valid numbers \
corresponding to the positions of elements within the list. If you want to \
manipulate specific elements, you need to provide their positions as \
integers. If you have more questions, feel free to ask!"
}], "ChatOutput",
 CellDingbat->Cell[
   BoxData[
    PaneBox[
     TemplateBox[{}, "ChatIconCodeAssistant"], ContentPadding -> False, 
     FrameMargins -> 0, ImageSize -> {35, 35}, ImageSizeAction -> 
     "ShrinkToFit", Alignment -> {Center, Center}]], Background -> None],
 TaggingRules-><|
  "CellToStringData" -> 
   "It looks like you're attempting to work with expressions using \
[HoldComplete](paclet:ref/HoldComplete), [MapAt](paclet:ref/MapAt), and \
[Extract](paclet:ref/Extract), but encountered some errors. Let's address the \
issues:\n\n### Understanding the Errors\n\n1. **Error in `Extract`:**\n   - \
The error `Extract::psl1` indicates that the position specification `d` is \
not applicable. In `Extract`, the position should be a list of integers \
indicating the position of the element you want to extract from the list.\n\n\
2. **Error in `MapAt`:**\n   - The error `MapAt::psl` indicates that the \
position specification `d` is not a machine-sized integer or a list of \
machine-sized integers. Similar to `Extract`, `MapAt` requires a valid \
position specification.\n\n### Suggested Correction\n\nTo address these \
errors, you need to specify the correct position in the list. For example, if \
you want to evaluate the `d`-th element in a list `{a, b, c, d}`, you should \
use the index `4`:\n\n```wolfram\nlist = {a, b, c, d};\n\
ReleaseHold[MapAt[Evaluate, HoldComplete[list], 4]]\n```\n\n### Explanation\n\
\n- **`HoldComplete`:** Keeps the expression unevaluated.\n- **`MapAt`:** \
Applies a function (`Evaluate` in this case) at a specified position in the \
list.\n- **`Extract`:** Retrieves an element at a specified position in a \
list.\n\nWhen working with lists, ensure that indices are valid numbers \
corresponding to the positions of elements within the list. If you want to \
manipulate specific elements, you need to provide their positions as \
integers. If you have more questions, feel free to ask!", "ChatData" -> 
   "OEM6eJztfUtvI0maWM90TXUrZ/\
q107Mej4F1NEv2StUkJT7EktRdPaPSo0uekkorqro8YKmbSWaQzFYyk5MPSRyVgPXBXh/Wh/\
XABrzAYgH7aMMnH2z45j9g/wRjDoZva/\
jqi79HRGQmST26qscY21toiGRmfF988cX3jkdvPC01f7ThecFZU3qyG7uBvxn4sTyPo+/\
t2F4kS823NkajfXsom29tyZ6deHGpaW1EkRvFtt+\
Vptm7G0k8kH7sdm3E0rz75Mnez11qnMTBThAO7Ti6cxQmEnuER037VEJfpzKMCCIyqKxHdiQPwmA4i\
nvfje48ga6ac/tBLDtBcBI1P3weeL3QHj6x/\
X5i92UzHnsA9fuPxiM7ig5lNAJkcnMguyeu3zdYP9wc2LEa3EEoR4Q/mkNSgDS3W2r+\
HrbYCt1T6ZveNPQH+O4xUBKE4yfS78eDr//7mwpk1x8l8MfBoQdh887/+Mt/+\
m9Kzfezg3v2bHcrurMf+IDqPfUCHh8mnoz08+9vyagbuiNiX+\
Ox9EbizI0H4ix0YxiIsH1H9KUvQ5t+Ki4IzQbRDRzC4kYjzx7jlPW+E719aJ89Cs5lBN+\
trbFvD90u/Aa+/mRn+wDGaseyvRMCW7Z9B3gXJGFXAokwLBx/\
Mw6Rh80fHwDBgW8j1k3oRwsAzO8HCuv0NP+Nbd/\
ueBJxfR4GyagpY6Q8negPuAFISlOGp24XecGg7wMmoGPsdwdAW5CkMO/vhPKXifS74wPp2148Dv/\
8X+C///BTePcYeOTJcCfxSZSjjbul5hz2v9EJwlgz+m18chBE5sFb9CCU+\
vcPj4LAO8RuovhQdiVIhKPf/YjfsZB9ztORvn0bWehRcx7Ih5Mk/VyOo95dJdV3HgXOuDmHfzcHiX/\
S/D3zFeQf+\
SGdptWM7TiJkO1N68iOTvh3c24bBDXGGSk17z52HUf6KZcejzuh6yCtezIeBIaed3f9rpc4UolyTv7\
f2/UHEoQN9fpIRmYe4TlIoO2RAknPM5MEE7d9ansJij2ZiHcmZOOHe/Y5QrAYsd64b/\
zyu28AML5ibTwKToB094038PnfhOdPkxg0ahKQFG4OXnP7HOnv0+N0YqLN75Wa7+zJsC/\
3gIugHka0fn/P9d1hMjRNj9gUfafU/N4ekO9tfBckQglk8/sbv0pC+XQk/Y3dUvMOjfKD/\
igu1YNSdblaLy2vlpYbYLP2wDK6w8CxDXvuzGaJNi3PgdOSJ6f5LgifBHMEgvbE9U+\
ASO5x42B3E8yUJ8mGHD5p3h/E8ShaX1qyR245gDa2W+\
4Gw6XTylIXZmepa1pHoF6IBLmyaXseGYEcz+4+Dd2+6zffV5ZkSSs9jObA7gIaGsCM128Cuc1/++\
YvgkTYoRS2GICx6iXetE2y9cAF2AjpCGSGMNwoC0ARiq+\
DjnAjEQfCCQQ4EdEL0CPBxK9b1n3xtNeT4TTqKOnDrNJQRQcchiMCX4xCeeqCuRAu2uSoDOBkSHvuu\
ZBhGIT0aPscLKTr8xMxVAIiIu49iaC7xHfA4gGRTiTOYODiDHQNTHHg97MYApJUoB2bDO2x6KAd9nt\
JhCYaRuT68nwESgUGCyhE1EQBsyDtjgx9AD9DABq53Qg4J3wpHemUxfOB60kxBm5HI9kFRXR/\
JQHxFEuK1KZr+\
zQfjNP2x4yxDHqMJg4JmbacP1TmBqhOjedb6PZACY8CnHqtRwXVbVvLQ3uqTan5gywEuiGNFb7faXp\
BjOpmYaNm0hm6eT/8PrsRfMuWIPpoqs/JJmDZ+JGW9+hvXwGjG8CgSQVTHGTb5qfAZrSaYej/\
gAMW5RGCUA0e3IxLURUYlZ/MbnIYeLJ5tzmOYjmEwU80Qu6xs/\
jwUHroa7aCbjIEaaTAArzsJAA7VSfH0re4UdR7g5GVEBsPgGIx7Zm1ZW9K38nZ0yyyd6E5cmELQDqp\
u3+nOQjOyLiCfOa7BxcWjNhsm4jurrUkz2W3eWcJ+gK/\
CqZeQhzh95nNxjLaIfoeFWSAZB3ZnY50lGCorj84ssHSx5tekDhPO19DIJvr/vtHYFyRO2DKwx79+\
28g9O8euRjN+FEcgi7nQX5E1D5KHEBLpn3kuTJEqX2H3sAQ2eXdVc6g+\
RMtWNvnNhph5jgFp827pA5PkFDVyEQxuV4/\
1K8PZRyOtf6YQcLLHPI8j1NnD9LkYiscOTx8OmJ9Bpf4AyXdG95oYG+\
8SUEnBfUHECKY6OHtncBzck/eA/\
8KDx6NQROCBKL8nz16D5z1jydCcRMNoO34IeUV0tmGWU5ieWDHgwmnrRocStvht29uoG59oJ6T4k2D\
vQcJCYjMs8NdxQVN5I9V9zDY/MxufgreTsVBuYD/AMRtoukfACefy86OjLtgjTe+k4lU/\
FgFIv8VjOn3oVFT2iG1uqOJ3nCAl6pxNKfiKQni/bZmUf4poN4Ftadw5a6evM+DoI+\
T9z50sTvEDOe32w8Jlsn/\
jsYjufEGKho8NcZExzRHwegAteDHR6HdPWl2Q3DVwMTnkPodeHY3bfnWF5ziNL9XLS+\
X6zBtX7iRC7hUJhH17ihDkI+QwCvAT5r6sDl3gF6W3AQmMhSeQZhGlBlDkpPpq0USiN+\
yYxtn9G3jmd5mHBjy3cnb4bcUd5v/cO2v45z/m+\
Icy7on2Bl6YhfVOuFwxrL0PIKaw9suZdEMzMTFkGsmffyp+jc9owQKHbiXxdEAphH+\
89wTlIpQ9hPPDoWvGgh53pWjWLixGMDwNDIM0Hm+\
RBcjDeC32x2kvMEBwRfkJkRpTjpf8ABebeyKBRj3InYv05fIipBzVNEDe5jiG0BWA/\
MkfZypUxmCJUBUPKGYd3F7Q3WXBb4swHm4MB5vTIzOCA4pgTaf4KXGGcyEK4O7I3tBiP0jlx2uSTAB\
msCygIAMfrFKnAUhkhDCWGLVsxgmIDu2A9IiNaBRGdFPXLAGIHcRaQ9pWKjDFZhXz0MhHdkhqgxMw9\
AOT5zgzKc6So9CQaKbaGCKiqgaWrZwKgxMNIZ46xyJYEhmjOmuLLb9CIILApZR1x5JnG4UMlCEVMaF\
26MmoP/AdiAyGmRwZohk3kh29kUNdoYGBs0HsxNEz0MzCbJlg9EK3egkwzdFhhtrGe+\
AwY48Oxqsixf3gWNosyXMXn4sJAYwixFCeEH3RAQ9Ki0BcxKwI2AwDE5QGCkJL8jDSUScdbm+\
QDz1tA07g66EPYIYqovuZN1qt9v6pYXI8YEiydS78Dmqf468Ilg/kLs+ijtPGyKktp+I/\
e0vtg8NBYVdv1Uul4/XHxYEMLMAISP9hp+\
e3ZGggGrqqSMSGJyUjkHaGRvJQFP25PnGL5oZJvgofBoYuOEECUEZdqDengYuSN+\
w44K4xmNu2OWyB7mKaF2023tjVQmBbzpRap0fM0vQE4JcABxY2BBzNPQEbHif2Efy7xPbDVlA8VDT4\
6FVity+D73Mz59/WRUfi/\
GX1fl5wLvbu2reu4AKI1PkPeOIijQpUptaJVtOtgsQqvm1tfLaCpr93b2Dp4dHG/tHH+\
WkTGFJxVbzSiy0F3E2MvjEwvyiUMakqJl/\
tUyDBrKyrItdsK9Y3AO7pWkSSAHMJoR6RAcoHMT1OEEK44s2dv9iHhxrAG7MG38Eo8BSDOgaWyRsPO\
WbnWwqhvKi/GHOULHtWBctkrrjhRHVVtaT0F3Mqfm6NXdftI5Q9EyjUPaW6MkivTQdPz3F+\
pQ8Mw3JGi7p9/o1Q1F9WjSJDAMQgx0PwS0t0Vt+uahVELqVKAMz68zReNiB+\
CudHJ5VEjwbzUaeK6Al4DKfotZS2ONmIFHfUIFQZqa8WgS2ZZYPm+\
m1iqQFpMRBDx6gGjtuj4ahHB2FN8Y7AvaIOP4MYxX2uGT6KcLRdJy6aTAgOZIk01Awdf+Ccuam+\
w4aLVoLkI42k8A0KmQKXBooi02GgDTGpqd2J1DmLBMjcKRCpoz9dhicwhyDP3SoooARBVuNouhgTGF\
AI4HLG1jq4fGCF0qgtRrURJQQk8crIyd2GdiRyFxF+1/\
9kz8jSrQUUJCto04WFvvUhnChg34KsSqPO3N5IsMhNTAQEATy0R6iPWVCevgQgw3kwZBmQg4h6ycXq\
iCUAFCnY4MYRk5pCCojmIfgPOUFi6MCR5eLllf5W0qzHgXnrcJHWk0hPLC7A5Tj9aUlJWUl11ksgF2\
mgJ77hNQzMAEYYg6oqgr8JsLhL+\
QDLggDyL8NkskRDyMwEd8gE2qo6QE1Qerb7RsJarenvGR0VcQwTSCHkyQK0CUqpH2GbA9oDsA2QfyO\
QT0+mOSWBMcABq8reQ6+\
xrADtRaGRbgpnmIXGNveiRL1hKQyksa0wpyzHrKmcKj16UdXjPejzzjfIO8b+\
JrSyEiK67OspQ5Hx3hS54KAIfAmYqx2ezPwgnBf9mGyWtd0T/N/RLzR/\
jgj1xEbKSCCBLEstjjWy8ZFk3wEMtEYhKlUkFSxaMCspNGnGrYZKTqlJzxcCtYo6WqSS4VXncT1gGY\
MXzGpFT0VW0BmFY/LYoNmBvzBCWFLfFyMZHPXU/F9yItgkJ1hWjWl01TdEp+\
bSBwD8Z9LOWKKIipCcfA3CiLK/\
i2e6JQStGt9QIqVP2RfLG0Hp3SEBWkngSgBQBQPMcuGyKDvBR0APAXjiWYn4h7c+\
A9Zfn2JlWw7HGPQ5p3Z44g4yZ4dgy4OLn1cPaNYCsWD1CfFuCDL/\
bLAKlS4CVGatwmJN3rHfQplEB06egw87ZELsi3ApVKoHwcZ4zuJD+HaNuRXfutEnEMw9p//2XE7O+\
j2xsRL7POAvLEYAkvD6WTYuGObUkaqcWk33g0lrxWPvCAGXQXXIQIuBkLACLknuGsVCiO0J/\
sS6wAwhqF9ojy6tCOX3URaKrC0iTZ2w45Iu5GTmA9HiRdnx0XiwD7MSchcgK/iZkVjAc94ZF/\
pxOCrvLqms6lcNTxOQoq6dMaAleSyiW3Je/QDVaCgEdmESaBsZzIlCEtA2x5t7zw93EbkCGHwk+\
BTwYkLCBSR2F0UMcpJ8Y3K5FFxKXtgh41rcUks1ThBM48C6llRkYmbMsGiSpuzVGijDmkuru8NcQLs\
sF/BP1UuolvWBrmW1OTR46IyqKT8ZKIk12LpuWGFVgASglASV7EBEw4M0LkCdEiBXUR2Aaw38I9K45\
J8N3oDMh7sZzC9wcmXNkqaAlVD1Q66CyaXM3KMs8BeEsncPc7+1KDX+\
TFJkAUQIMmaBotNEHJlHVBSlcmi1ppJ1r17YPRUtKInVSnUS45sFpbO7EULTZSPywWo2VrRwBKGLpU\
WIC7KQ8FsYz6RjEpxUHLAf6jJt5WNUyKgvB/andhVngp0DDxsOC6K0WAcuV1gYl+\
iRYSfRTHgZXpQ3RBDXGgY+MFwzNHuECSlbG3oSbHmkMKxKBH3KESz5mDqRxE8AhOpqm4iGgRnAp+\
XOuMSfoL0ewkFRwuPgCfS9ovKTNjeomFQanFMSRW5BS3Ub3lFzJetsOCQYaYlBIkIcAIWTXqZEMQJp\
ApCcmUmDCoyEpn6gxMBNh0YSE4Y0zlNCmUV5E5JxbPe15iniQQYy5whmDhN8JArcZhultGk2JmqkcY\
R6bDc4dTHRHGY9WjTZs/szBjHeDxCXVdxkSq1qgjDcDpKRiPcwpIWL0+lzn2MLd+\
zfXeU4CIhD51sVYjdpAYLogQQyJ4LXqlsHWCsPi3pnICQnLchAWgVSLAg8C0qS4cWH4Qj6GMJGk1dH\
HqlhwoOxqqDc4hz92cjR85xoqAtnlm7oagRU/\
wgPFE11qHdDQOMt0DfoQWPDuQ48RxdGjDB0hWjASqDTkzlyQEudTLi9h8lNmrjGIbW3gLG8eoh/\
trWz2XcLVMepDoEE482FpNM4PmLpFdbqeCg/\
17z6X5OHUn6S1doRUZYyS7tJGSeKRgFq3SU8wroyTpgfHoqDeZNZaY5y5gjh7yMBeKPKp4tZLKbIuX\
LYTD5KRVkLatUKlnWpy/d4Vfg6MP45WdU/HoM2Hp2iJnBGGdu/xebnKY8CsA8+T8lAHBZLz/\
LA5tVEQvshPW5DLbUrsEWSRVDF8XeRuG4KOjRvjyDuQ1PxCbwvnB8rCw3OvarOmH3ZumJbFUa9XK9U\
hSFPZTxwvHNxO1i5MhgYohA2cHhROWoKl9LDfELjMUuyKyyN5D5j5D1tYGoPBgWaW56YMohOYugHUU\
ot2Qh8UhRqoYnlphzjL3wKhxbWS4vP0g5BhgLj8FY3Yp3lAdLE2gxKsVFDLdBZcJbcOw51WawPHdGO\
rYLIo8bMTGP3YXAtAfhotsfQHAfnH0TXjFXdMno7Er2kNyjGu4O0cwiDss4jzROS0MmbdA3nx0ebu8\
fGcNufBMQEivjP9a1AtREFYKi/zZxrK7MKFMIoaquIpoOy7hYf9US5b+7bwqu6+\
KxLpxEwTB1yfmaXAR+YiT1et44NaZq/YlHo5K+nUPxGeAJnYMBpNvgkptjDyIoDPM+\
01XXCL7uQ7Jhflt6o1qo9pRGZRXfd3GTBm1a06XuQznCXTIQ56Stl2Z2eK+\
6Ul2tNxqNZYtitHZbb1k1ZfPCTEAs2qC15mAbMhnmA3r6qMtOBV2xLbiqAOlngDswxAKWoYpiGwR6L\
LZc3FEcBT6Yi8ZKAywntBouQojabrdB4nb9VuV4/aEFjguyqIfiSJ7HSE3UKuwKklFwd9u4sPabP/\
71ERYvh4A06MOvwvEnVjT2cIEaAG89qNa9osB9M+DaS5+B/gLNbrdw/HfF0s8EUfGJdWF3EALDywA+\
L5EuDH9bOx6GMn6Lt1g2R54bI7rCb/\
74XyoMiqBWawPTJff4GKz0hVsU1UugNrTPmvKXgA33UoMktw658gZtEc2F/ZVY+\
kQw8k21tPBHLRs7+Ed/BmYL6cVvEMpe0/LXpuWvoeVX9P2nhUumj0cE7T4l9hE1O+65dA7AFsWtJu+\
wkYowosqau1C90od4iejUj0vEroFaabNf6wYwfIT/\
9HbQKZg1BwQjLPMMaP08dJ3WBVK8VBZMEQ1tSffIg/\
7Tf1W4BP7QBF4eWxauYFWOH1ovBf7jv5kvE5+T781rgAd7J+hv5svE5+T79DXAE204/qUCo+\
YHwjwyT6bbmCaIxyUsqBz0BTSEPqX67Y35MSgLfRnybyfowyctGloP6R9aKo7YvqD88Df/4C/\
hP9zbQbF1T70UuLslEv/pP+\
ZNV7MbjCR8Vh5YmYWXDL57lZXVlVr9wdpKxYJAJsYSZ7u9EUVB1yVTAuaFix8e7nfArFcleZPWIUtl\
K/u9cAARq4xRArYVLEpcYQ/\
cmnk4znRZSCVCfPqSX2ex7Mmwm2DYjsJknH2tXFuuLNfbjfL9L6s1aPZz16MCHPU2jeUL6SfRBI56e\
bXxoFZdnvpXYbT1m9GCGYwHE2hXymsPqpW11UZ79ZZY9iAoLZfLIoemUl5dW63UmJQHNyNpYsLgT9H\
SWK1V1hhJ42Ykz0J7mk+\
rgKSyrChZuRnJvhzFiS8nsFTKy9V6ZSYlELqQDlwnkZ6nSp9UckAn57NwjrOiWZ0UTQqftocjrPI0K\
ZZ5lLgeVqVIKg8Y5Sx5rGbkUTeDYF9DA/BG2B1ASNWNeaQXhhO0NQxbPIdwybWHO0/\
sYWd9vRb2aiDHl5pnN2DF9O+xxHCR8e+\
5tLEZsosgNuWfdAZugY3q3IrYAm9UpUBhj2qyktvHYkt2A5JHZAdmk6/R/\
2EQ9F57EIBkSPs1XwNHk2vImzZYRkrKrsF0G3k0FjKVyqwg1mYK4hkwM0RKLwq46xbpegwigju6E8/\
m2AEfPpFnbrQVxE3a9pWEcsu1UVfQj14nszWSWcZNvpc7nNkNvX9cfXptf9joxUcvFl7cn7XESOs3V\
6zoeZE/6CwWjl8s3oKbyMso624wsViCF7OZW59k7gVxt4tZ7hkzmB5AbhDiHk1+LCrmRXNg+/\
2B7WI+AOnCjutDOo+L45vSpxm6zE0Ryy982/GCIGRJvLzOl9Vzviwrhpv7R0wiK+\
HmvuDfxYyhXK3UwbvV643KWr1aXQFn8mAVfHa7Vn5Qrz6orlRqFXjdWFtFv7cjwejCuCr1B5epMc52\
eaC4QB1VdM/6KfcPvMlSUF+tltdqa41adaW+slarPMCwYbkKFDRWoPvVeq2+WoHPaoaA1dUr+\
tfMJl4bVmtOK2N0w4RkiWsAeyrgt6urtXqjvtJorFXXKrU6ErdWWWusVJarD8CvN7LMWa5cYn4MsrP\
yOyI712jxCkjPRU6NM2KiMeZ96yuJTJYkRAci9PKzYt6AzBCT2RS8ishMErC6OtX/\
zYIxm5xXEJIpdixXXn52ORmdYza87UlaBMoF34/\
syO2mhYPszqcU5F4D2AOzs1xBc5Z5oQwhbwlJfFHoBHZcmIq6MxAtbkL8+hxXnnmZ4ZnvMvkkrIgL/\
Vkmxp6FIiOErZnItF5PvsNoj7o4PmZGbeJarcy4x8lRmmVl2raMyf1k/\
GYR6EPMcnO0Hg3kDaN1ZIzLKD5qIYwZc9UchsdBEt2EI+XY3GUaCF7MoOR1mLaVoRTrETPJ/\
DZmRcnv89Ae8boCMZcWedrtKUCYH46peU+\
GWn2cmsOpQCdLPnZwM4vFaBDakczIJsQuVhbPt8xyi6sGt+M8Nv5WuI+\
oXhfRgeIUqJgJfp7gdgfp4DSUmnN4LiwI7XDMp1bSYyB3cFdgpsL6v/\
7Ws8MneE5pfd31T7G2uU5jfUrHymjx0cVzH7iIx7u8KpgPYyEcphXSAjpfgYsty6IzjmWkt4xhjTVf\
PcSVpu0vq0vNX4YQDy1Vj7fPR6BKH28G0QDG8HHT9fHTWljItVq8z+3Ex0K1hG+\
q7WKqjwBUZyAAmdXWMrK537qxcSZ6XquVq8v1VTDRjcpqFSsMKdN3gYl9GeJRvtZ0u0zot1ZLQ40t9\
9SNgjACiKx7rxQFuOIafKzVLql1A1vvSdtv5V8qqAZA1arU8gG2PAhhpg7cVq2qGjyABpUKNVjNNqh\
UVINVaLBC79ey71fU6zXsgF5XlnMdaN+xDA2YgEolM7Km2x/aLaAVJu0htMA21B6dDR1pY5hVLRXE/\
qphP33jSVeTBL/pIZa9WhdVrNRCSJX7BLm5eBx4jjpWLlu3RnoxG+\
Hl8aUSrwry6WbkC9PYF69Fz1wg1h+C7oJKYx+t30JPesJwRi+gGeEAJasa4c/\
2AEDXNyDUvws4LpmH1WWWvqGkBY+o9f/\
WGHX5aTk1E1U1cA4BYeDRz36WeUXNUdsa3KyaszsNjbCqEFYJsKFw1nJmR7/\
TMDVjFKr1WUahWjdGoUrm7hDCddnSNqmqbZ0eARs5+5w7M900Uiw542bwkHHjBqsZU8ylDDQ+\
hcNgaKe1O9Thwm6BIUjndsJguOX23RiXsQpTAGumgxqJF97dg/\
USNmzKPywfLy3pF6Y5TUpFtaikaKqzbGRF2UjdvpqzkbX6hI38WInFx1kTUEcnGqPf+nJsLdxk+\
OrsSlV7ZeNqdfahU2JoGqb4mDKa3KOgT9uvWrcE1XxDKVioIAACogXLwFVzkFUNu8j9ksDQMXC3N25\
9YySagsY3HS+J4W/+8b9euCXU4l/9xZ+OVWcPVGdizIDjDOiCgV16EvRb6tcxN8tRwE7cC+LW6+\
ACmzQuilKlWm6D9MHfS5WocbRG9KKyXF3k272myJfUBkmfinyENE0K1v6PEb/\
2rRNfr3wzLXxVbczr5cS46pXrJfYa2a1XbyG7N0pxvXqNFI8zaG4t0fVaXpe/\
Jdw67q5N0Hst7MIshuQsT70+U4RfHesthLlef2Vh/lV9+etuKswWntAyHVJ/\
l2laOJe5yMnkhv9lbpeOvQzp2NofhpJ2LprD5XgIALdJ4hFOqbLU3FFO3AqU2S4c6SNKk/sGy+\
KJxJ1qXQ8w9sa8v8fGHde8BMBHWTN4kJpTiduwcOOqdNYtq1IW9zFR1OdW0hsziAwlY+oOv/\
X79zHHpbPVZrOio44FGRSQDwfeKQ4XHgY+lkFsrygGY+i3E3huF09jur7kPcuZx/jQHASJpo/\
U4NF5RQ9vqJ+fv6VPmZ8vW1UcKUU74fRgXPV8ejTfoA+eXtwqBTPA9I3n54tqbzAfZ1nn6sn8/\
AuYyu4F6cPlRfWSpP5F1wniTC/\
cxvR1efHCy2hKFsbQYNVwmKhs2KEZI7ISz3zwHlCqLDppATHSpzCJCZ4ITiUXUEOMQXEY4iGKPwyRR\
wU/8VdROHLk8r0JvFPKxh3NHovbwB0JJzEH9bFYFGWEg5hTtuokgHQfhbqEI0d0uz1ZZ8HKWvb6CnO\
4EitxWHQJaDdxlOBBI7w/Ig7H6siHEnxcOwvSOg0fPaHjC2o3tY/\
ra7xBegHaDexRxKdYaBMWHgzeONil7f/jRXX5g+443a/e65EU4Kl32mGd00Q8n4m3ZgxcnzaY4+\
UyrDHYPbR2cONXEIp0t5w6dMF7uPWZLEGnsQglNMY7BUCBQio1Srypw1f9kTqPcYd1PNMy6PNwyNgi\
kCM90cOj/Fi6jE4+uroO9idvpd5+si7x5Vj7e7Dxqmr0Zd04+\
1lFietrEll1y6LMeYkbyxL1K8sShH9hRgeLt+yB/d3tKhOv3Zl215niRBZ1xvenndQXOXG+RUOdhP/\
O41TFjBXKNjfC0B5vyRE0/TvAGVUnXDbJ90plVvK9UjFp80p1Vtq8UjXp6ErtFunoSi2Xjq6saNUg+\
lqqPgByTpEIXWlGVW26MmkA0gKpYYHe0R4H1f7yOBuT5FHdEJP8+\
3dMTELnHGYFJtcGJGhOglBtQ3az+\
wkydxxcFaH0A3OXDp99xzNIaMz0YRmORF7cf5GNRYioVlZ3ctcgZF8sriOsSB269nG4tynFSLYe2Rv\
R6d7XNyrgjJBKOsSVRk7MkFtSXmainzFMxmzkQDLPF/mkYjb+AgeUjjIfcNAZpDh0z/\
HEFx6rwcN3Ui27Atz8/\
NV6xvGH4c3lRf3SRFIkfYI0LeewHXyifUxKiE3Nob9aUTtsjhp8Ok3Mi2mR3jSTvU3Gk6fSA/\
fHgQ3qpeAb5wBc74c2FLTbqWrjBm8Q3PRRlR6F2QOZiboRwU+GHfCZtAkJe+\
DfoCt0SGoAUlQjZNWiju9coGo8weoqtamooEaZCEE2YhapV9oQDHHU7NJpqhZZkpw80BMdfKArhxQg\
Cuj4IN404zL/\
o2Sop8JRVUz8XREQ7gACHI46v5VGLmVrhTVxz43SE77GSLTbebvTbmdVbyJkn25s7hTAY5suny8Ail\
rULjdCegIj3OWDccWr29AdauOROhqoJ1fdjJ1dQVdiH9FR09HIG7MI6pSD415bB1cYIVP8C5Aksnit\
U96K8qUUQzqIkruZBO9By56m4gP75ZlM4jO6gbqWoJX3CLnh5l8tKkrwXD+\
OcpT6DornJBgYW2EdaSC+N1zfxoAzYe6zCfk2URK4K6fjm0ahnJuq/HFGGBrlA9FvFHv+z/\
c49tSrvngmAuvRZGsKx63JTYz6/ZbsuT5xIyrooscKBYUXClYvPNM2ThIClBve0l+\
w1bFQvL8j8xL3Kk1Bq7vXU0jIX2neT6W+\
gmM24HNIpWgLJUNKdecM9NmjAykhGNpugCkMHvuEzG7Ae8Rm0hBKdbfCBjLOt1NyMgOgncASbwCK+\
OQ1axFRKiPA4ShRUVfN6NvMcEd9N8p3/\
QWk9LxVNH42Ur3hbSPoJzXvcLNi0FdKS37KUyOzyX6ZR1egRqukB+\
LhLRABuBLp9fRNUH28YZ7QCTylSOLm+hjtFC6tTJ3yNaUnRURry8t/LUb/H4lRpuqI+\
w6qOsqn1NYuik5RdIvCmcpnL9J3aV7aqE7lpfl2vLmhMZld7tmjjbilz9wXxfZ5jCxtXYcK/\
hYFBZlIHthABbS+Poq8yrrQt1Snl7/\
QL7rG5pvhNw7fXPZXtiwimfq6vqvXH1oabwxtLLHIUoSXUXOtix1lGh/\
MbAKh5ytxJ0vVb50fV3T27XGABBTX/l6FhKyeZBLYV0F1Q5r7z38AAZqHFw3k0lw82Ij/\
NwUuA9LNoqTe0xco3jJpg2iUqM+1oCeLXNZuqcHkGqhni3w/m/Qp/5BoEql0r+7pVTmz7TghZx+\
Sy5m4vfPevXviWS4ox9dUPo10MZ+KoyAsbdVdW6UcJQ486XU7J9HtTA011pfijWbLYdtpzxBhiNLT/\
ooT8OaWhFTOtGRlc8EckL5tTCWq2avLJHeTXluHSEFEq/\
nR02zMHHuqba868NdQJX2ZLo4kwzFFblqI1gnSbGrKLApNvgqa7pcOlVO18FqhjPBEWrC4bEDROd5j\
krmYR92ym/alFpyIsddePGuuV8HmwKFSnCku+Job7axCt4tT58vpdhpHnot2va12xHIhyWxgzsB/\
Yl3n/HKOAaHBatT1lmpk2XZaFresEkhMOwuC8kIXlkWT60CJbwouZYYzAiY2UBFozkwqudDWNLWZm5\
im451hAu/1zaSYM3nOHWT0V+D9/\
648pfM8hsPXoLK1VvANutkyHx0RKoL5oQuK1W00lN5ScYTFThdASDTo7L8ynlkNiXJJNSLPCc5uXla\
G5jKaNHHUwHnZ1Ddbqkqj6c2OMnqUTUTx4qM0CZ2RRJaaP8j+v4kmrpj/30L3uZU="|>,
 GeneratedCell->True,
 CellAutoOverwrite->
  True,ExpressionUUID->"a6f27cd9-5a42-4d59-adbc-563a565073d7"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.957664670695073*^9, 3.957664714229394*^9}, {
  3.957664784510058*^9, 
  3.957664797486575*^9}},ExpressionUUID->"9fd959b6-fe0d-4fcd-bd2a-\
e49498c54c7a"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.957664661253537*^9, 
  3.9576646660978518`*^9}},ExpressionUUID->"440586c9-7447-4ae9-b20a-\
b3e529a5e2ae"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "{x, x^2, a, b} /. x -> 3", Typeset`newq$$ =
    "{x, x^2, a, b} /. x -> 3", Typeset`chosen$$ = 
   "Limit[{x, x^2, a, b}, x -> 3]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {3.173828125, 7.826171875}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {3.173828125, 7.826171875}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "{x, x^2, a, b} /. x -> 3", 
                  Defer[
                   
                   Limit[{$CellContext`x, $CellContext`x^2, $CellContext`a, \
$CellContext`b}, $CellContext`x -> 3]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Limit", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"x", "^", "2"}], ",", " ", "a", ",", " ", "b"}], 
                    "}"}], ",", " ", 
                   RowBox[{"x", " ", "->", " ", "3"}]}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Limit", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"x", "^", "2"}], ",", " ", "a", ",", " ", "b"}], 
                    "}"}], ",", " ", 
                   RowBox[{"x", " ", "->", " ", "3"}]}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Limit", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"x", "^", "2"}], ",", " ", "a", ",", " ", "b"}], 
                    "}"}], ",", " ", 
                    RowBox[{"x", " ", "->", " ", "3"}]}], "]"}]], "Input"], 
                  All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "{x, x^2, a, b} /. x -> 3", 
                    Defer[
                    
                    Limit[{$CellContext`x, $CellContext`x^2, $CellContext`a, \
$CellContext`b}, $CellContext`x -> 3]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Limit", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"x", "^", "2"}], ",", " ", "a", ",", " ", "b"}], 
                    "}"}], ",", " ", 
                    RowBox[{"x", " ", "->", " ", "3"}]}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Limit", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"x", "^", "2"}], ",", " ", "a", ",", " ", "b"}], 
                    "}"}], ",", " ", 
                    RowBox[{"x", " ", "->", " ", "3"}]}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Limit", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"x", "^", "2"}], ",", " ", "a", ",", " ", "b"}], 
                    "}"}], ",", " ", 
                    RowBox[{"x", " ", "->", " ", "3"}]}], "]"}]], "Input"], 
                    All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[70]:=",ExpressionUUID->"61ea96b4-bdaf-4c41-a090-e62fe66207ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "9", ",", "a", ",", "b"}], "}"}]], "Output",
 CellChangeTimes->{3.95766552362011*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"899d1fe8-c83d-4b27-8427-350d5719639b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolynomialReduce", "[", 
  RowBox[{"3", ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[71]:=",ExpressionUUID->"e4208638-b4d6-41a6-9a4f-b492acbed556"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", "0", ",", "0"}], "}"}], ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.957665536140088*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"87065f5d-fcce-4723-9913-9e00076f7f60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Length", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "3"], ",", "0", ",", "0"}], "}"}], ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", "1", "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[72]:=",ExpressionUUID->"d329144d-3e55-4136-affa-c83b63f026d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.9576655630812607`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"0927b08f-31a2-40a9-9721-a18fa7420d38"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "0"}], "}"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[73]:=",ExpressionUUID->"b96f4209-da04-4789-b268-16bf2e1547fb"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.957665572913303*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"33b4686d-7bb2-45bf-a07e-d1cd3ae892db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrimePi", "[", "3", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[74]:=",ExpressionUUID->"ea071b8d-871c-401e-a6b7-4940796f4679"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.957665585346361*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"27b129b0-8802-4449-8285-203b35226901"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrimePi", "[", "2", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[75]:=",ExpressionUUID->"e0c66bd0-0166-4aab-a776-f3714883c3df"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.957665590484949*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"a7352ae1-83a8-4172-9ab1-c97030e55cc2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DivisorSigma", "[", 
   RowBox[{"1", ",", "1"}], "]"}], "\[Equal]", 
  RowBox[{"2", " ", "1"}]}]], "Input",
 NumberMarks->False,
 CellLabel->"In[76]:=",ExpressionUUID->"9e94599b-fab6-4298-b4de-577cae86dc02"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.957665598119677*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"707fa34b-02ff-4d30-b570-e7f9a457426b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "DivisorSigma[1, 2] == 3", Typeset`newq$$ = 
   "DivisorSigma[1, 2] == 3", Typeset`chosen$$ = "DivisorSigma[1, 2] == 3", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {3.173828125, 7.826171875}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {3.173828125, 7.826171875}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "DivisorSigma[1, 2] == 3", 
                  Defer[DivisorSigma[1, 2] == 3], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  RowBox[{"DivisorSigma", "[", 
                   RowBox[{"1", ",", " ", "2"}], "]"}], " ", "==", " ", "3"}],
                 
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  RowBox[{"DivisorSigma", "[", 
                   RowBox[{"1", ",", " ", "2"}], "]"}], " ", "==", " ", "3"}],
                 
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    RowBox[{"DivisorSigma", "[", 
                    RowBox[{"1", ",", " ", "2"}], "]"}], " ", "==", " ", 
                    "3"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "DivisorSigma[1, 2] == 3", 
                    Defer[DivisorSigma[1, 2] == 3], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    RowBox[{"DivisorSigma", "[", 
                    RowBox[{"1", ",", " ", "2"}], "]"}], " ", "==", " ", "3"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    RowBox[{"DivisorSigma", "[", 
                    RowBox[{"1", ",", " ", "2"}], "]"}], " ", "==", " ", "3"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    RowBox[{"DivisorSigma", "[", 
                    RowBox[{"1", ",", " ", "2"}], "]"}], " ", "==", " ", 
                    "3"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[77]:=",ExpressionUUID->"5ed97931-6547-4f6b-8f72-c3e1b490e244"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.957665669013604*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"fad03239-686c-4707-9522-4ab3407281df"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.95766624087316*^9, 
  3.957666240874998*^9}},ExpressionUUID->"dc4a284b-f881-4d47-979d-\
534b723a4db3"]
},
WindowSize->{606, 479.25},
WindowMargins->{{155.25, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"14.2 for Linux x86 (64-bit) (March 16, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"13851da7-0a9d-49f0-8f39-58746580cab2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[554, 20, 261, 7, 36, "Message",ExpressionUUID->"fc34b479-28f4-427b-a4d9-34548ca11cd1"],
Cell[CellGroupData[{
Cell[840, 31, 15361, 369, 63, "WolframAlphaShortInput",ExpressionUUID->"1c1a5709-ddb5-4452-856f-4098e593c28e"],
Cell[16204, 402, 315, 8, 52, "Output",ExpressionUUID->"8259573c-58f8-4add-a20d-7ababf62d4ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16556, 415, 326, 9, 68, "Input",ExpressionUUID->"4db02d7e-4cb2-494f-af92-0d4ec38f5dbf"],
Cell[16885, 426, 165, 2, 33, "Output",ExpressionUUID->"3a3d83be-196e-43b3-bf5a-627f02b6bb58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17087, 433, 180, 3, 46, "Input",ExpressionUUID->"24d8a57d-e8b8-4644-b8af-50a46e0557f2"],
Cell[17270, 438, 149, 2, 33, "Output",ExpressionUUID->"56f2c54e-4d45-477d-a1c4-fb0d052f350e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17456, 445, 161, 3, 46, "Input",ExpressionUUID->"709d392d-04c1-44fc-af06-e25fff88fffc"],
Cell[17620, 450, 217, 4, 33, "Output",ExpressionUUID->"6d4294be-6e3f-44d7-93cf-147fd4be27fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17874, 459, 225, 5, 46, "Input",ExpressionUUID->"533e440b-67e8-4422-bdf0-a10a904af6af"],
Cell[18102, 466, 149, 2, 33, "Output",ExpressionUUID->"db1a2a16-9c76-487b-8167-0112ab6a46df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18288, 473, 160, 3, 46, "Input",ExpressionUUID->"04fd8193-3dbd-4345-a210-583495c87500"],
Cell[18451, 478, 149, 2, 33, "Output",ExpressionUUID->"82dcf064-8668-4505-9a8f-42fe809dba3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18637, 485, 160, 3, 46, "Input",ExpressionUUID->"17ca5082-6155-41d1-91e6-0aeb3749b51b"],
Cell[18800, 490, 148, 2, 33, "Output",ExpressionUUID->"560ec940-3de9-4463-a906-764ea69f48f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18985, 497, 159, 3, 46, "Input",ExpressionUUID->"91142a34-a3d9-48ea-abf6-3382235367e0"],
Cell[19147, 502, 148, 2, 33, "Output",ExpressionUUID->"92d3a54b-c247-41ff-bfd0-b336fd557ca3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19332, 509, 160, 3, 46, "Input",ExpressionUUID->"abb3f532-5fcc-44be-b09f-e55582908c39"],
Cell[19495, 514, 149, 2, 33, "Output",ExpressionUUID->"df385d8d-5c4c-48ef-a9c4-e60e8377f128"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19681, 521, 242, 6, 46, "Input",ExpressionUUID->"b57884b9-c438-4447-b7ee-7aecfe66c2eb"],
Cell[19926, 529, 153, 2, 33, "Output",ExpressionUUID->"7821df8d-c3a7-45df-b95f-9938994bd4e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20116, 536, 18061, 427, 87, "WolframAlphaShortInput",ExpressionUUID->"f4ba3344-0d25-4d04-8c01-54e391835f9a"],
Cell[38180, 965, 646, 19, 50, "Output",ExpressionUUID->"417fca12-9a53-4e94-8416-ed534682c63a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38863, 989, 679, 21, 144, "Input",ExpressionUUID->"3137833d-4e30-4ce9-be30-15630ecfc54f"],
Cell[39545, 1012, 1515, 41, 126, "Output",ExpressionUUID->"4730cf8f-4033-4d66-a7c5-7d26d325cd0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41097, 1058, 1571, 43, 227, "Input",ExpressionUUID->"37988997-5a54-48f7-9cc0-e00f9384bab5"],
Cell[42671, 1103, 204, 4, 33, "Output",ExpressionUUID->"eab47f07-5234-4271-a6a2-cce0fc91984f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42912, 1112, 211, 5, 46, "Input",ExpressionUUID->"5a7e4aa5-405e-44f6-beeb-3459be61bcb4"],
Cell[43126, 1119, 149, 2, 33, "Output",ExpressionUUID->"bbe76cc0-7832-4b8b-9789-0c1abcd8cc6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43312, 1126, 161, 3, 46, "Input",ExpressionUUID->"45f3931d-d926-406b-acb9-60cde8df6232"],
Cell[43476, 1131, 214, 4, 33, "Output",ExpressionUUID->"cffcaf97-db90-4355-91ae-c615055f35dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43727, 1140, 224, 5, 46, "Input",ExpressionUUID->"346d30ee-1c0f-4e44-8413-891e1a059444"],
Cell[43954, 1147, 149, 2, 33, "Output",ExpressionUUID->"e44aed57-c33f-4929-b36c-c3929b9916d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44140, 1154, 160, 3, 46, "Input",ExpressionUUID->"2dca06e2-da8a-46b7-99ec-1a0e09bf7e3a"],
Cell[44303, 1159, 151, 2, 33, "Output",ExpressionUUID->"3e1e7454-818e-47d1-98c2-4ef10f0eeab0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44491, 1166, 158, 3, 46, "Input",ExpressionUUID->"9ce7fbb6-ad61-4855-a4a0-ba4898e81046"],
Cell[44652, 1171, 196, 4, 33, "Output",ExpressionUUID->"825d68de-6785-4bee-a0e3-609cf7e77582"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44885, 1180, 203, 5, 46, "Input",ExpressionUUID->"3a9ef06e-6ee5-46ca-bfe5-4fc54477fd41"],
Cell[45091, 1187, 149, 2, 33, "Output",ExpressionUUID->"a7e41e29-b546-487c-8ee5-24a5fa16010e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45277, 1194, 160, 3, 46, "Input",ExpressionUUID->"5d62e1c7-c5b1-4ddf-97d7-bb40141ba7d7"],
Cell[45440, 1199, 151, 2, 33, "Output",ExpressionUUID->"1b073e13-d0b5-4351-9980-7ae4c6e58483"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45628, 1206, 201, 4, 46, "Input",ExpressionUUID->"568e8d83-b507-464d-ab98-6cc0e9f6c866"],
Cell[45832, 1212, 157, 2, 33, "Output",ExpressionUUID->"eacabafb-3212-4250-81e3-20328102143e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46026, 1219, 206, 4, 46, "Input",ExpressionUUID->"bb398167-b4c9-4179-bbe1-fe13ad252888"],
Cell[46235, 1225, 151, 2, 33, "Output",ExpressionUUID->"c2eb6f95-6c45-471f-a2c2-7d3036f287dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46423, 1232, 184, 4, 46, "Input",ExpressionUUID->"c2efa3ee-f984-42d7-bc3e-678448ed38dc"],
Cell[46610, 1238, 329, 11, 46, "Output",ExpressionUUID->"bd9ddada-27a1-42dd-8f11-6c46e49c8b58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46976, 1254, 127, 2, 29, "Input",ExpressionUUID->"a7d6dd7b-c934-455d-bd53-69e986d10a73"],
Cell[47106, 1258, 149, 2, 33, "Output",ExpressionUUID->"71127234-3eba-4372-beb8-4bf980044b4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47292, 1265, 242, 6, 46, "Input",ExpressionUUID->"b2844a12-03ce-45b1-a831-73cd8394a089"],
Cell[47537, 1273, 155, 2, 33, "Output",ExpressionUUID->"b67d854a-82f2-4279-a3b8-13d612861b08"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47729, 1280, 15175, 362, 63, "WolframAlphaShortInput",ExpressionUUID->"84a7bd69-b38d-414f-9fe9-57af21fb565c"],
Cell[62907, 1644, 369, 9, 48, "Output",ExpressionUUID->"a65c5e30-30bb-4841-8aaf-d67ae2471acf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63313, 1658, 388, 10, 61, "Input",ExpressionUUID->"821d3039-9cf1-442e-822c-003884a8d5b2"],
Cell[63704, 1670, 504, 14, 45, "Output",ExpressionUUID->"65f5edaa-5674-469a-a60c-f10aff7b3fdf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64245, 1689, 528, 15, 59, "Input",ExpressionUUID->"0a909130-fece-4f47-89f6-18f8f54a17d9"],
Cell[64776, 1706, 369, 9, 48, "Output",ExpressionUUID->"cba91a54-76fd-4023-ad24-87a96ea8c211"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65182, 1720, 471, 13, 65, "Input",ExpressionUUID->"8119234d-a4d2-416a-8c42-6f021b196211"],
Cell[65656, 1735, 529, 15, 52, "Output",ExpressionUUID->"e077b590-9250-4db1-82e2-645a01659ef9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66222, 1755, 672, 20, 66, "Input",ExpressionUUID->"011d27f0-8bee-4ad4-8d90-46fb78b09724"],
Cell[66897, 1777, 11283, 232, 249, "Output",ExpressionUUID->"3179d14e-7212-4a69-a5eb-12ea7bb0a4ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78217, 2014, 672, 20, 66, "Input",ExpressionUUID->"1b8dff6e-baa3-48f7-8deb-593427a69773"],
Cell[78892, 2036, 11283, 232, 249, "Output",ExpressionUUID->"2be17255-e870-4625-85c1-e86ecd295fea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90212, 2273, 15651, 369, 63, "WolframAlphaShortInput",ExpressionUUID->"02524740-1231-4b0c-896b-9c40a6b91ee9"],
Cell[105866, 2644, 410, 10, 48, "Output",ExpressionUUID->"b8b19aa4-8d08-4d34-adee-1117a7d40d00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106313, 2659, 515, 14, 65, "Input",ExpressionUUID->"831314a0-a53c-483f-87b1-4de3b8a38966"],
Cell[106831, 2675, 594, 17, 52, "Output",ExpressionUUID->"7652dab6-827a-46bb-b367-f874f0ed6784"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107462, 2697, 621, 18, 66, "Input",ExpressionUUID->"2da2d35d-dfb8-4ba7-8960-339534f57d5d"],
Cell[108086, 2717, 593, 17, 52, "Output",ExpressionUUID->"08fffcf9-5499-49de-9d95-46a51356ab9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108716, 2739, 740, 22, 97, "Input",ExpressionUUID->"564f7805-a7cf-49d6-aabb-85ad19038b24"],
Cell[109459, 2763, 11261, 232, 244, "Output",ExpressionUUID->"214c1d8a-2526-4763-a6db-58773c35fdbb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120757, 3000, 500, 13, 54, "ChatInput",ExpressionUUID->"073ab179-c043-4f6c-b7c2-48478d4024fa"],
Cell[121260, 3015, 18573, 379, 577, "ChatOutput",ExpressionUUID->"e8240332-98df-4950-a9fd-19c2777b606d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139870, 3399, 18794, 451, 87, "WolframAlphaShortInput",ExpressionUUID->"c5be455f-2171-46e2-814d-83f8f01b8e64"],
Cell[158667, 3852, 701, 21, 80, "Output",ExpressionUUID->"8a98e92e-5828-4515-b4ba-fb3f404168f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159405, 3878, 738, 23, 145, "Input",ExpressionUUID->"8eb702a8-0730-4ff8-a82e-078d2e3ec4a8"],
Cell[160146, 3903, 1842, 54, 232, "Output",ExpressionUUID->"09d6f61a-716f-49c8-bb40-a7cf7bee371f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162025, 3962, 165, 3, 46, "Input",ExpressionUUID->"f4745ade-ea87-4d66-8a86-bcb37052d2c1"],
Cell[162193, 3967, 151, 2, 33, "Output",ExpressionUUID->"2acd2e43-69bd-4ad9-9a5a-e8a209878cb2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162381, 3974, 160, 3, 46, "Input",ExpressionUUID->"4b354944-b9b9-4154-bacd-05cff701c8ea"],
Cell[162544, 3979, 149, 2, 33, "Output",ExpressionUUID->"8ca07ee4-7ae9-445d-b9d9-94fa246bfe35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162730, 3986, 160, 3, 46, "Input",ExpressionUUID->"26859653-f330-4b37-bf9a-9cf114d05af3"],
Cell[162893, 3991, 149, 2, 33, "Output",ExpressionUUID->"3f83143e-cb12-4519-bddc-8f3a765e2f7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163079, 3998, 242, 6, 46, "Input",ExpressionUUID->"2a0554e3-9d9b-4de0-abcd-a4fd8befdcb4"],
Cell[163324, 4006, 155, 2, 33, "Output",ExpressionUUID->"f2552023-c59c-40cd-bccd-9c530cf44d6a"]
}, Open  ]],
Cell[163494, 4011, 14482, 358, 67, "WolframAlphaShortInput",ExpressionUUID->"52aec797-f4c3-4f0c-9f42-956e8833c727"],
Cell[CellGroupData[{
Cell[178001, 4373, 502, 13, 54, "ChatInput",ExpressionUUID->"dd23089f-282a-455d-b6d8-dd2118becdf0"],
Cell[178506, 4388, 19456, 390, 698, "ChatOutput",ExpressionUUID->"e7107ab7-85c4-45d4-a208-74efa629011b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197999, 4783, 574, 14, 36, "Input",ExpressionUUID->"e2d960f7-0d47-455d-9c2f-ef3e18d6141d"],
Cell[198576, 4799, 1371, 33, 197, "Output",ExpressionUUID->"3d3dde1b-6ba4-4a27-aaa7-48fd5fe1b1b7"]
}, Open  ]],
Cell[199962, 4835, 173, 3, 49, "Input",ExpressionUUID->"07b1c812-1b33-433d-95c4-523ae321d45b"],
Cell[CellGroupData[{
Cell[200160, 4842, 503, 12, 36, "Input",ExpressionUUID->"502f85b9-4d26-47b6-895d-f48dcd85ccad"],
Cell[200666, 4856, 1373, 33, 197, "Output",ExpressionUUID->"25c3551d-7554-4559-b979-726d1e454b9c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202076, 4894, 14103, 348, 66, "WolframAlphaShortInput",ExpressionUUID->"4bcdfa32-bfc6-4c81-912d-4ec2019a30ba"],
Cell[216182, 5244, 282, 7, 33, "Output",ExpressionUUID->"b503df9d-48f5-468a-bb70-42d30ac3ec0d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216501, 5256, 469, 12, 107, "Input",ExpressionUUID->"56aa3d1d-6fcf-4391-9ee0-6ad3e296144d"],
Cell[216973, 5270, 738, 15, 42, "Message",ExpressionUUID->"e737f332-ce1a-4d13-a6e9-2caa663a4fc0"],
Cell[217714, 5287, 894, 17, 60, "Message",ExpressionUUID->"f95e6325-e6c6-4a8a-8a47-cb5185b8755a"],
Cell[218611, 5306, 685, 14, 26, "Message",ExpressionUUID->"7ebe1f2a-3882-4977-8cfa-dc9cc8072206"],
Cell[219299, 5322, 841, 16, 44, "Message",ExpressionUUID->"084b30aa-8282-400a-854e-dc0dcd8b4249"],
Cell[220143, 5340, 400, 10, 33, "Output",ExpressionUUID->"34c5e682-1e0a-433c-9c10-d748205568ce"]
}, Open  ]],
Cell[220558, 5353, 154, 3, 29, "Input",ExpressionUUID->"dfb8fcb4-fcaa-4557-b07d-f001d497be05"],
Cell[CellGroupData[{
Cell[220737, 5360, 514, 13, 54, "ChatInput",ExpressionUUID->"6e9fe4eb-b27f-44b7-95af-87573cc35d56"],
Cell[221254, 5375, 22069, 424, 747, "ChatOutput",ExpressionUUID->"a6f27cd9-5a42-4d59-adbc-563a565073d7"]
}, Open  ]],
Cell[243338, 5802, 220, 4, 49, "Input",ExpressionUUID->"9fd959b6-fe0d-4fcd-bd2a-e49498c54c7a"],
Cell[243561, 5808, 154, 3, 29, "Input",ExpressionUUID->"440586c9-7447-4ae9-b20a-b3e529a5e2ae"],
Cell[CellGroupData[{
Cell[243740, 5815, 14639, 357, 65, "WolframAlphaShortInput",ExpressionUUID->"61ea96b4-bdaf-4c41-a090-e62fe66207ef"],
Cell[258382, 6174, 213, 4, 33, "Output",ExpressionUUID->"899d1fe8-c83d-4b27-8427-350d5719639b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258632, 6183, 310, 8, 46, "Input",ExpressionUUID->"e4208638-b4d6-41a6-9a4f-b492acbed556"],
Cell[258945, 6193, 280, 8, 45, "Output",ExpressionUUID->"87065f5d-fcce-4723-9913-9e00076f7f60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259262, 6206, 360, 11, 59, "Input",ExpressionUUID->"d329144d-3e55-4136-affa-c83b63f026d6"],
Cell[259625, 6219, 196, 4, 33, "Output",ExpressionUUID->"0927b08f-31a2-40a9-9721-a18fa7420d38"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259858, 6228, 205, 5, 46, "Input",ExpressionUUID->"b96f4209-da04-4789-b268-16bf2e1547fb"],
Cell[260066, 6235, 149, 2, 33, "Output",ExpressionUUID->"33b4686d-7bb2-45bf-a07e-d1cd3ae892db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260252, 6242, 160, 3, 46, "Input",ExpressionUUID->"ea071b8d-871c-401e-a6b7-4940796f4679"],
Cell[260415, 6247, 149, 2, 33, "Output",ExpressionUUID->"27b129b0-8802-4449-8285-203b35226901"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260601, 6254, 160, 3, 46, "Input",ExpressionUUID->"e0c66bd0-0166-4aab-a776-f3714883c3df"],
Cell[260764, 6259, 149, 2, 33, "Output",ExpressionUUID->"a7352ae1-83a8-4172-9ab1-c97030e55cc2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260950, 6266, 242, 6, 46, "Input",ExpressionUUID->"9e94599b-fab6-4298-b4de-577cae86dc02"],
Cell[261195, 6274, 153, 2, 33, "Output",ExpressionUUID->"707fa34b-02ff-4d30-b570-e7f9a457426b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261385, 6281, 13409, 329, 66, "WolframAlphaShortInput",ExpressionUUID->"5ed97931-6547-4f6b-8f72-c3e1b490e244"],
Cell[274797, 6612, 152, 2, 33, "Output",ExpressionUUID->"fad03239-686c-4707-9522-4ab3407281df"]
}, Open  ]],
Cell[274964, 6617, 151, 3, 29, "Input",ExpressionUUID->"dc4a284b-f881-4d47-979d-534b723a4db3"]
}
]
*)

